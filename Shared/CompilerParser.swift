//  CompilerParser

import Cocoa



    extension CompilerParser : SemanticErrorDelegate {}


protocol CompilerParserError {
	func error(parser: CompilerParser, line: Int, column: Int, filename: String?, errorCode: Int, data: [String: AnyObject]?)
}

class CompilerParser {
	/*
	 *	Yacc Constants
	 */

	public static let AND                                           = 0x00110002
	public static let ASSIGN                                        = 0x00110003
	public static let BOOLEAN                                       = 0x00110004
	public static let CHAR                                          = 0x00110005
	public static let COLON                                         = 0x00110006
	public static let COMMA                                         = 0x00110007
	public static let CONST                                         = 0x00110008
	public static let CPTRG                                         = 0x00110009
	public static let CTEC                                          = 0x0011000a
	public static let CTEF                                          = 0x0011000b
	public static let CTEI                                          = 0x0011000c
	public static let CTES                                          = 0x0011000d
	public static let DIF                                           = 0x0011000e
	public static let DIVIDE                                        = 0x0011000f
	public static let DO                                            = 0x00110010
	public static let DOT                                           = 0x00110011
	public static let DOUBLE                                        = 0x00110012
	public static let ELSE                                          = 0x00110013
	public static let EQ                                            = 0x00110014
	public static let F                                             = 0x00110015
	public static let FLOAT                                         = 0x00110016
	public static let FOR                                           = 0x00110017
	public static let FUNC                                          = 0x00110018
	public static let FUNCTION                                      = 0x00110019
	public static let GE                                            = 0x0011001a
	public static let GT                                            = 0x0011001b
	public static let ID                                            = 0x0011001c
	public static let IF                                            = 0x0011001d
	public static let INCPTRG                                       = 0x0011001e
	public static let INPUT                                         = 0x0011001f
	public static let INT                                           = 0x00110020
	public static let INTEGERCLASS                                  = 0x00110021
	public static let LBRACE                                        = 0x00110022
	public static let LBRACK                                        = 0x00110023
	public static let LE                                            = 0x00110024
	public static let LPAREN                                        = 0x00110025
	public static let LSBRAKE                                       = 0x00110026
	public static let LT                                            = 0x00110027
	public static let MAIN                                          = 0x00110028
	public static let MINUS                                         = 0x00110029
	public static let NEQ                                           = 0x0011002a
	public static let NEW                                           = 0x0011002b
	public static let NLL                                           = 0x0011002c
	public static let NOT                                           = 0x0011002d
	public static let NUMBER                                        = 0x0011002e
	public static let OF                                            = 0x0011002f
	public static let OR                                            = 0x00110030
	public static let PGR                                           = 0x00110031
	public static let PLUS                                          = 0x00110032
	public static let PNT                                           = 0x00110033
	public static let PRINT                                         = 0x00110034
	public static let QM                                            = 0x00110035
	public static let RBRACE                                        = 0x00110036
	public static let RPAREN                                        = 0x00110037
	public static let RSBRAKE                                       = 0x00110038
	public static let RTN                                           = 0x00110039
	public static let SEMICOLON                                     = 0x0011003a
	public static let STR                                           = 0x0011003b
	public static let STRINGCLASS                                   = 0x0011003c
	public static let T                                             = 0x0011003d
	public static let THEN                                          = 0x0011003e
	public static let TIMES                                         = 0x0011003f
	public static let TYPE                                          = 0x00110040
	public static let UMINUS                                        = 0x00110041
	public static let VAR                                           = 0x00110042
	public static let VOID                                          = 0x00110043
	public static let WHILE                                         = 0x00110044
	public static let arrayA                                        = 0x00110045

	// Various constants
	private static let K_ACCEPTSTATE: UInt16 = 1219        // Final accept state
	private static let K_EOFTOKEN: Int       = 0x110000     // EOF token ID
	private static let K_ERRORTOKEN: Int     = 0x110001     // Error token ID
	private static let K_FIRSTTOKEN: Int     = 0x110002     // Error token ID
	private static let K_MAXSYMBOL:Int       = 0x11008f     // Max ID for all symbols
	private static let K_STARTSTATE: UInt16  = 0        // Start state is always 0

	/*  TokenArray
	 *
	 *      Array of non-Unicode token values for error reporting
	 */

	private static let TokenArray: [String] = [
		"AND",
		"ASSIGN",
		"BOOLEAN",
		"CHAR",
		"COLON",
		"COMMA",
		"CONST",
		"CPTRG",
		"CTEC",
		"CTEF",
		"CTEI",
		"CTES",
		"DIF",
		"DIVIDE",
		"DO",
		"DOT",
		"DOUBLE",
		"ELSE",
		"EQ",
		"F",
		"FLOAT",
		"FOR",
		"FUNC",
		"FUNCTION",
		"GE",
		"GT",
		"ID",
		"IF",
		"INCPTRG",
		"INPUT",
		"INT",
		"INTEGERCLASS",
		"LBRACE",
		"LBRACK",
		"LE",
		"LPAREN",
		"LSBRAKE",
		"LT",
		"MAIN",
		"MINUS",
		"NEQ",
		"NEW",
		"NLL",
		"NOT",
		"NUMBER",
		"OF",
		"OR",
		"PGR",
		"PLUS",
		"PNT",
		"PRINT",
		"QM",
		"RBRACE",
		"RPAREN",
		"RSBRAKE",
		"RTN",
		"SEMICOLON",
		"STR",
		"STRINGCLASS",
		"T",
		"THEN",
		"TIMES",
		"TYPE",
		"UMINUS",
		"VAR",
		"VOID",
		"WHILE",
		"arrayA"
	]

	/*  RuleLength
	 *
	 *      The number of tokens a reduce action removes from the stack
	 */

	private static let RuleLength: [UInt8] = [
		 1,  1,  2,  3,  1,  3,  1,  2, 
		 5,  8,  3,  3,  4,  1,  1,  1, 
		 1,  2,  8,  6,  1,  1,  1,  5, 
		 1,  1,  2,  1,  1,  1,  1,  1, 
		 2,  4,  4,  5,  3,  1,  2,  2, 
		 2,  2,  1,  1,  1,  1,  2,  3, 
		 1,  1,  2,  2,  3,  2,  6,  2, 
		 1,  4,  1,  3,  1,  1,  1,  3, 
		 1,  1,  1,  1,  1,  2,  1,  1, 
		 3,  1,  2,  1,  1,  1,  1,  1, 
		 1,  1,  1,  8,  5,  1,  1,  2, 
		 2,  8,  7,  1,  6,  5,  1,  3, 
		 1,  2,  3,  4,  1,  3,  4,  3, 
		 1,  3,  1,  3,  1,  1,  1,  1, 
		 2,  4,  5,  3,  3,  4,  1,  1, 
		 6,  5,  5,  4,  2,  1,  1,  1, 
		 2,  1,  1,  1,  1,  3,  1,  1, 
		 3,  5,  1,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  1,  1,  1,  1, 
		 1,  1,  2,  1,  3,  4,  4,  4, 
		 5,  4,  6,  1,  4,  5,  3,  6, 
		 3,  4
	]

	/*  RuleProduction
	 *
	 *      The prodution ID we reduce to
	 */

	private static let RuleProduction: [UInt32] = [
		0x110046, 0x110047, 0x110047, 0x110048, 0x110048, 0x110049, 0x110049, 0x11004a, 
		0x11004a, 0x11004a, 0x11004a, 0x11004b, 0x11004b, 0x11004c, 0x11004c, 0x11004d, 
		0x11004d, 0x11004e, 0x11004f, 0x11004f, 0x110050, 0x110051, 0x110052, 0x110053, 
		0x110054, 0x110055, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 
		0x110057, 0x110057, 0x110058, 0x110059, 0x11005a, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005c, 0x11005c, 0x11005d, 0x11005d, 0x11005d, 0x11005e, 0x11005f, 
		0x110060, 0x110061, 0x110062, 0x110062, 0x110063, 0x110064, 0x110064, 0x110064, 
		0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 
		0x110065, 0x110065, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 
		0x110066, 0x110066, 0x110066, 0x110067, 0x110067, 0x110068, 0x110068, 0x110068, 
		0x110068, 0x110069, 0x110069, 0x110069, 0x11006a, 0x11006a, 0x11006b, 0x11006b, 
		0x11006c, 0x11006d, 0x11006d, 0x11006e, 0x11006f, 0x11006f, 0x110070, 0x110070, 
		0x110071, 0x110071, 0x110072, 0x110072, 0x110073, 0x110073, 0x110074, 0x110074, 
		0x110075, 0x110075, 0x110075, 0x110075, 0x110076, 0x110076, 0x110077, 0x110078, 
		0x110079, 0x110079, 0x110079, 0x110079, 0x11007a, 0x11007a, 0x11007b, 0x11007b, 
		0x11007c, 0x11007d, 0x11007e, 0x11007f, 0x110080, 0x110080, 0x110080, 0x110081, 
		0x110081, 0x110082, 0x110083, 0x110083, 0x110084, 0x110085, 0x110086, 0x110086, 
		0x110087, 0x110087, 0x110087, 0x110088, 0x110088, 0x110088, 0x110088, 0x110088, 
		0x110088, 0x110088, 0x110089, 0x11008a, 0x11008b, 0x11008b, 0x11008b, 0x11008b, 
		0x11008b, 0x11008b, 0x11008b, 0x11008b, 0x11008c, 0x11008c, 0x11008d, 0x11008d, 
		0x11008e, 0x11008e
	]

	/*
	 *  The following tables are compressed using CSR format.
	 *  See https://en.wikipedia.org/wiki/Sparse_matrix
	 */

	/*  ActionI, J, A
	 *
	 *      Compressed action index table.
	 */

	private static let ActionI:[UInt32] = [
		     0,     15,     18,     19,     20,     30,     31,     32, 
		    40,     42,     43,     45,     46,     47,     49,     50, 
		    51,     66,     67,     70,     73,     74,     77,     78, 
		    79,     81,     82,     97,    100,    101,    111,    112, 
		   122,    136,    150,    164,    178,    192,    208,    217, 
		   226,    240,    254,    268,    269,    283,    286,    300, 
		   312,    316,    328,    332,    346,    360,    374,    388, 
		   402,    416,    430,    431,    447,    448,    457,    466, 
		   480,    481,    495,    496,    497,    511,    512,    513, 
		   514,    515,    516,    517,    518,    519,    533,    534, 
		   535,    538,    552,    564,    568,    580,    584,    585, 
		   599,    613,    614,    630,    639,    640,    641,    645, 
		   649,    653,    654,    658,    659,    663,    667,    681, 
		   685,    686,    690,    704,    708,    712,    716,    725, 
		   734,    743,    747,    761,    765,    769,    778,    787, 
		   796,    808,    817,    826,    835,    847,    874,    879, 
		   880,    881,    908,    912,    940,    950,    961,    972, 
		   983,    994,   1005,   1006,   1021,   1022,   1031,   1042, 
		  1043,   1053,   1064,   1065,   1066,   1077,   1105,   1133, 
		  1161,   1162,   1190,   1191,   1219,   1247,   1248,   1249, 
		  1260,   1261,   1262,   1274,   1283,   1284,   1293,   1295, 
		  1296,   1298,   1326,   1327,   1328,   1356,   1357,   1358, 
		  1386,   1414,   1428,   1429,   1443,   1444,   1453,   1454, 
		  1455,   1457,   1459,   1461,   1462,   1464,   1465,   1467, 
		  1469,   1483,   1485,   1486,   1490,   1504,   1508,   1510, 
		  1512,   1514,   1541,   1544,   1545,   1572,   1574,   1575, 
		  1577,   1578,   1581,   1584,   1594,   1604,   1618,   1632, 
		  1646,   1660,   1674,   1690,   1699,   1708,   1722,   1736, 
		  1750,   1751,   1765,   1768,   1782,   1794,   1798,   1810, 
		  1814,   1828,   1829,   1843,   1844,   1860,   1869,   1870, 
		  1871,   1875,   1879,   1883,   1884,   1888,   1889,   1893, 
		  1897,   1911,   1915,   1916,   1920,   1934,   1938,   1942, 
		  1946,   1955,   1959,   1973,   1977,   1981,   1990,   2002, 
		  2011,   2023,   2050,   2055,   2056,   2083,   2087,   2088, 
		  2092,   2093,   2098,   2103,   2113,   2114,   2115,   2116, 
		  2120,   2124,   2134,   2149,   2164,   2179,   2194,   2209, 
		  2226,   2235,   2244,   2259,   2274,   2289,   2290,   2292, 
		  2294,   2309,   2313,   2328,   2341,   2346,   2359,   2364, 
		  2378,   2379,   2393,   2394,   2411,   2420,   2421,   2422, 
		  2427,   2432,   2437,   2438,   2443,   2444,   2449,   2454, 
		  2469,   2474,   2475,   2480,   2495,   2500,   2505,   2510, 
		  2519,   2524,   2539,   2544,   2549,   2558,   2571,   2580, 
		  2593,   2620,   2626,   2627,   2654,   2659,   2660,   2665, 
		  2666,   2672,   2678,   2688,   2689,   2690,   2695,   2700, 
		  2710,   2711,   2716,   2719,   2722,   2725,   2728,   2731, 
		  2736,   2745,   2748,   2751,   2752,   2754,   2757,   2760, 
		  2763,   2772,   2774,   2783,   2784,   2789,   2794,   2799, 
		  2804,   2809,   2814,   2821,   2830,   2835,   2840,   2845, 
		  2850,   2855,   2858,   2861,   2864,   2873,   2876,   2885, 
		  2888,   2891,   2896,   2907,   2917,   2922,   2936,   2950, 
		  2964,   2978,   2992,   3008,   3017,   3026,   3040,   3054, 
		  3068,   3069,   3083,   3086,   3100,   3112,   3116,   3128, 
		  3132,   3146,   3147,   3161,   3162,   3178,   3187,   3188, 
		  3189,   3193,   3197,   3201,   3202,   3206,   3207,   3211, 
		  3215,   3229,   3233,   3234,   3238,   3252,   3256,   3260, 
		  3264,   3273,   3277,   3291,   3295,   3299,   3308,   3320, 
		  3329,   3341,   3368,   3373,   3374,   3401,   3405,   3406, 
		  3410,   3411,   3416,   3421,   3431,   3432,   3433,   3437, 
		  3441,   3451,   3452,   3456,   3457,   3461,   3472,   3482, 
		  3496,   3497,   3498,   3499,   3514,   3524,   3538,   3539, 
		  3540,   3555,   3565,   3566,   3567,   3582,   3596,   3598, 
		  3599,   3613,   3623,   3624,   3637,   3650,   3660,   3662, 
		  3663,   3664,   3673,   3674,   3683,   3684,   3685,   3687, 
		  3696,   3697,   3698,   3707,   3708,   3709,   3718,   3719, 
		  3746,   3747,   3748,   3750,   3751,   3752,   3756,   3766, 
		  3767,   3768,   3778,   3779,   3780,   3781,   3783,   3793, 
		  3794,   3795,   3796,   3798,   3808,   3809,   3810,   3812, 
		  3813,   3816,   3825,   3828,   3829,   3830,   3831,   3835, 
		  3839,   3840,   3841,   3850,   3851,   3852,   3853,   3862, 
		  3863,   3872,   3881,   3882,   3885,   3886,   3887,   3888, 
		  3891,   3892,   3893,   3895,   3896,   3897,   3924,   3925, 
		  3926,   3927,   3928,   3929,   3938,   3940,   3942,   3944, 
		  3946,   3948,   3952,   3961,   3963,   3965,   3967,   3969, 
		  3971,   3980,   3989,   3998,   3999,   4000,   4001,   4002, 
		  4003,   4006,   4015,   4016,   4017,   4018,   4019,   4020, 
		  4023,   4024,   4035,   4045,   4046,   4047,   4049,   4050, 
		  4051,   4052,   4053,   4056,   4058,   4069,   4079,   4081, 
		  4082,   4085,   4087,   4089,   4090,   4092,   4093,   4094, 
		  4095,   4096,   4097,   4098,   4099,   4100,   4101,   4102, 
		  4103,   4104,   4105,   4107,   4108,   4109,   4110,   4111, 
		  4120,   4129,   4130,   4132,   4133,   4134,   4135,   4136, 
		  4145,   4154,   4163,   4172,   4181,   4190,   4198,   4206, 
		  4214,   4222,   4230,   4240,   4249,   4257,   4265,   4273, 
		  4281,   4289,   4295,   4301,   4310,   4316,   4325,   4331, 
		  4334,   4342,   4353,   4363,   4371,   4372,   4381,   4389, 
		  4397,   4398,   4406,   4415,   4424,   4427,   4433,   4438, 
		  4441,   4455,   4456,   4457,   4471,   4476,   4477,   4482, 
		  4493,   4503,   4506,   4507,   4511,   4514,   4517,   4518, 
		  4521,   4532,   4542,   4557,   4558,   4574,   4584,   4599, 
		  4600,   4616,   4626,   4627,   4643,   4658,   4659,   4674, 
		  4687,   4696,   4697,   4698,   4699,   4704,   4705,   4706, 
		  4707,   4708,   4713,   4722,   4731,   4740,   4749,   4758, 
		  4767,   4778,   4787,   4796,   4805,   4814,   4823,   4832, 
		  4839,   4846,   4855,   4862,   4871,   4878,   4881,   4890, 
		  4901,   4911,   4920,   4921,   4931,   4940,   4949,   4950, 
		  4959,   4968,   4972,   4982,   4983,   4987,   4990,   5005, 
		  5006,   5008,   5023,   5024,   5028,   5039,   5049,   5063, 
		  5064,   5079,   5089,   5103,   5104,   5119,   5129,   5130, 
		  5145,   5159,   5160,   5174,   5187,   5196,   5197,   5198, 
		  5199,   5203,   5204,   5205,   5206,   5207,   5211,   5220, 
		  5228,   5236,   5244,   5252,   5260,   5270,   5279,   5287, 
		  5295,   5303,   5311,   5319,   5325,   5331,   5340,   5346, 
		  5355,   5361,   5364,   5372,   5383,   5393,   5401,   5402, 
		  5411,   5419,   5427,   5428,   5436,   5445,   5448,   5449, 
		  5451,   5454,   5468,   5469,   5470,   5484,   5486,   5496, 
		  5497,   5499,   5500,   5502,   5515,   5524,   5525,   5526, 
		  5527,   5529,   5530,   5531,   5532,   5533,   5535,   5544, 
		  5553,   5566,   5577,   5586,   5597,   5607,   5618,   5619, 
		  5631,   5642,   5653,   5654,   5665,   5670,   5675,   5680, 
		  5685,   5690,   5697,   5706,   5711,   5716,   5721,   5726, 
		  5731,   5734,   5737,   5746,   5749,   5758,   5761,   5764, 
		  5769,   5780,   5790,   5795,   5796,   5802,   5807,   5812, 
		  5813,   5818,   5846,   5874,   5902,   5930,   5939,   5948, 
		  5976,   5980,   5981,   6008,   6037,   6038,   6065,   6093, 
		  6094,   6122,   6123,   6152,   6181,   6191,   6192,   6193, 
		  6221,   6249,   6252,   6280,   6281,   6282,   6283,   6311, 
		  6312,   6340,   6368,   6369,   6397,   6407,   6408,   6409, 
		  6412,   6423,   6424,   6426,   6428,   6429,   6430,   6432, 
		  6443,   6453,   6464,   6465,   6477,   6487,   6488,   6500, 
		  6512,   6513,   6525,   6538,   6547,   6548,   6549,   6550, 
		  6578,   6579,   6580,   6581,   6582,   6610,   6611,   6613, 
		  6614,   6615,   6616,   6644,   6672,   6673,   6678,   6683, 
		  6693,   6694,   6695,   6699,   6703,   6713,   6714,   6718, 
		  6719,   6723,   6734,   6744,   6758,   6759,   6774,   6784, 
		  6798,   6799,   6814,   6824,   6825,   6840,   6854,   6855, 
		  6869,   6882,   6891,   6892,   6893,   6894,   6898,   6899, 
		  6900,   6901,   6902,   6906,   6920,   6921,   6935,   6936, 
		  6945,   6946,   6947,   6951,   6955,   6959,   6960,   6964, 
		  6965,   6969,   6973,   6987,   6991,   6992,   6996,   7010, 
		  7014,   7018,   7022,   7031,   7047,   7061,   7065,   7079, 
		  7083,   7092,   7104,   7113,   7125,   7136,   7146,   7160, 
		  7161,   7176,   7190,   7204,   7205,   7219,   7223,   7227, 
		  7254,   7259,   7260,   7287,   7291,   7292,   7296,   7297, 
		  7302,   7307,   7317,   7318,   7319,   7323,   7327,   7337, 
		  7338,   7342,   7343,   7347,   7360,   7369,   7370,   7371, 
		  7372,   7376,   7377,   7378,   7379,   7380,   7384,   7393, 
		  7401,   7409,   7417,   7425,   7433,   7443,   7452,   7460, 
		  7468,   7476,   7484,   7492,   7498,   7504,   7513,   7519, 
		  7528,   7534,   7537,   7545,   7556,   7566,   7574,   7575, 
		  7584,   7592,   7600,   7601,   7609,   7618,   7621,   7622, 
		  7623,   7650,   7652,   7653,   7680,   7681,   7682,   7683, 
		  7684,   7686,   7688,   7698,   7699,   7700,   7701,   7702, 
		  7712,   7713,   7714,   7717,   7731,   7732,   7733,   7743, 
		  7744,   7745,   7755,   7769,   7770,   7785,   7795,   7796, 
		  7811,   7824,   7833,   7834,   7835,   7836,   7837,   7838, 
		  7839,   7840,   7841,   7842,   7851,   7859,   7867,   7875, 
		  7883,   7891,   7901,   7910,   7918,   7926,   7934,   7942, 
		  7950,   7956,   7962,   7971,   7977,   7986,   7992,   7995, 
		  8003,   8014,   8024,   8032,   8033,   8042,   8050,   8058, 
		  8059,   8067,   8070,   8084,   8085,   8086,   8100,   8115, 
		  8116,   8117,   8132,   8133,   8134,   8135,   8162,   8163, 
		  8164,   8165,   8166,   8167,   8168,   8169,   8170,   8171, 
		  8172,   8173,   8174,   8175,   8176,   8177,   8178,   8179, 
		  8180,   8181,   8182,   8185,   8200,   8201,   8202,   8203, 
		  8218,   8219,   8234,   8249,   8251,   8253,   8255,   8257, 
		  8258,   8260,   8262,   8264,   8265,   8266,   8268,   8269, 
		  8270,   8271,   8272,   8273,   8275,   8276,   8284,   8292, 
		  8293,   8294,   8295,   8298,   8305,   8306,   8308,   8315, 
		  8316,   8317,   8320,   8322,   8323,   8324,   8325,   8352, 
		  8379,   8389,   8390,   8400,   8401,   8402,   8429,   8456, 
		  8483,   8484,   8511,   8512,   8539,   8566,   8567,   8568, 
		  8569,   8570,   8582,   8583,   8585,   8586,   8588,   8615, 
		  8616,   8617,   8644,   8645,   8646,   8673,   8700,   8728, 
		  8729,   8756,   8783,   8810,   8837,   8864,   8867,   8870, 
		  8871,   8898,   8926,   8927,   8954,   8981,   8982,   9009, 
		  9010,   9038,   9066,   9076,   9077,   9078,   9105,   9132, 
		  9135,   9162,   9163,   9164,   9165,   9192,   9193,   9220, 
		  9247,   9248,   9275,   9288,   9297,   9298,   9299,   9300, 
		  9327,   9328,   9329,   9330,   9331,   9358,   9359,   9361, 
		  9362,   9363,   9364,   9391,   9418,   9445,   9446,   9449, 
		  9457,   9458,   9459,   9460,   9487,   9490,   9491,   9494, 
		  9497,   9498,   9500,   9501,   9502,   9503,   9518,   9533
	]

	private static let ActionJ:[UInt32] = [
		0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 
		0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110001, 
		0x110018, 0x110028, 0x110042, 0x110042, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x110042, 0x110042, 
		0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x11003b, 0x110043, 
		0x11001c, 0x110042, 0x110042, 0x11001c, 0x110042, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110028, 0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 
		0x110028, 0x110000, 0x110001, 0x110018, 0x110028, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x110001, 0x110018, 0x110028, 0x110014, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110025, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x11003a, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 
		0x110006, 0x110006, 0x110025, 0x110006, 0x110022, 0x110006, 0x110006, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 0x110036, 0x110002, 
		0x110006, 0x110030, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 
		0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 
		0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110025, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 0x110035, 0x11003a, 0x110022, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110025, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x11001c, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x110042, 0x110025, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x110025, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x11001c, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 
		0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x110036, 0x11003a, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x110035, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x110035, 0x11003a, 0x110042, 
		0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 
		0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110025, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x11003a, 0x110035, 
		0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110025, 0x110035, 0x11003a, 
		0x110022, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 
		0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110013, 0x110035, 0x11003a, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110035, 0x11003a, 0x110036, 0x110035, 
		0x11003a, 0x110036, 0x110013, 0x110035, 0x11003a, 0x110013, 0x110035, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 
		0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x11003a, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110025, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 0x110035, 0x110037, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x110037, 0x110036, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110013, 0x110030, 0x110035, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110022, 0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110037, 0x110007, 0x110037, 0x110007, 0x110037, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 
		0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 
		0x110044, 0x110025, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x11003a, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110025, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x110036, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110007, 0x110013, 0x110030, 
		0x110035, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110036, 0x110002, 0x110007, 0x110013, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x110013, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110007, 0x110036, 0x11003a, 0x110007, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x110007, 0x110025, 0x110026, 0x110036, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110036, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110036, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110036, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110025, 
		0x110026, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 
		0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x110029, 
		0x110032, 0x110037, 0x110029, 0x110032, 0x110037, 0x110007, 0x110036, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110029, 0x110032, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 0x110037, 
		0x110029, 0x110032, 0x110037, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110038, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 
		0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110025, 0x11003a, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110025, 0x110002, 0x110030, 0x110035, 0x110038, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110036, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110036, 0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11003a, 0x11003a, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11003a, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11003a, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110007, 0x110037, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 
		0x110021, 0x11003b, 0x11003c, 0x110043, 0x11001c, 0x110042, 0x11001c, 0x11001c, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110042, 0x11001c, 0x110042, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110014, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11001c, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x110036, 0x110014, 0x110026, 0x110037, 0x110022, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110037, 0x110038, 0x110014, 0x110026, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110014, 0x110037, 0x110038, 0x110014, 0x110026, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110038, 0x110014, 0x110026, 0x11003a, 0x110002, 0x110030, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110006, 0x110014, 0x110026, 0x11003a, 0x11001c, 
		0x11000c, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11003a, 0x110014, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110038, 0x110014, 0x110026, 0x11003a, 0x11000c, 0x11003a, 0x110038, 
		0x110014, 0x110026, 0x11003a, 0x11000c, 0x110038, 0x110026, 0x11003a, 0x110037, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110036, 0x110036, 0x110036, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 
		0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110025, 0x110026, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 
		0x11001e, 0x110009, 0x11001e, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110037, 
		0x110037, 0x110037, 0x110037, 0x110025, 0x110026, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110037, 0x110037, 0x110037, 0x110037, 0x110029, 0x110032, 0x110037, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110038, 0x110026, 
		0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 0x110029, 0x110032, 0x110037, 
		0x110009, 0x11001e, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110009, 
		0x11001e, 0x110038, 0x110009, 0x11001e, 0x110026, 0x110009, 0x11001e, 0x110009, 
		0x11001e, 0x110037, 0x110009, 0x11001e, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 
		0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 
		0x11001c, 0x110014, 0x110026, 0x11000c, 0x11003a, 0x110014, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110038, 0x110014, 0x110026, 0x11000c, 0x110038, 0x110014, 0x110014, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110038, 0x110002, 0x11000f, 0x110026, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110037, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110030, 0x110038, 0x11000f, 0x110026, 0x110029, 0x110032, 0x110037, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x110029, 0x110032, 
		0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110036, 
		0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110037, 0x11003f, 0x110037, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110007, 
		0x110036, 0x11003a, 0x110038, 0x110007, 0x110026, 0x110036, 0x11003a, 0x110007, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110037, 0x110007, 0x110036, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110038, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 
		0x110007, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110029, 0x110032, 
		0x110037, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110038, 0x110002, 0x110007, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 0x110007, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110007, 0x110030, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 0x110007, 0x110037, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110025, 0x110026, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110038, 0x110002, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110037, 
		0x110022, 0x110035, 0x11003a, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110035, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110035, 0x11003a, 0x110036, 0x110035, 0x11003a, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110035, 
		0x11003a, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x110038, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110037, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x110029, 0x110032, 0x110035, 0x110029, 0x110032, 
		0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110029, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 
		0x110035, 0x110029, 0x110032, 0x110037, 0x11000f, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x110038, 0x11000f, 0x110026, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x110037, 0x11000f, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110036, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110014, 0x110026, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x11003a, 0x110029, 0x110032, 0x110037, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11001c, 
		0x110007, 0x110037, 0x110007, 0x110037, 0x11001c, 0x11003a, 0x110007, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x110038, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110038, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110037, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110036, 0x110002, 0x110013, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110013, 
		0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110036, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 
		0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110025, 0x11003a, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x110025, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110022, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110036, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110037, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110006, 
		0x110013, 0x110030, 0x110035, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110036, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110036, 0x110002, 0x110006, 0x110013, 0x110030, 0x110035, 0x110002, 0x110006, 
		0x110013, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110002, 0x110006, 0x110030, 0x110035, 0x110036, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 0x110029, 0x110032, 
		0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110038, 0x110002, 
		0x110006, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x110030, 0x110006, 0x110006, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110006, 0x110013, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110006, 0x110036, 0x110006, 0x110036, 0x110006, 0x110013, 0x110006, 0x110013, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110022, 0x110006, 0x110006, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110006, 0x110029, 0x110032, 0x110037, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110036, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110022, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x110037, 0x110022, 0x110006, 0x11003a, 0x11001c, 0x110037, 
		0x110022, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110025, 0x110026, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x110002, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110038, 0x110002, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110036, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11001c, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 
		0x11003b, 0x11003c, 0x110042, 0x110043, 0x110037, 0x110037, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110000, 0x110036, 0x110000, 0x110000, 0x110028, 0x110025, 
		0x110037, 0x110022, 0x110000, 0x110025, 0x110037, 0x110022, 0x110000, 0x110000, 
		0x110028, 0x110028, 0x110025, 0x110037, 0x110022, 0x110000, 0x110014, 0x110026, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 
		0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 
		0x110026, 0x110025, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 
		0x110025, 0x110025, 0x11001c, 0x110026, 0x110025, 0x11000c, 0x11001c, 0x110025, 
		0x110038, 0x11001c, 0x110026, 0x11001c, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x110020, 0x110037, 0x11003b, 0x110043, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x110020, 0x110037, 0x11003b, 0x110043, 0x110022, 0x110037, 0x11001c, 0x110007, 
		0x110026, 0x110037, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 0x11003b, 
		0x110043, 0x11000c, 0x110007, 0x110037, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x110020, 0x11003b, 0x110043, 0x110037, 0x110038, 0x110007, 0x110026, 0x110037, 
		0x110007, 0x110037, 0x110037, 0x110022, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x110025, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x11003a, 
		0x110036, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 0x110035, 
		0x11003a, 0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 0x110028, 0x110036, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 0x110026, 0x11003a, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 
		0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x110014, 
		0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110018, 
		0x110028, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 0x110037, 0x11003b, 
		0x110043, 0x110022, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110018, 0x110028, 0x110036, 0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 
		0x110028, 0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 
		0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 
		0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043
	]

	// Note: < 0 -> reduce (rule = -a-1), >= 0 -> shift (state).
	private static let ActionA:[Int16] = [
		     1,      2,      3,      4,      5,      6,      7,      8, 
		     9,     10,     11,     12,     13,     14,     15,    -92, 
		   -92,    -92,   -152,   -151,    621,    622,    623,    624, 
		   625,    626,    627,    628,    629,    630,   -150,   -149, 
		  1235,   1236,   1237,   1238,   1239,   1240,   1241,   1242, 
		  -147,   -147,   -148,   -145,   -145,   -130,   -153,   -146, 
		  -146,   1226,   -154,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,     11,      1,      7,    -87,      1,      7, 
		   -86,   1219,      1,      7,     11,   1202,   1199,     28, 
		  -144,   -143,   -126,      2,      3,      4,      5,      6, 
		  -126,      8,      9,     10,   -126,     12,     13,     14, 
		    15,   -125,   -125,   -125,     29,   -156,   -156,   -156, 
		  -156,   -156,   -156,   -156,   -156,   -156,   -156,   1198, 
		    32,     33,     34,     35,     36,     37,     38,     39, 
		    40,     41,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    985,    994, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   354,    355,    356,    357,    358,    359,    360,    361, 
		   362,    373,    374,    375,    376,    377,    378,    379, 
		   380,    381,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,   -155,   -136,    117,   -136, 
		  -136,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,    118,    110,    111,    -62,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,   -133,    646,    647,    648, 
		   649,    650,    121,    651,   -133,    122,   -133,   -133, 
		   -95,    -95,     51,    -95,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -107,   -107,   -107, 
		  -135,   -135,   -135,   -135,   -142,   -142,   -142,   -142, 
		  -142,   -142,   -142,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,     53,     54,     55,     56,     57,     58, 
		    59,     60,     61,     62,     63,     64,     65,     66, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    491,    -69, 
		   -69,    -69,     29,    -69,    -69,    -69,   1044,   1145, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    211, 
		   354,    355,    356,    357,    358,    359,    360,    361, 
		   362,    373,    374,    375,    376,    377,    378,    379, 
		   380,    381,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		  1135,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -25, 
		  1134,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -81, 
		   -80,    -79,    211,    -78,   1120,    -77,   -140,   -136, 
		   -82,    117,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,   -136,   -136,    118,   -139,   1118,    110, 
		   -62,    111,    -72,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -133,   -133,    646,    647,    648,    649,    650,    121, 
		   651,   -133,    122,   -133,    -95,    -95,    -95,     51, 
		  -107,   -107,   -107,   -107,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -135,    -83,   -135,   -135, 
		    87,   -141,   -141,   -141,   -141,   -141,   -141,   -141, 
		  -141,   -141,   -141,   -141,   -141,   -141,   -141,     32, 
		    33,     34,     35,     36,     89,     90,     60,     91, 
		    39,     40,     92,     41,     66,    491,    -69,    -69, 
		    29,    -69,    -69,    -69,    985,    986,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    354,    355, 
		   356,    357,    358,    359,    360,    361,    362,    980, 
		   979,    -81,    -81,    -81,    -81,    -80,    -80,    -80, 
		   -80,    -79,    -79,    -79,    -79,    211,    -78,    -78, 
		   -78,    -78,    125,    -77,    -77,    -77,    -77,   -140, 
		  -140,   -140,   -140,    -82,    117,   -136,   -136,   -136, 
		  -136,   -136,   -136,   -136,    -82,   -136,    -82,    -82, 
		   118,   -139,   -139,   -139,   -139,    115,    -62,    -62, 
		   -62,    -62,    -63,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -63,    -72,    -63,    -63,    -72, 
		   -95,    -95,    -95,    -95,    -83,    -83,    -83,    -83, 
		  -138,   -138,   -138,   -138,    -14,    -14,    -14,    -14, 
		   -14,    -14,    -14,    -14,    -14,    -15,    -15,    -15, 
		   -15,    -15,    -15,    -15,    -15,    -15,     32,     33, 
		    34,     35,     36,     37,     39,     40,     41,    -96, 
		   -96,    -96,    -96,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,   -119,   -119,   -119,   -119,    -18,    -18,    -18, 
		   -18,   -112,   -112,   -112,   -112,   -112,   -112,   -112, 
		  -112,   -112,   -111,   -111,   -111,   -111,   -111,   -111, 
		  -111,   -111,   -111,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,   -137,   -137,   -137,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,   -137,   -137, 
		  -110,   -110,   -110,   -110,   -110,   -110,   -110,   -110, 
		  -110,   -109,   -109,   -109,   -109,   -109,   -109,   -109, 
		  -109,   -109,     32,     33,     34,     35,     36,     37, 
		    39,     40,     41,   -108,   -108,   -108,   -108,   -108, 
		  -108,   -108,   -108,   -108,   -108,   -108,   -108,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -33,    127,    -33,    -33,    -33,   -132, 
		   129,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -34,    -34,    -34,    -34, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    621,    622,    623,    624, 
		   625,    626,    627,    628,    629,    630,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    491,    -69,     29, 
		   -69,    -69,   -147,    -69,    943,    944,    -69,    -69, 
		   -69,    -69,    -69,    -69,   -147,    937,    373,    374, 
		   375,    376,    377,    378,    379,    380,    381,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    932,     32,     33,     34,     35,     36, 
		    37,     38,     39,     40,     41,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   921,    920,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    211,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    906,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    -50, 
		   144,     12,     13,    145,    146,     15,     66,    115, 
		   903,    117,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,   -136,    118,    899,    898,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   897,    -72,    646,    647,    648,    649,    650,    121, 
		   651,    122,   -133,     51,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -135,    176,    173, 
		   170,   -144,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,     29,    172, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,    174,    175,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,     53,     54, 
		    55,     56,     57,     58,     59,     60,     61,     62, 
		    63,     64,     65,     66,     87,     32,     33,     34, 
		    35,     36,    180,     90,     60,    181,     39,     40, 
		   182,     41,     66,    491,    354,    355,    356,    357, 
		   358,    359,    360,    361,    362,    838,    837,    -81, 
		   -81,    -80,    -80,    -79,    -79,    211,    -78,    -78, 
		   201,    -77,    -77,   -140,   -140,   -136,    117,   -136, 
		  -136,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		   -82,    -82,    118,   -139,   -139,    199,    110,    111, 
		   -62,    -62,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -63,    -72, 
		  -135,   -135,    -83,    -83,   -138,   -138,   -119,   -119, 
		   -18,    -18,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    127,    -33,    -33, 
		   204,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -34,    -34,    199,    -37, 
		   -37,    209,   -119,   -119,   -119,    -37,    -37,    -37, 
		  -131,   -131,   -131,   -131,   -131,   -131,   -131,   -131, 
		  -131,   -131,    213,    214,    215,    216,    217,    218, 
		   219,    220,    221,    222,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,    -69,    -69,    -69,    -69, 
		   772,    781,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    354,    355,    356,    357,    358,    359, 
		   360,    361,    362,    373,    374,    375,    376,    377, 
		   378,    379,    380,    381,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    277,   -136, 
		   117,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,   -136,   -136,    118,    110,    111,    -62, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -63,    -72,   -133,    646, 
		   647,    648,    649,    650,    121,    651,   -133,    122, 
		  -133,   -133,    -95,    -95,     51,    -95,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -135,   -135,   -135,   -135,     53,     54, 
		    55,     56,     57,     58,     59,     60,     61,     62, 
		    63,     64,     65,     66,     87,    213,    214,    215, 
		   216,    217,    235,    236,     60,    237,    220,    221, 
		   238,    222,     66,    491,    -69,    -69,     29,    -69, 
		   -69,    -69,    772,    773,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    354,    355,    356,    357, 
		   358,    359,    360,    361,    362,    281,    280,    -81, 
		   -81,    -81,    -81,    -80,    -80,    -80,    -80,    -79, 
		   -79,    -79,    -79,    211,    -78,    -78,    -78,    -78, 
		   265,    -77,    -77,    -77,    -77,   -140,   -140,   -140, 
		  -140,    -82,    117,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,    -82,   -136,    -82,    -82,    118,   -139, 
		  -139,   -139,   -139,    259,    -62,    -62,    -62,    -62, 
		   -63,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -63,    -72,    -63,    -63,    -72,    -95,    -95, 
		   -95,    -95,    -83,    -83,    -83,    -83,   -138,   -138, 
		  -138,   -138,    213,    214,    215,    216,    217,    218, 
		   220,    221,    222,    -96,    -96,    -96,    -96,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   -119,   -119,   -119, 
		  -119,    -18,    -18,    -18,    -18,    213,    214,    215, 
		   216,    217,    218,    220,    221,    222,   -137,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,   -137,   -137, 
		  -137,   -137,    213,    214,    215,    216,    217,    218, 
		   220,    221,    222,   -108,   -108,   -108,   -108,   -108, 
		  -108,   -108,   -108,   -108,   -108,   -108,   -108,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -33,    127,    -33,    -33,    -33,    268, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -34,    -34,    -34,    -34,    259, 
		   -37,    -37,    -37,    -37,    273,   -119,   -119,   -119, 
		  -119,   -119,    -37,    -37,    -37,    -37,    -37,    213, 
		   214,    215,    216,    217,    218,    219,    220,    221, 
		   222,    277,    -26,    268,    -24,    -24,    -24,    -24, 
		   -75,    -75,    -75,    -75,    282,    283,    284,    285, 
		   286,    287,    288,    289,    290,    291,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   704,    713,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    354,    355,    356,    357,    358,    359, 
		   360,    361,    362,    373,    374,    375,    376,    377, 
		   378,    379,    380,    381,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    764,    762,    -59,    -61,    -61,   -136,   -136, 
		   117,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,   -136,   -136,    118,    110,    -62,    111, 
		   -62,    -72,    -63,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		  -133,   -133,    646,    647,    648,    649,    650,    121, 
		   651,   -133,    122,   -133,   -133,    -95,    -95,    -95, 
		    51,    -95,   -107,   -107,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -107,   -107,   -135, 
		  -135,   -135,   -135,   -135,     53,     54,     55,     56, 
		    57,     58,     59,     60,     61,     62,     63,     64, 
		    65,     66,     87,    282,    283,    284,    285,    286, 
		   306,    307,     60,    308,    289,    290,    309,    291, 
		    66,    491,    -69,    -69,    -69,     29,    -69,    -69, 
		   -69,    704,    705,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    354,    355,    356,    357,    358, 
		   359,    360,    361,    362,    351,    350,    -81,    -81, 
		   -81,    -81,    -81,    -80,    -80,    -80,    -80,    -80, 
		   -79,    -79,    -79,    -79,    -79,    211,    -78,    -78, 
		   -78,    -78,    -78,    336,    -77,    -77,    -77,    -77, 
		   -77,   -140,   -140,   -140,   -140,   -140,    -82,    -82, 
		   117,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		   -82,   -136,    -82,    -82,    118,   -139,   -139,   -139, 
		  -139,   -139,    330,    -62,    -62,    -62,    -62,    -62, 
		   -63,    -63,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,    -63,    -63,    -72,    -95, 
		   -95,    -95,    -95,    -95,    -83,    -83,    -83,    -83, 
		   -83,   -138,   -138,   -138,   -138,   -138,    282,    283, 
		   284,    285,    286,    287,    289,    290,    291,    -96, 
		   -96,    -96,    -96,    -96,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   -119,   -119,   -119,   -119,   -119, 
		   -18,    -18,    -18,    -18,    -18,    282,    283,    284, 
		   285,    286,    287,    289,    290,    291,   -137,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,   -137,   -137, 
		  -137,   -137,   -137,    282,    283,    284,    285,    286, 
		   287,    289,    290,    291,   -108,   -108,   -108,   -108, 
		  -108,   -108,   -108,   -108,   -108,   -108,   -108,   -108, 
		  -108,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -33,    -33,    127,    -33, 
		   -33,    -33,    339,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,    -34,    -34, 
		   -34,    -34,    -34,    330,    -37,    -37,    -37,    -37, 
		   -37,    344,   -119,   -119,   -119,   -119,   -119,   -119, 
		   -37,    -37,    -37,    -37,    -37,    -37,    213,    214, 
		   215,    216,    217,    218,    219,    220,    221,    222, 
		   277,    339,    -24,    -24,    -24,    -24,    -24,    -75, 
		   -75,    -75,    -75,    -75,    282,    283,    284,    285, 
		   286,    287,    288,    289,    290,    291,    353,    -58, 
		   -58,    -58,    -58,    -58,    -71,    -71,    -71,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -69,    695,    696,    -69,    -69, 
		   373,    374,    375,    376,    377,    378,    379,    380, 
		   381,    -74,    -74,    -74,    -16,    -16,    -16,    372, 
		    -5,    370,    -67,    -67,    -67,    368,     -7,     -7, 
		   -72,    -72,    -72,    354,    355,    356,    357,    358, 
		   359,    360,    361,    362,     -6,     -6,    354,    355, 
		   356,    357,    358,    359,    360,    361,    362,     -4, 
		   -64,    -64,    -64,    -64,    -64,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -17,    -17,    -17,    -17,    -17,    -69,    394, 
		   395,    -69,    -69,    -69,    -69,    373,    374,    375, 
		   376,    377,    378,    379,    380,    381,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -67,    -67,    -67,    -67,    -67,    117,   -136,   -136, 
		  -136,    118,    -72,    -72,    -72,    -72,    -72,    121, 
		   122,    387,   -107,   -107,   -107,    -73,    -73,    -73, 
		   373,    374,    375,    376,    377,    378,    379,    380, 
		   381,   -108,   -108,   -108,    373,    374,    375,    376, 
		   377,    378,    379,    380,    381,   -137,   -137,   -137, 
		   121,    122,    393,    -73,    -73,    -73,    -73,    -73, 
		   282,    283,    284,    285,    286,    287,    288,    289, 
		   290,    692,    291,    397,    398,    399,    400,    401, 
		   402,    403,    404,    405,    406,    -70,    -70,    -70, 
		   -70,    -70,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    469,    481, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   354,    355,    356,    357,    358,    359,    360,    361, 
		   362,    373,    374,    375,    376,    377,    378,    379, 
		   380,    381,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    685,   -136,    117,   -136, 
		  -136,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,    118,    110,    111,    -62,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,   -133,    646,    647,    648, 
		   649,    650,    121,    651,   -133,    122,   -133,   -133, 
		   -95,    -95,     51,    -95,   -107,   -107,   -107,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -107,   -107,   -107, 
		  -135,   -135,   -135,   -135,     53,     54,     55,     56, 
		    57,     58,     59,     60,     61,     62,     63,     64, 
		    65,     66,     87,    397,    398,    399,    400,    401, 
		   419,    420,     60,    421,    404,    405,    422,    406, 
		    66,    491,    -69,    -69,     29,    -69,    -69,    -69, 
		   469,    470,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    354,    355,    356,    357,    358,    359, 
		   360,    361,    362,    464,    463,    -81,    -81,    -81, 
		   -81,    -80,    -80,    -80,    -80,    -79,    -79,    -79, 
		   -79,    211,    -78,    -78,    -78,    -78,    449,    -77, 
		   -77,    -77,    -77,   -140,   -140,   -140,   -140,    -82, 
		   117,   -136,   -136,   -136,   -136,   -136,   -136,   -136, 
		   -82,   -136,    -82,    -82,    118,   -139,   -139,   -139, 
		  -139,    443,    -62,    -62,    -62,    -62,    -63,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -72,    -63,    -63,    -72,    -95,    -95,    -95,    -95, 
		   -83,    -83,    -83,    -83,   -138,   -138,   -138,   -138, 
		   397,    398,    399,    400,    401,    402,    404,    405, 
		   406,    -96,    -96,    -96,    -96,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   -119,   -119,   -119,   -119,    -18, 
		   -18,    -18,    -18,    397,    398,    399,    400,    401, 
		   402,    404,    405,    406,   -137,   -137,   -137,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,   -137,   -137, 
		   397,    398,    399,    400,    401,    402,    404,    405, 
		   406,   -108,   -108,   -108,   -108,   -108,   -108,   -108, 
		  -108,   -108,   -108,   -108,   -108,    131,      2,      3, 
		   132,    133,    134,    135,    136,      5,    137,      6, 
		   138,    139,     60,    140,      9,     10,    141,    142, 
		   143,    144,     12,     13,    145,    146,     15,     66, 
		   -33,    127,    -33,    -33,    -33,    452,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -34,    -34,    -34,    -34,    443,    -37,    -37, 
		   -37,    -37,    457,   -119,   -119,   -119,   -119,   -119, 
		   -37,    -37,    -37,    -37,    -37,    213,    214,    215, 
		   216,    217,    218,    219,    220,    221,    222,    277, 
		   452,    -24,    -24,    -24,    -24,    -75,    -75,    -75, 
		   -75,    282,    283,    284,    285,    286,    287,    288, 
		   289,    290,    291,    466,    -58,    -58,    -58,    -58, 
		   468,    -64,    -64,    -64,    -64,    282,    283,    284, 
		   285,    286,    287,    288,    289,    290,    485,    291, 
		   397,    398,    399,    400,    401,    402,    403,    404, 
		   405,    406,    -70,    -70,     29,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		    -8,    -11,    475,    -12,    -12,    -12,    -12,    -12, 
		   -12,    476,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    397,    398,    399,    400,    401,    402, 
		   403,    404,    405,    406,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,     -9,    480,    -12,    -12,    -12,    -12, 
		   -12,    -12,    481,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,    397,    398,    399,    400,    401, 
		   402,    403,    404,    405,    406,    -10,    484,    -12, 
		   -12,    -12,    -12,    -12,    -12,    481,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,    489,   -105,    488,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,    282,    283,    284, 
		   285,    286,    287,    288,    289,    290,    291,   -106, 
		  -131,   -131,   -131,   -131,   -131,   -131,   -131,   -131, 
		  -131,   -131,   -131,   -131,   -131,      2,      3,    493, 
		     5,      6,      8,    494,     10,    495,     12,     13, 
		   496,     15,    621,    622,    623,    624,    625,    626, 
		   627,    628,    629,    630,    570,   -148,    -23,    543, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    514,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,    510,    507,    504,   -144,    -22, 
		   -22,    -22,    -22,    -22,    -22,    -22,    -22,    -22, 
		    29,    506,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,    508,    509,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,    511,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -85,    -56,     29,    518,    516,    452, 
		   -20,    -20,    -20,    -20,    397,    398,    399,    400, 
		   401,    402,    403,    404,    405,    406,     29,     -8, 
		   213,    214,    215,    216,    217,    218,    219,    220, 
		   221,    222,   -155,    -11,    525,    -12,    526,    397, 
		   398,    399,    400,    401,    402,    403,    404,    405, 
		   406,    -13,     -9,    530,    -12,    531,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   -10,    534,    -12,    531,    495,    110,    111,    -21, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    -96,    -96,    -96,    514,    541,    452,    -19, 
		   -19,    -19,    -19,    544,     29,    545,    546,    563, 
		   554,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,    553,     29,    550,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,    552,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,    555,   -167,    556,   -169,    558,   -170,    559, 
		  -168,    560,   -169,    561,    562,    560,   -169,    564, 
		   565,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -84,    568,   -119,    -37, 
		   571,    572,    573,    574,    575,    576,    577,    578, 
		   579,    580,    -71,    -71,    -66,    -66,    -65,    -65, 
		   -68,    -68,    -17,    -17,    -69,    -69,    612,    613, 
		   373,    374,    375,    376,    377,    378,    379,    380, 
		   381,    -74,    -74,    -16,    -16,    -67,    -67,    584, 
		   585,    -72,    -72,   -127,   -127,   -127,   -127,   -127, 
		  -127,   -127,   -127,   -127,   -128,   -128,   -128,   -128, 
		  -128,   -128,   -128,   -128,   -128,    587,    588,    589, 
		   590,    591,    592,    593,    594,    595,    -71,    -66, 
		   -65,    -68,    -17,    601,    602,    -69,    373,    374, 
		   375,    376,    377,    378,    379,    380,    381,    -74, 
		   -16,    -67,    -55,    -72,    121,    122,    600,    -73, 
		   282,    283,    284,    285,    286,    287,    288,    289, 
		   290,    607,    291,    397,    398,    399,    400,    401, 
		   402,    403,    404,    405,    406,    -70,    605,    602, 
		   -12,    -13,   -104,    609,   -103,    121,    122,    611, 
		   -73,    -73,    282,    283,    284,    285,    286,    287, 
		   288,    289,    290,    618,    291,    397,    398,    399, 
		   400,    401,    402,    403,    404,    405,    406,    -70, 
		   -70,    616,    -12,    -12,    613,    -13,    -13,   -104, 
		  -104,    620,   -103,   -103,   -152,   -151,   -150,   -149, 
		  -147,   -148,   -145,   -153,   -146,   -154,    634,   -144, 
		  -143,     29,    635,    641,    640,     29,    639,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    642,   -167,    643,    644,    645,   -168,    682, 
		   -32,    -32,    -32,    -32,    -32,    -32,    -32,    -32, 
		   -32,    -31,    -31,    -31,    -31,    -31,    -31,    -31, 
		   -31,    -31,    -30,    -30,    -30,    -30,    -30,    -30, 
		   -30,    -30,    -30,    -29,    -29,    -29,    -29,    -29, 
		   -29,    -29,    -29,    -29,    -28,    -28,    -28,    -28, 
		   -28,    -28,    -28,    -28,    -28,    653,    654,    655, 
		   656,    657,    658,    659,    660,    661,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -69,    -69, 
		   673,    674,    -69,    -69,    -69,    -69,    -69,    -69, 
		   373,    374,    375,    376,    377,    378,    379,    380, 
		   381,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,   -136,    117,   -136,   -136,   -136,   -136,   -136, 
		   118,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,   -134,    121,   -134,    122,   -134,   -134,   -107, 
		  -107,   -107,   -107,   -107,   -107,    653,    654,    655, 
		   656,    657,    658,    659,    660,    661,   -108,   -108, 
		  -108,   -108,   -108,   -108,    653,    654,    655,    656, 
		   657,    658,    659,    660,    661,   -137,   -137,   -137, 
		  -137,   -137,   -137,    121,    122,    672,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    282,    283, 
		   284,    285,    286,    287,    288,    289,    290,    679, 
		   291,    397,    398,    399,    400,    401,    402,    403, 
		   404,    405,    406,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    677,    -12,    -12,    674,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,    681,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,    -27,    -27, 
		   -27,    -27,    -27,    -27,    -27,    -27,    -27,    397, 
		   398,    399,    400,    401,    402,    404,    405,    406, 
		   -96,    -96,    -96,    -12,    395,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    121,    122, 
		   688,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    690, 
		   -64,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,   -104, 
		  -104,   -104,   -104,   -104,    694,   -103,   -103,   -103, 
		  -103,   -103,    282,    283,    284,    285,    286,    287, 
		   288,    289,    290,    701,    291,    397,    398,    399, 
		   400,    401,    402,    403,    404,    405,    406,    -70, 
		   -70,    -70,    699,    -12,    696,    -12,    -12,    -13, 
		   -13,    -13,   -104,   -104,   -104,    703,   -103,   -103, 
		  -103,    282,    283,    284,    285,    286,    287,    288, 
		   289,    290,    716,    291,    397,    398,    399,    400, 
		   401,    402,    403,    404,    405,    406,    -70,    -70, 
		   -70,     29,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    708,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    709,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    712, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    713, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   397,    398,    399,    400,    401,    402,    403,    404, 
		   405,    406,    715,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    713,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,    718,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,      2,      3,    493,      5,      6,      8, 
		   494,     10,    495,     12,     13,    496,     15,     32, 
		    33,     34,     35,     36,     37,     39,     40,     41, 
		   514,    723,    339,    -20,    -20,    -20,    -20,    -20, 
		   495,    514,    728,    339,    -19,    -19,    -19,    -19, 
		   -19,    731,    732,    733,    734,    735,    736,    737, 
		   738,    739,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -69, 
		   -69,    -69,    751,    752,    -69,    -69,    -69,    -69, 
		   -69,    -69,    373,    374,    375,    376,    377,    378, 
		   379,    380,    381,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,   -136,   -136, 
		   117,   -136,   -136,   -136,   -136,   -136,    118,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -134,   -134,    121,   -134,    122,   -134,   -134,   -107, 
		  -107,   -107,   -107,   -107,   -107,   -107,    731,    732, 
		   733,    734,    735,    736,    737,    738,    739,   -108, 
		  -108,   -108,   -108,   -108,   -108,   -108,    731,    732, 
		   733,    734,    735,    736,    737,    738,    739,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,    121,    122, 
		   750,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    282,    283,    284,    285,    286,    287, 
		   288,    289,    290,    757,    291,    397,    398,    399, 
		   400,    401,    402,    403,    404,    405,    406,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   755,    -12,    -12,    -12,    752,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,    759,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,    282, 
		   283,    284,    285,    286,    287,    289,    290,    291, 
		   -96,    -96,    -96,    -96,    282,    283,    284,    285, 
		   286,    287,    288,    289,    290,    291,    -60,    -58, 
		   -58,    -58,    -58,    121,    122,    766,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    768,    -64,    -64, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    771, 
		   -64,    -64,    -64,    -64,    282,    283,    284,    285, 
		   286,    287,    288,    289,    290,    784,    291,    397, 
		   398,    399,    400,    401,    402,    403,    404,    405, 
		   406,    -70,    -70,     29,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    776, 
		   -12,    -12,    -12,    -12,    -12,    -12,    777,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    397, 
		   398,    399,    400,    401,    402,    403,    404,    405, 
		   406,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    780, 
		   -12,    -12,    -12,    -12,    -12,    -12,    781,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    397, 
		   398,    399,    400,    401,    402,    403,    404,    405, 
		   406,    783,    -12,    -12,    -12,    -12,    -12,    -12, 
		   781,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,    786, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,      2,      3, 
		   493,      5,      6,      8,    494,     10,    495,     12, 
		    13,    496,     15,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,    514,    791,    268,    -20, 
		   -20,    -20,    -20,    495,    514,    796,    268,    -19, 
		   -19,    -19,    -19,    799,    800,    801,    802,    803, 
		   804,    805,    806,    807,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -69,    -69,    819,    820, 
		   -69,    -69,    -69,    -69,    -69,    -69,    373,    374, 
		   375,    376,    377,    378,    379,    380,    381,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,   -136, 
		   117,   -136,   -136,   -136,   -136,   -136,    118,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,   -134, 
		   121,   -134,    122,   -134,   -134,   -107,   -107,   -107, 
		  -107,   -107,   -107,    799,    800,    801,    802,    803, 
		   804,    805,    806,    807,   -108,   -108,   -108,   -108, 
		  -108,   -108,    799,    800,    801,    802,    803,    804, 
		   805,    806,    807,   -137,   -137,   -137,   -137,   -137, 
		  -137,    121,    122,    818,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    282,    283,    284,    285, 
		   286,    287,    288,    289,    290,    825,    291,    397, 
		   398,    399,    400,    401,    402,    403,    404,    405, 
		   406,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    823,    -12,    -12,    820,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,    827,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,    213,    214,    215,    216, 
		   217,    218,    220,    221,    222,    -96,    -96,    -96, 
		   204,    -24,    -24,    121,    122,    833,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    835,    -64,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -75,    -75,    282,    283, 
		   284,    285,    286,    287,    288,    289,    290,    291, 
		   840,    -58,    -58,    842,    -64,    -64,      2,      3, 
		   493,      5,      6,      8,    494,     10,    495,     12, 
		    13,    496,     15,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,    514,    847,    204,    -20, 
		   -20,    495,    514,    852,    204,    -19,    -19,    868, 
		   869,    870,    871,    872,    873,    874,    875,    876, 
		   133,    134,    135,    136,    137,    856,    141,    142, 
		   145,    -69,    -69,    -69,    -69,    -69,    859,    860, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,   -108,   -108,   -108,   -108,   -108,   -108,   -108, 
		  -108,   -108,    282,    283,    284,    285,    286,    287, 
		   288,    289,    290,    865,    291,    397,    398,    399, 
		   400,    401,    402,    403,    404,    405,    406,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    863,    -12,    -12,    -12,    -12,    -12, 
		   860,    -12,    -12,    -12,    -12,    -12,    -12,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,    867,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -65,    -65,    -65,    -65,    -65, 
		   -68,    -68,    -68,    -68,    -68,    -17,    -17,    -17, 
		   -17,    -17,    -69,    888,    889,    -69,    -69,    -69, 
		   -69,    373,    374,    375,    376,    377,    378,    379, 
		   380,    381,    -74,    -74,    -74,    -74,    -74,    -16, 
		   -16,    -16,    -16,    -16,    -67,    -67,    -67,    -67, 
		   -67,    117,   -136,   -136,   -136,    118,    -72,    -72, 
		   -72,    -72,    -72,    121,    122,   -134,   -107,   -107, 
		  -107,    868,    869,    870,    871,    872,    873,    874, 
		   875,    876,   -108,   -108,   -108,    868,    869,    870, 
		   871,    872,    873,    874,    875,    876,   -137,   -137, 
		  -137,    121,    122,    887,    -73,    -73,    -73,    -73, 
		   -73,    282,    283,    284,    285,    286,    287,    288, 
		   289,    290,    894,    291,    397,    398,    399,    400, 
		   401,    402,    403,    404,    405,    406,    -70,    -70, 
		   -70,    -70,    -70,    892,    -12,    889,    -12,    -12, 
		   -12,    -12,    -13,    -13,    -13,    -13,    -13,   -104, 
		  -104,   -104,   -104,   -104,    896,   -103,   -103,   -103, 
		  -103,   -103,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    133,    134,    135,    136,    137,    856, 
		   141,    142,    145,   -137,   -137,   -137,   -137,   -137, 
		  -137,   -137,   -137,   -137,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -37,    -37,    -37,    -37,    -51,    131,      2,      3, 
		   132,    133,    134,    135,    136,      5,    137,      6, 
		   138,    139,     60,    140,      9,     10,    141,    142, 
		   143,    144,     12,     13,    145,    146,     15,     66, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    127,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    909,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    899,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    914,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    213,    214,    215, 
		   216,    217,    218,    219,    220,    221,    222,    277, 
		   909,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,     29,    545,    922,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		   929,     29,    926,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,    928, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		   931,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    282,    283,    284, 
		   285,    286,    287,    288,    289,    290,    291,    934, 
		   -58,    121,    122,    936,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    938, 
		  -101,   -101,    940,    941,    942,   -100,   -102,   -102, 
		   282,    283,    284,    285,    286,    287,    288,    289, 
		   290,    951,    291,    397,    398,    399,    400,    401, 
		   402,    403,    404,    405,    406,    -70,     29,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   947,    -12,    -12,    -12,    -12,    -12,    948,    -12, 
		   -12,    -12,    -12,    -12,    -12,    397,    398,    399, 
		   400,    401,    402,    403,    404,    405,    406,    950, 
		   -12,    -12,    -12,    -12,    -12,    860,    -12,    -12, 
		   -12,    -12,    -12,    -12,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		   953,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,      2,      3,    493, 
		     5,      6,      8,    494,     10,    495,     12,     13, 
		   496,     15,     32,     33,     34,     35,     36,     37, 
		    39,     40,     41,    514,    958,    909,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    495,    514,    963,    909,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    966,     29,    635,    971,     29,    970, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   973,   -119,   -119,   -119,   -119,   -119,    -37,    -37, 
		   -37,    -37,    -37,    213,    214,    215,    216,    217, 
		   218,    219,    220,    221,    222,    277,    129,    -24, 
		   -24,    -24,    -24,    -75,    -75,    -75,    -75,    282, 
		   283,    284,    285,    286,    287,    288,    289,    290, 
		   291,    982,    -58,    -58,    -58,    -58,    984,    -64, 
		   -64,    -64,    -64,    282,    283,    284,    285,    286, 
		   287,    288,    289,    290,    997,    291,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   -70,    -70,     29,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    989,    -12, 
		   -12,    -12,    -12,    -12,    -12,    990,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    993,    -12, 
		   -12,    -12,    -12,    -12,    -12,    994,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   996,    -12,    -12,    -12,    -12,    -12,    -12,    994, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,    999,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,      2,      3,    493, 
		     5,      6,      8,    494,     10,    495,     12,     13, 
		   496,     15,     32,     33,     34,     35,     36,     37, 
		    39,     40,     41,    514,   1004,    129,    -20,    -20, 
		   -20,    -20,    495,    514,   1009,    129,    -19,    -19, 
		   -19,    -19,     53,     54,     55,     56,     57,     58, 
		    59,     60,     61,     62,     63,     64,     65,     66, 
		    87,     53,     54,     55,     56,     57,   1014,     59, 
		    60,   1015,     62,     63,   1016,     65,     66,    491, 
		   354,    355,    356,    357,    358,    359,    360,    361, 
		   362,   1070,   1069,    -81,    -81,    -81,    -81,    -80, 
		   -80,    -80,    -80,    -79,    -79,    -79,    -79,    211, 
		   -78,    -78,    -78,    -78,   1055,    -77,    -77,    -77, 
		   -77,   -140,   -140,   -140,   -140,    -82,    -82,    117, 
		  -136,   -136,   -136,   -136,   -136,   -136,   -136,    -82, 
		  -136,    -82,    118,   -139,   -139,   -139,   -139,   1053, 
		   -62,    -62,    -62,    -62,    -63,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -72,    -95,    -95,    -95,    -95,    -83,    -83, 
		   -83,    -83,   -138,   -138,   -138,   -138,     53,     54, 
		    55,     56,     57,   1035,     62,     63,     65,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,   1044,   1045, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,   -136, 
		  -136,    117,   -136,   -136,   -136,   -136,   -136,   -136, 
		  -136,   -136,   -136,   -136,    118,    -96,    -96,    -96, 
		   -96,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,   -135, 
		  -135,   -135,   -135,     53,     54,     55,     56,     57, 
		  1035,     62,     63,     65,   -137,   -137,   -137,   -137, 
		  -137,   -137,   -137,   -137,   -137,   -137,   -137,   -137, 
		    53,     54,     55,     56,     57,   1035,     62,     63, 
		    65,   -108,   -108,   -108,   -108,   -108,   -108,   -108, 
		  -108,   -108,   -108,   -108,   -108,    282,    283,    284, 
		   285,    286,    287,    288,    289,    290,   1050,    291, 
		   397,    398,    399,    400,    401,    402,    403,    404, 
		   405,    406,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		  1048,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		  1045,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,   -104,   -104, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   -104,   -104,   1052,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,   -119,   -119,   -119,   -119,    -18, 
		   -18,    -18,    -18,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,    -33,    -33, 
		   127,    -33,    -33,   1058,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -34, 
		   -34,    -34,    -34,   1053,    -37,    -37,    -37,    -37, 
		  1063,   -119,   -119,   -119,   -119,   -119,    -37,    -37, 
		   -37,    -37,    -37,    213,    214,    215,    216,    217, 
		   218,    219,    220,    221,    222,    277,   1058,    -24, 
		   -24,    -24,    -24,    -75,    -75,    -75,    -75,    282, 
		   283,    284,    285,    286,    287,    288,    289,    290, 
		   291,   1072,    -58,    -58,    -58,    -58,   1074,    -64, 
		   -64,    -64,    -64,      2,      3,    493,      5,      6, 
		     8,    494,     10,    495,     12,     13,    496,     15, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    514,   1079,   1058,    -20,    -20,    -20,    -20, 
		   495,    514,   1084,   1058,    -19,    -19,    -19,    -19, 
		  1087,   1088,   1089,   1090,   1091,   1092,   1093,   1094, 
		  1095,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -69,    -69,    -69,   1107,   1108,    -69,    -69, 
		   -69,    -69,    -69,    373,    374,    375,    376,    377, 
		   378,    379,    380,    381,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,   -136,   -136,    117,   -136, 
		  -136,   -136,   -136,    118,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   -134,   -134,    121,   -134, 
		   122,   -134,   -107,   -107,   -107,   -107,   -107,   -107, 
		  1087,   1088,   1089,   1090,   1091,   1092,   1093,   1094, 
		  1095,   -108,   -108,   -108,   -108,   -108,   -108,   1087, 
		  1088,   1089,   1090,   1091,   1092,   1093,   1094,   1095, 
		  -137,   -137,   -137,   -137,   -137,   -137,    121,    122, 
		  1106,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    282,    283,    284,    285,    286,    287,    288, 
		   289,    290,   1113,    291,    397,    398,    399,    400, 
		   401,    402,    403,    404,    405,    406,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,   1111,    -12, 
		   -12,    -12,   1108,    -12,    -12,    -12,    -12,    -12, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		  -104,   -104,   -104,   -104,   -104,   -104,   -104,   -104, 
		  1115,   -103,   -103,   -103,   -103,   -103,   -103,   -103, 
		  -103,     53,     54,     55,     56,     57,   1035,     62, 
		    63,     65,    -96,    -96,    -96,   -119,    -18,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -33,    127,   1123,    131,      2,      3, 
		   132,    133,    134,    135,    136,      5,    137,      6, 
		   138,    139,     60,    140,      9,     10,    141,    142, 
		   143,    144,     12,     13,    145,    146,     15,     66, 
		   -34,   1118,    -37,   1128,   -119,   -119,    -37,    -37, 
		   213,    214,    215,    216,    217,    218,    219,    220, 
		   221,    222,    277,   1123,    -24,    -75,    282,    283, 
		   284,    285,    286,    287,    288,    289,    290,    291, 
		  1137,    -58,    121,    122,   1139,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,   1141,    -64,    213,    214,    215, 
		   216,    217,    218,    219,    220,    221,    222,   1144, 
		   -35,    397,    398,    399,    400,    401,    402,    403, 
		   404,    405,    406,    -70,    -70,    -70,     29,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,   1148,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   1149,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    397,    398,    399,    400,    401,    402,    403, 
		   404,    405,    406,   1151,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,   1045,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,      2,      3,    493,      5,      6, 
		     8,    494,     10,    495,     12,     13,    496,     15, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    514,   1156,   1123,    -20,    495,    514,   1161, 
		  1123,    -19,   1164,   1165,   1166,   1167,   1168,   1169, 
		  1170,   1171,   1172,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -69,    -69,   1184,   1185,    -69, 
		   -69,    -69,    -69,    -69,    -69,    373,    374,    375, 
		   376,    377,    378,    379,    380,    381,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,   -136,    117, 
		  -136,   -136,   -136,   -136,   -136,    118,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,   -134,    121, 
		  -134,    122,   -134,   -134,   -107,   -107,   -107,   -107, 
		  -107,   -107,   1164,   1165,   1166,   1167,   1168,   1169, 
		  1170,   1171,   1172,   -108,   -108,   -108,   -108,   -108, 
		  -108,   1164,   1165,   1166,   1167,   1168,   1169,   1170, 
		  1171,   1172,   -137,   -137,   -137,   -137,   -137,   -137, 
		   121,    122,   1183,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    282,    283,    284,    285,    286, 
		   287,    288,    289,    290,   1190,    291,    397,    398, 
		   399,    400,    401,    402,    403,    404,    405,    406, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		  1188,    -12,    -12,   1185,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,   -104,   -104,   -104,   -104,   -104,   -104, 
		  -104,   -104,   1192,   -103,   -103,   -103,   -103,   -103, 
		  -103,   -103,   -103,    121,    122,   1194,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,   1196,    -64,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   1200,   1201,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -131,   1204,   1205,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,   -124,   1208,   -119,    -37,     11,   1202, 
		  1213,   1205,   -123,   1202,   1217,   1205,   -121,     -1, 
		   -88,    -89,   1202,   1224,   1205,   -122,     29,    545, 
		  1227,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  1234,     29,   1231,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   1233,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -152,   -152,   -151,   -151,   -150,   -150,   -149, 
		  -149,    -97,   -148,   -148,   -153,   -153,   -154,   -154, 
		  1253,   1253,   1246,   1247,    -98,   1250,   1249,    -99, 
		  1251,   -169,   1247,   -170,   -131,   -131,   -131,   -131, 
		  -131,   -131,   -131,   -131,    621,    622,    623,    624, 
		   626,   1255,    628,    630,   1356,   1268,   1258,   1259, 
		  1260,   -113,    621,    622,    623,    624,    626,    628, 
		   630,   1264,   1262,   -116,    621,    622,    623,    624, 
		   626,    628,    630,   -115,   1265,   -117,   1260,   -117, 
		  -118,   -118,   -114,    -57,   1270,   1271,      2,      3, 
		  1272,    133,    134,    135,    136,      5,    137,      6, 
		  1273,    139,     60,    140,      9,     10,    141,    142, 
		   143,   1274,     12,     13,    145,   1275,     15,     66, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    621,    622,    623,    624,    625, 
		   626,    627,    628,    629,    630,    491,     32,     33, 
		    34,     35,     36,     37,     38,     39,     40,     41, 
		  1327,   1326,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    211,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,   1312, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   -164,   -164,   -164,   -164,   -164, 
		  -164,   -164,   -164,   1271,      2,      3,   1272,    133, 
		   134,    135,    136,      5,    137,      6,   1273,    139, 
		    60,    140,      9,     10,    141,    142,    143,   1274, 
		    12,     13,    145,   1275,     15,     66,   1309,   1308, 
		  1306,   1305,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   1304,    -72,   1302,   -135, 
		  1301,   1298,   1295,   -144,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,     29, 
		  1297,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   -162,   -162,   -162,   -162, 
		  -162,   -162,   -162,   -162,   1299,   1300,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,   -158,   -158,   -158,   -158,   -158,   -158,   -158, 
		  -158,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,   1271,      2,      3,   1272, 
		   133,    134,    135,    136,      5,    137,      6,   1273, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   -54,   1274,     12,     13,    145,   1275,     15,     66, 
		   -53,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		  -119,   -119,   -119,    -90,    -90,    -90,    -52,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    127,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,   1315,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,   1306,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,   1320,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    213,    214,    215,    216,    217,    218, 
		   219,    220,    221,    222,    277,   1315,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,     29,    545,   1328,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   -157,   -157,   -157,   -157,   -157,   -157, 
		  -157,   -157,   1335,     29,   1332,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  -159,   -159,   -159,   -159,   -159,   -159,   -159,   -159, 
		  1334,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -161,   -161,   -161,   -161, 
		  -161,   -161,   -161,   -161,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -160, 
		  -160,   -160,   -160,   -160,   -160,   -160,   -160,   -129, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,      2,      3,    493,      5,      6, 
		     8,    494,     10,    495,     12,     13,    496,     15, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    514,   1342,   1315,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    495, 
		   514,   1347,   1315,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,   1350,     29, 
		   635,   1355,     29,   1354,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,   1271,      2,      3,   1272,    133,    134, 
		   135,    136,      5,    137,      6,   1273,    139,     60, 
		   140,      9,     10,    141,    142,    143,   1274,     12, 
		    13,    145,   1275,     15,     66,   1309,    -91,    -91, 
		   -91,    621,    622,    623,    624,    626,   1360,    628, 
		   630,   1363,   1268,   1363,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -93, 
		   -93,    -93,   1309,    -37,    -37,    -37,    -94,    -94, 
		   -94,   1369,     29,    635,   1374,     29,   1373,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,   -163,   -163, 
		  -163,   -163,   -163,   -163,   -163,   -163,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36
	]

	/*  GotoI, J, A
	 *
	 *      Compressed goto table.
	 */

	private static let GotoI:[UInt32] = [
		     0,     11,     11,     11,     11,     14,     14,     14, 
		    17,     17,     17,     17,     17,     17,     17,     17, 
		    17,     17,     18,     21,     24,     24,     28,     29, 
		    29,     29,     29,     35,     35,     37,     37,     37, 
		    46,     46,     46,     46,     46,     46,     47,     52, 
		    57,     57,     57,     57,     57,     58,     59,     59, 
		    61,     62,     62,     62,     62,     82,     82,     82, 
		    82,     82,     82,     83,     86,     87,     92,     97, 
		    97,     97,     97,     97,     97,     97,     97,     97, 
		    97,     98,     98,     99,     99,     99,    100,    100, 
		   101,    102,    102,    104,    105,    105,    105,    106, 
		   106,    126,    127,    130,    135,    135,    135,    135, 
		   135,    135,    136,    136,    137,    137,    137,    138, 
		   138,    139,    140,    140,    141,    141,    141,    141, 
		   141,    149,    150,    150,    150,    150,    150,    150, 
		   155,    156,    156,    156,    160,    160,    184,    185, 
		   185,    186,    210,    210,    210,    213,    213,    213, 
		   213,    213,    213,    214,    217,    217,    222,    222, 
		   222,    231,    231,    231,    231,    231,    231,    231, 
		   231,    232,    232,    233,    233,    257,    258,    258, 
		   259,    260,    260,    260,    262,    263,    263,    263, 
		   263,    263,    263,    265,    265,    265,    265,    265, 
		   265,    265,    285,    286,    306,    307,    312,    312, 
		   312,    312,    312,    312,    313,    313,    314,    314, 
		   314,    315,    315,    316,    317,    317,    317,    317, 
		   317,    317,    341,    342,    343,    367,    367,    368, 
		   368,    369,    369,    369,    369,    378,    378,    378, 
		   378,    378,    378,    379,    384,    389,    389,    389, 
		   389,    390,    391,    392,    392,    394,    395,    395, 
		   395,    415,    416,    436,    437,    440,    445,    445, 
		   445,    445,    445,    445,    446,    446,    447,    447, 
		   447,    448,    448,    449,    450,    450,    451,    451, 
		   451,    459,    460,    460,    460,    460,    465,    466, 
		   470,    470,    494,    495,    496,    520,    520,    521, 
		   521,    522,    522,    522,    531,    532,    532,    533, 
		   533,    533,    544,    544,    544,    544,    544,    544, 
		   545,    550,    555,    555,    555,    555,    555,    555, 
		   555,    556,    557,    557,    559,    560,    560,    560, 
		   580,    581,    601,    602,    605,    610,    610,    610, 
		   610,    610,    610,    611,    611,    612,    612,    612, 
		   613,    613,    614,    615,    615,    616,    616,    616, 
		   624,    625,    625,    625,    625,    630,    631,    635, 
		   635,    659,    660,    661,    685,    685,    686,    686, 
		   687,    687,    687,    696,    697,    698,    698,    698, 
		   709,    709,    709,    709,    709,    709,    709,    709, 
		   710,    715,    715,    715,    715,    715,    715,    715, 
		   715,    719,    719,    724,    724,    724,    724,    724, 
		   724,    724,    724,    725,    730,    730,    730,    730, 
		   731,    731,    732,    732,    732,    736,    736,    741, 
		   742,    743,    743,    753,    762,    762,    762,    762, 
		   762,    762,    762,    763,    768,    773,    773,    773, 
		   773,    773,    774,    775,    775,    777,    778,    778, 
		   778,    798,    799,    819,    820,    823,    828,    828, 
		   828,    828,    828,    828,    829,    829,    830,    830, 
		   830,    831,    831,    832,    833,    833,    834,    834, 
		   834,    842,    843,    843,    843,    843,    848,    849, 
		   853,    853,    877,    878,    879,    903,    903,    904, 
		   904,    905,    905,    905,    914,    915,    916,    916, 
		   916,    927,    927,    927,    927,    927,    937,    946, 
		   948,    948,    948,    948,    951,    960,    960,    960, 
		   960,    963,    972,    972,    972,    973,    973,    973, 
		   973,    973,    983,    983,    983,    991,    994,    994, 
		   994,    994,   1003,   1004,   1004,   1004,   1004,   1004, 
		  1004,   1006,   1006,   1006,   1006,   1006,   1006,   1007, 
		  1031,   1031,   1031,   1034,   1034,   1035,   1035,   1044, 
		  1046,   1046,   1055,   1055,   1055,   1055,   1058,   1067, 
		  1067,   1067,   1067,   1070,   1079,   1079,   1079,   1080, 
		  1081,   1082,   1090,   1091,   1092,   1092,   1093,   1093, 
		  1097,   1097,   1097,   1097,   1097,   1099,   1099,   1099, 
		  1099,   1099,   1099,   1099,   1100,   1100,   1100,   1100, 
		  1101,   1101,   1101,   1102,   1102,   1103,   1127,   1127, 
		  1128,   1128,   1128,   1128,   1131,   1131,   1131,   1131, 
		  1131,   1131,   1132,   1137,   1137,   1137,   1137,   1138, 
		  1138,   1138,   1138,   1141,   1141,   1141,   1141,   1141, 
		  1141,   1142,   1147,   1147,   1147,   1147,   1147,   1147, 
		  1148,   1148,   1158,   1167,   1167,   1167,   1168,   1168, 
		  1168,   1168,   1168,   1169,   1169,   1179,   1188,   1188, 
		  1188,   1189,   1189,   1189,   1189,   1189,   1189,   1189, 
		  1189,   1189,   1189,   1189,   1189,   1189,   1189,   1189, 
		  1189,   1189,   1189,   1192,   1192,   1192,   1194,   1194, 
		  1194,   1194,   1194,   1194,   1194,   1194,   1194,   1194, 
		  1194,   1194,   1194,   1194,   1194,   1199,   1199,   1199, 
		  1199,   1199,   1199,   1200,   1205,   1205,   1205,   1205, 
		  1206,   1206,   1207,   1207,   1211,   1211,   1216,   1217, 
		  1218,   1218,   1228,   1237,   1237,   1237,   1238,   1238, 
		  1238,   1238,   1238,   1238,   1246,   1247,   1248,   1248, 
		  1249,   1249,   1249,   1249,   1249,   1249,   1249,   1249, 
		  1259,   1268,   1268,   1268,   1269,   1269,   1269,   1269, 
		  1269,   1279,   1288,   1290,   1290,   1293,   1302,   1302, 
		  1302,   1305,   1314,   1314,   1315,   1315,   1315,   1315, 
		  1323,   1332,   1333,   1333,   1334,   1334,   1335,   1336, 
		  1336,   1337,   1337,   1342,   1342,   1342,   1342,   1342, 
		  1342,   1343,   1348,   1348,   1348,   1348,   1349,   1349, 
		  1350,   1350,   1354,   1354,   1359,   1360,   1361,   1361, 
		  1371,   1380,   1380,   1380,   1381,   1381,   1381,   1381, 
		  1381,   1389,   1390,   1401,   1401,   1401,   1402,   1402, 
		  1402,   1402,   1402,   1402,   1402,   1412,   1421,   1423, 
		  1423,   1426,   1435,   1435,   1435,   1438,   1447,   1447, 
		  1448,   1448,   1448,   1448,   1456,   1465,   1466,   1466, 
		  1467,   1467,   1468,   1469,   1469,   1470,   1470,   1475, 
		  1475,   1475,   1475,   1475,   1475,   1476,   1481,   1481, 
		  1481,   1481,   1482,   1482,   1483,   1483,   1487,   1487, 
		  1492,   1493,   1494,   1494,   1504,   1513,   1513,   1513, 
		  1514,   1514,   1514,   1514,   1514,   1522,   1523,   1524, 
		  1524,   1525,   1525,   1525,   1525,   1525,   1525,   1536, 
		  1536,   1536,   1536,   1536,   1544,   1553,   1554,   1554, 
		  1555,   1555,   1556,   1557,   1557,   1558,   1558,   1563, 
		  1567,   1568,   1568,   1568,   1578,   1587,   1587,   1587, 
		  1588,   1588,   1588,   1588,   1588,   1588,   1588,   1588, 
		  1588,   1588,   1589,   1594,   1594,   1594,   1594,   1595, 
		  1595,   1596,   1596,   1600,   1600,   1605,   1606,   1607, 
		  1607,   1617,   1626,   1626,   1626,   1627,   1627,   1627, 
		  1627,   1627,   1627,   1627,   1627,   1627,   1632,   1633, 
		  1633,   1633,   1633,   1657,   1658,   1659,   1683,   1683, 
		  1684,   1684,   1685,   1685,   1685,   1694,   1695,   1696, 
		  1696,   1696,   1700,   1700,   1700,   1702,   1702,   1702, 
		  1702,   1702,   1702,   1702,   1702,   1713,   1713,   1713, 
		  1714,   1714,   1715,   1715,   1715,   1715,   1715,   1715, 
		  1725,   1734,   1736,   1736,   1739,   1748,   1748,   1751, 
		  1751,   1751,   1751,   1759,   1768,   1769,   1769,   1770, 
		  1770,   1771,   1772,   1772,   1773,   1773,   1773,   1776, 
		  1776,   1778,   1778,   1778,   1778,   1779,   1779,   1779, 
		  1788,   1789,   1790,   1790,   1790,   1801,   1801,   1801, 
		  1801,   1801,   1811,   1820,   1822,   1822,   1825,   1834, 
		  1834,   1834,   1837,   1846,   1846,   1847,   1847,   1847, 
		  1847,   1855,   1864,   1865,   1865,   1866,   1866,   1867, 
		  1868,   1868,   1869,   1869,   1889,   1890,   1910,   1911, 
		  1916,   1916,   1916,   1916,   1916,   1916,   1917,   1917, 
		  1918,   1918,   1918,   1919,   1919,   1920,   1921,   1921, 
		  1922,   1922,   1922,   1930,   1931,   1932,   1933,   1933, 
		  1933,   1938,   1939,   1943,   1943,   1953,   1962,   1962, 
		  1962,   1963,   1963,   1963,   1963,   1963,   1963,   1963, 
		  1987,   1988,   1989,   2013,   2013,   2014,   2014,   2015, 
		  2015,   2015,   2024,   2025,   2026,   2026,   2026,   2037, 
		  2037,   2037,   2037,   2037,   2045,   2054,   2055,   2055, 
		  2056,   2056,   2057,   2058,   2058,   2059,   2059,   2064, 
		  2064,   2064,   2064,   2064,   2064,   2065,   2070,   2070, 
		  2070,   2070,   2071,   2071,   2072,   2072,   2076,   2076, 
		  2081,   2082,   2083,   2083,   2093,   2102,   2102,   2102, 
		  2103,   2103,   2103,   2103,   2103,   2111,   2112,   2112, 
		  2112,   2136,   2137,   2138,   2162,   2162,   2163,   2163, 
		  2164,   2164,   2164,   2173,   2174,   2175,   2175,   2175, 
		  2186,   2186,   2186,   2187,   2187,   2187,   2187,   2196, 
		  2196,   2196,   2205,   2207,   2207,   2210,   2219,   2219, 
		  2222,   2230,   2239,   2240,   2240,   2241,   2241,   2242, 
		  2243,   2243,   2244,   2244,   2249,   2249,   2249,   2249, 
		  2249,   2249,   2250,   2255,   2255,   2255,   2255,   2256, 
		  2256,   2257,   2257,   2261,   2261,   2266,   2267,   2268, 
		  2268,   2278,   2287,   2287,   2287,   2288,   2288,   2288, 
		  2288,   2288,   2289,   2289,   2289,   2289,   2289,   2289, 
		  2289,   2289,   2289,   2289,   2289,   2290,   2314,   2314, 
		  2315,   2315,   2315,   2316,   2317,   2317,   2318,   2318, 
		  2319,   2319,   2320,   2320,   2320,   2320,   2320,   2321, 
		  2321,   2322,   2322,   2326,   2326,   2326,   2328,   2328, 
		  2328,   2328,   2328,   2328,   2328,   2328,   2328,   2328, 
		  2328,   2328,   2328,   2328,   2329,   2330,   2331,   2331, 
		  2331,   2331,   2331,   2331,   2332,   2332,   2332,   2334, 
		  2334,   2335,   2335,   2336,   2338,   2338,   2338,   2340, 
		  2340,   2340,   2341,   2341,   2341,   2341,   2341,   2366, 
		  2366,   2369,   2370,   2379,   2379,   2379,   2379,   2379, 
		  2379,   2380,   2380,   2381,   2381,   2406,   2407,   2407, 
		  2408,   2408,   2408,   2408,   2408,   2408,   2408,   2408, 
		  2410,   2410,   2410,   2410,   2410,   2410,   2410,   2435, 
		  2435,   2435,   2435,   2435,   2435,   2435,   2435,   2435, 
		  2435,   2459,   2460,   2461,   2485,   2485,   2486,   2486, 
		  2487,   2487,   2487,   2496,   2497,   2498,   2498,   2498, 
		  2502,   2502,   2502,   2504,   2504,   2504,   2504,   2504, 
		  2504,   2504,   2504,   2512,   2521,   2522,   2522,   2523, 
		  2523,   2524,   2525,   2525,   2526,   2526,   2526,   2529, 
		  2529,   2531,   2531,   2531,   2531,   2556,   2557,   2557, 
		  2559,   2560,   2561,   2562,   2586,   2586,   2587,   2587, 
		  2587,   2587,   2590,   2590,   2592,   2592,   2592,   2592
	]

	private static let GotoJ:[UInt32] = [
		0x110059, 0x110068, 0x110069, 0x11006a, 0x110079, 0x11007a, 0x11007d, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x110086, 0x110087, 0x110088, 0x11006c, 0x11006d, 
		0x110088, 0x11007d, 0x110068, 0x110069, 0x11006a, 0x110068, 0x110069, 0x11006a, 
		0x110068, 0x110069, 0x11006a, 0x11007d, 0x11007e, 0x110059, 0x11007a, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110070, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x110074, 0x11004c, 0x110056, 0x110073, 0x110085, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110083, 0x11007e, 0x11004b, 0x110089, 0x11008a, 0x11007e, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110070, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x11007e, 0x11005a, 0x110074, 0x110077, 0x11004c, 0x110056, 0x110073, 
		0x110085, 0x110084, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110083, 0x11007e, 0x11004b, 
		0x110089, 0x11008a, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 0x11007e, 
		0x11005a, 0x110074, 0x110077, 0x11004c, 0x110085, 0x11004d, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004c, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 
		0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 
		0x110088, 0x11008b, 0x110086, 0x110087, 0x110088, 0x11007e, 0x11004b, 0x110089, 
		0x11008a, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11007e, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 
		0x11008b, 0x110077, 0x110074, 0x110077, 0x110056, 0x110073, 0x110085, 0x110089, 
		0x11008a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110083, 0x110084, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110083, 0x11007e, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 
		0x11007e, 0x11005a, 0x110074, 0x110077, 0x11004c, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 
		0x110077, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 
		0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110055, 0x110074, 0x11004c, 
		0x110056, 0x110073, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110083, 0x110084, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110083, 0x11007e, 0x11004b, 0x110089, 0x11008a, 
		0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 0x11007e, 0x11005a, 0x110074, 
		0x110077, 0x11004c, 0x110085, 0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004c, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x110077, 0x110077, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x110074, 0x11004c, 0x110056, 0x110073, 0x110085, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110083, 0x110084, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 
		0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110083, 0x11007e, 0x11004b, 0x110089, 0x11008a, 0x110048, 0x110049, 0x11004d, 
		0x110065, 0x110070, 0x11007e, 0x11005a, 0x110074, 0x110077, 0x11004c, 0x110085, 
		0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004c, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110073, 0x11004d, 
		0x110065, 0x110070, 0x110081, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 0x110077, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x110049, 0x11004d, 0x110065, 0x110070, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110070, 0x11004b, 0x11004d, 0x110065, 0x110070, 
		0x110072, 0x110081, 0x110074, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 
		0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110073, 0x110073, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110070, 
		0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110074, 0x11004c, 0x110056, 
		0x110073, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110083, 0x110084, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 
		0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x110083, 0x11007e, 0x11004b, 0x110089, 0x11008a, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110070, 0x11007e, 0x11005a, 0x110074, 0x110077, 
		0x11004c, 0x110085, 0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004c, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 
		0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 
		0x110077, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x110089, 0x11008a, 0x11004b, 0x110089, 0x11008a, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x110051, 
		0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110086, 
		0x110087, 0x110088, 0x11004d, 0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004a, 0x110089, 0x11008a, 0x11005f, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11004b, 
		0x110089, 0x11008a, 0x11005a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110089, 0x11008a, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 
		0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 
		0x110052, 0x11004c, 0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004c, 0x11004a, 0x11005a, 0x110089, 0x11008a, 0x11008d, 
		0x11008e, 0x110089, 0x11008a, 0x11008e, 0x11008e, 0x11008e, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 
		0x11004d, 0x110065, 0x110070, 0x11004b, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x11007b, 0x11004d, 0x110065, 0x110070, 0x11004b, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 
		0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x11008d, 
		0x110089, 0x11008a, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x11004b, 
		0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110074, 0x110073, 0x11004d, 
		0x110065, 0x110070, 0x110081, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 
		0x110073, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004c, 0x11004b, 
		0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110089, 0x11008a, 0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 
		0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x11004d, 0x110050, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004a, 0x11005a, 0x110052, 0x11004a, 
		0x11005a, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x11004b, 0x11004d, 
		0x110065, 0x110070, 0x110072, 0x110081, 0x110074, 0x110073, 0x11004d, 0x110065, 
		0x110070, 0x110081, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110073, 
		0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004c, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110089, 0x11008a, 0x11004b, 
		0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 
		0x110051, 0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x11004d, 0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x11004b, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x110074, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004d, 
		0x110065, 0x110070, 0x110072, 0x110081, 0x110073, 0x110073, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004b, 0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004c, 0x11005a, 0x110073, 0x11004d, 0x110062, 0x110063, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110051, 0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x11004d, 0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 
		0x110070, 0x110072, 0x110081, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004b, 
		0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004b, 0x11004b, 0x11004d, 0x110065, 0x110070, 
		0x110072, 0x110081, 0x110074, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 
		0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110073, 0x110073, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 
		0x110073, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 
		0x11008b, 0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x110077, 0x110077, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110055, 0x11005a, 
		0x110089, 0x11008a, 0x11008d, 0x11008e, 0x110089, 0x11008a, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110073, 0x11006f, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110089, 0x11008a, 
		0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x110051, 
		0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11004d, 
		0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x110089, 0x11008a, 0x11008d, 
		0x110089, 0x11008a, 0x110077, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110055, 0x11005a, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110089, 0x11008a, 0x11004b, 0x110089, 
		0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x110051, 
		0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11004d, 
		0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 
		0x110066, 0x110067, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110066, 0x110067, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110083, 0x11007e, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110070, 0x11007e, 0x11005a, 0x110074, 0x110077, 
		0x11004c, 0x110085, 0x11004d, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x110074, 0x11004c, 0x11004d, 0x110065, 0x110070, 
		0x110072, 0x110081, 0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x11004b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 0x110077, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110051, 0x110052, 0x110059, 
		0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11004d, 0x110050, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004a, 0x11005a, 
		0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 
		0x11004b, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110074, 0x110073, 
		0x11004d, 0x110065, 0x110070, 0x110081, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x110073, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 
		0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 0x11004d, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004c, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 
		0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 
		0x110088, 0x11008b, 0x110077, 0x110077, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110055, 0x11005a, 0x11004d, 
		0x110062, 0x110063, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 
		0x110081, 0x110082, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 
		0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110089, 0x11008a, 0x11004b, 
		0x110089, 0x11008a, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11004b, 0x110089, 0x11008a, 0x110051, 0x110052, 
		0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 0x11004d, 0x110050, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004a, 
		0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110070, 0x110072, 
		0x110081, 0x11004b, 0x11004d, 0x110065, 0x110070, 0x110072, 0x110081, 0x110074, 
		0x110073, 0x11004d, 0x110065, 0x110070, 0x110081, 0x11004d, 0x110065, 0x110070, 
		0x110072, 0x110081, 0x110073, 0x110073, 0x11004d, 0x110064, 0x110065, 0x11006b, 
		0x110070, 0x110071, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004d, 0x110064, 
		0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x11004b, 
		0x110073, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 
		0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 
		0x110088, 0x11008b, 0x110077, 0x11007d, 0x11007e, 0x11005a, 0x11007e, 0x11005a, 
		0x11007e, 0x11005a, 0x110089, 0x11008a, 0x11008d, 0x11008e, 0x110089, 0x11008a, 
		0x11007e, 0x11007e, 0x11008e, 0x11008e, 0x110075, 0x110088, 0x110060, 0x110076, 
		0x110075, 0x110088, 0x110075, 0x110088, 0x110076, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x11007c, 0x110080, 
		0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110086, 0x110087, 
		0x110088, 0x11007e, 0x11004d, 0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 
		0x110080, 0x110081, 0x110082, 0x11007e, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x11007c, 0x110080, 
		0x110081, 0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 0x110077, 
		0x110089, 0x11008a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 0x110065, 0x110067, 
		0x11006e, 0x110070, 0x110072, 0x11007c, 0x110080, 0x110081, 0x110082, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 
		0x110087, 0x110088, 0x11008b, 0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110067, 0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 0x110077, 0x11004d, 
		0x110064, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 
		0x110055, 0x11005a, 0x110089, 0x11008a, 0x11008d, 0x11008e, 0x110089, 0x11008a, 
		0x110051, 0x110052, 0x110059, 0x11005e, 0x110086, 0x110087, 0x110088, 0x11008b, 
		0x11004d, 0x110050, 0x110065, 0x11006b, 0x110070, 0x110072, 0x110080, 0x110081, 
		0x110082, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x110089, 0x11008a, 
		0x11008d, 0x110089, 0x11008a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 0x110065, 
		0x110067, 0x11006e, 0x110070, 0x110072, 0x11007c, 0x110080, 0x110081, 0x110082, 
		0x110086, 0x110087, 0x110088, 0x11008b, 0x110077, 0x110075, 0x110088, 0x11005a, 
		0x110060, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110067, 
		0x11006e, 0x110070, 0x110072, 0x110080, 0x110081, 0x110082, 0x110086, 0x110087, 
		0x110088, 0x11008b, 0x110077, 0x110089, 0x11008a, 0x11008d, 0x110089, 0x11008a
	]

	private static let GotoA:[Int16] = [
		    16,     17,     18,     19,     20,     21,     22,     23, 
		    24,     25,     26,   1368,    632,    633,   1243,   1244, 
		  1245,   1222,   1221,     18,     19,   1220,     18,     19, 
		  1210,     18,     19,   1211,   1203,     16,     27,     23, 
		    24,     25,     26,     30,     31,     42,     43,     44, 
		    45,     46,     47,     48,     49,     50,   1197,   1195, 
		   364,    365,    366,    367,    382,    383,    384,   1193, 
		   386,    119,    537,   1163,    123,     52,     67,     68, 
		    69,     70,     71,     72,     73,     74,     75,     76, 
		    77,     78,     79,     80,     81,     82,     83,     84, 
		    85,     86,   1152,   1146,    472,     31,   1142,   1140, 
		   364,    365,    366,    367,    382,    383,    384,   1138, 
		   386,   1130,   1121,   1040,   1119,   1116,   1086,   1042, 
		  1011,     88,     93,     42,     94,     95,     96,     97, 
		    98,     99,    100,    101,    102,    103,    104,    105, 
		   106,     47,    107,     49,    108,    109,   1000,    987, 
		   472,     31,    983,    364,    365,    366,    367,    975, 
		   126,    119,    116,    112,     52,     42,     44,    113, 
		   114,     47,    107,     49,     50,    112,     42,     44, 
		   114,    120,     49,    123,     42,     44,    114,    124, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,    972,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		   128,    130,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    157,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,    965,    632,    633,    954,    945,    472, 
		    31,    382,    383,    384,    935,    386,     42,    930, 
		    44,     45,     46,     47,     48,     49,     50,    916, 
		   907,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    905,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    904,    901,    900,    854,    855,    177,    171, 
		    31,     67,     68,     69,     70,     71,     72,     73, 
		    74,     75,     76,     77,     78,     79,     80,     81, 
		    82,     83,     84,     85,    178,    179,    183,     42, 
		   184,    185,    186,    187,    188,    189,    190,    191, 
		   192,    193,    194,    195,    196,     47,    107,     49, 
		   197,    198,    843,    841,    364,    365,    366,    367, 
		   212,    202,    119,    200,    112,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    208, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    203,    205,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    206,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    207, 
		   210,    223,    224,    225,    226,    227,    228,    229, 
		   230,    231,    836,    834,    364,    365,    366,    367, 
		   382,    383,    384,    832,    386,    830,    261,    828, 
		   798,    263,    232,     67,     68,     69,     70,     71, 
		    72,     73,     74,     75,     76,     77,     78,     79, 
		    80,     81,     82,     83,     84,     85,    233,    234, 
		   239,    223,    240,    241,    242,    243,    244,    245, 
		   246,    247,    248,    249,    250,    251,    252,    228, 
		   253,    230,    254,    255,    787,    774,    472,     31, 
		   770,    364,    365,    366,    367,    275,    266,    261, 
		   260,    256,    232,    223,    225,    257,    258,    228, 
		   253,    230,    231,    256,    223,    225,    258,    262, 
		   230,    263,    223,    225,    258,    264,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		   272,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,    267,    269, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,    270,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		   271,    274,    223,    276,    225,    226,    227,    228, 
		   229,    230,    231,    278,    279,    292,    293,    294, 
		   295,    296,    297,    298,    299,    300,    301,    302, 
		   769,    767,    364,    365,    366,    367,    382,    383, 
		   384,    765,    386,    332,    760,    730,    334,    303, 
		    67,     68,     69,     70,     71,     72,     73,     74, 
		    75,     76,     77,     78,     79,     80,     81,     82, 
		    83,     84,     85,    304,    305,    310,    292,    311, 
		   312,    313,    314,    315,    316,    317,    318,    319, 
		   320,    321,    322,    323,    299,    324,    301,    325, 
		   326,    719,    706,    472,     31,    363,    364,    365, 
		   366,    367,    346,    337,    332,    331,    327,    303, 
		   292,    296,    328,    329,    299,    324,    301,    302, 
		   327,    292,    296,    329,    333,    301,    334,    292, 
		   296,    329,    335,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,    343,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,    338,    340,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    341, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    342,    345,    223, 
		   347,    225,    226,    227,    228,    229,    230,    231, 
		   348,    349,    292,    352,    294,    295,    296,    297, 
		   298,    299,    300,    301,    302,    697,    382,    383, 
		   384,    385,    386,    369,    365,    366,    367,    371, 
		   364,    365,    366,    367,    396,    382,    383,    384, 
		   392,    386,    390,    388,    382,    383,    384,    389, 
		   382,    383,    384,    391,    386,    388,    388,    292, 
		   486,    296,    297,    298,    693,    299,    300,    301, 
		   302,    407,    408,    409,    410,    411,    412,    413, 
		   414,    415,    691,    689,    364,    365,    366,    367, 
		   382,    383,    384,    687,    386,    445,    683,    652, 
		   447,    416,     67,     68,     69,     70,     71,     72, 
		    73,     74,     75,     76,     77,     78,     79,     80, 
		    81,     82,     83,     84,     85,    417,    418,    423, 
		   407,    424,    425,    426,    427,    428,    429,    430, 
		   431,    432,    433,    434,    435,    436,    412,    437, 
		   414,    438,    439,    492,    471,    472,     31,    467, 
		   364,    365,    366,    367,    459,    450,    445,    444, 
		   440,    416,    407,    409,    441,    442,    412,    437, 
		   414,    415,    440,    407,    409,    442,    446,    414, 
		   447,    407,    409,    442,    448,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    456, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    451,    453,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    454,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    455, 
		   458,    223,    460,    225,    226,    227,    228,    229, 
		   230,    231,    461,    462,    292,    465,    294,    295, 
		   296,    297,    298,    299,    300,    301,    302,    292, 
		   486,    296,    297,    298,    487,    299,    300,    301, 
		   302,    407,    474,    409,    410,    411,    412,    413, 
		   414,    415,    473,     31,    477,    478,     31,    407, 
		   479,    409,    410,    411,    412,    413,    414,    415, 
		   477,    482,     31,    407,    483,    409,    410,    411, 
		   412,    413,    414,    415,    477,    292,    486,    296, 
		   297,    298,    490,    299,    300,    301,    302,    497, 
		   498,    499,    500,    501,    502,     25,    503,    631, 
		   632,    633,     42,    535,     44,    536,    114,     47, 
		    48,     49,     50,    515,    505,     31,    512,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    513,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    519, 
		   520,    521,    517,    407,    524,    409,    410,    411, 
		   412,    413,    414,    415,    523,    521,    223,    522, 
		   225,    226,    227,    228,    229,    230,    231,    527, 
		   528,    521,    407,    529,    409,    410,    411,    412, 
		   413,    414,    415,    527,    532,    521,    407,    533, 
		   409,    410,    411,    412,    413,    414,    415,    527, 
		   539,    537,     42,     44,    538,    114,     47,     48, 
		    49,     50,    537,    540,    542,    547,     31,    548, 
		   549,    551,     31,    557,    557,    557,    566,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    567,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    569, 
		   581,    582,    583,    614,    382,    383,    384,    610, 
		   386,    586,    596,    597,    598,    603,    382,    383, 
		   384,    599,    386,    388,    292,    486,    296,    297, 
		   298,    608,    299,    300,    301,    302,    407,    604, 
		   409,    410,    411,    412,    413,    414,    415,    606, 
		   388,    292,    486,    296,    297,    298,    619,    299, 
		   300,    301,    302,    407,    615,    409,    410,    411, 
		   412,    413,    414,    415,    617,    636,     31,    637, 
		   638,     31,    662,    663,    664,    665,    666,    675, 
		   382,    383,    384,    671,    386,    669,    667,    662, 
		   663,    664,    668,    662,    663,    664,    670,    666, 
		   667,    388,    292,    486,    296,    297,    298,    680, 
		   299,    300,    301,    302,    407,    676,    409,    410, 
		   411,    412,    413,    414,    415,    678,    407,    409, 
		   684,    442,    412,    413,    414,    415,    683,    686, 
		   388,    292,    486,    296,    297,    298,    702,    299, 
		   300,    301,    302,    407,    698,    409,    410,    411, 
		   412,    413,    414,    415,    700,    292,    486,    296, 
		   297,    298,    717,    299,    300,    301,    302,    407, 
		   707,    409,    410,    411,    412,    413,    414,    415, 
		   473,     31,    710,    478,     31,    407,    711,    409, 
		   410,    411,    412,    413,    414,    415,    710,    482, 
		    31,    407,    714,    409,    410,    411,    412,    413, 
		   414,    415,    710,    720,    721,    499,    500,    501, 
		   502,     25,    503,     42,    725,     44,    536,    114, 
		    47,     48,     49,     50,    722,    724,    726,    727, 
		   729,    740,    741,    742,    743,    744,    753,    382, 
		   383,    384,    749,    386,    747,    745,    740,    741, 
		   742,    746,    740,    741,    742,    748,    744,    745, 
		   388,    292,    486,    296,    297,    298,    758,    299, 
		   300,    301,    302,    407,    754,    409,    410,    411, 
		   412,    413,    414,    415,    756,    292,    296,    761, 
		   329,    299,    300,    301,    302,    760,    292,    763, 
		   294,    295,    296,    297,    298,    299,    300,    301, 
		   302,    388,    292,    486,    296,    297,    298,    785, 
		   299,    300,    301,    302,    407,    775,    409,    410, 
		   411,    412,    413,    414,    415,    473,     31,    778, 
		   478,     31,    407,    779,    409,    410,    411,    412, 
		   413,    414,    415,    778,    482,     31,    407,    782, 
		   409,    410,    411,    412,    413,    414,    415,    778, 
		   788,    789,    499,    500,    501,    502,     25,    503, 
		    42,    793,     44,    536,    114,     47,     48,     49, 
		    50,    790,    792,    794,    795,    797,    808,    809, 
		   810,    811,    812,    821,    382,    383,    384,    817, 
		   386,    815,    813,    808,    809,    810,    814,    808, 
		   809,    810,    816,    812,    813,    388,    292,    486, 
		   296,    297,    298,    826,    299,    300,    301,    302, 
		   407,    822,    409,    410,    411,    412,    413,    414, 
		   415,    824,    223,    225,    829,    258,    228,    229, 
		   230,    231,    828,    831,    388,    292,    839,    294, 
		   295,    296,    297,    298,    299,    300,    301,    302, 
		   844,    845,    499,    500,    501,    502,     25,    503, 
		    42,    849,     44,    536,    114,     47,     48,     49, 
		    50,    846,    848,    850,    851,    853,    877,    878, 
		   879,    880,    881,    148,    159,    857,    858,    861, 
		   292,    486,    296,    297,    298,    866,    299,    300, 
		   301,    302,    407,    862,    409,    410,    411,    412, 
		   413,    414,    415,    864,    890,    382,    383,    384, 
		   886,    386,    884,    882,    877,    878,    879,    883, 
		   877,    878,    879,    885,    881,    882,    388,    292, 
		   486,    296,    297,    298,    895,    299,    300,    301, 
		   302,    407,    891,    409,    410,    411,    412,    413, 
		   414,    415,    893,    148,    159,    857,    902,    165, 
		   855,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    913,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    908,    910,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,    911,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,    912,    915,    223,    917,    225, 
		   226,    227,    228,    229,    230,    231,    918,    919, 
		   923,     31,    924,    925,    927,     31,    292,    933, 
		   294,    295,    296,    297,    298,    299,    300,    301, 
		   302,    388,    939,    292,    486,    296,    297,    298, 
		   952,    299,    300,    301,    302,    407,    946,    409, 
		   410,    411,    412,    413,    414,    415,    473,     31, 
		   864,    478,     31,    407,    949,    409,    410,    411, 
		   412,    413,    414,    415,    864,    482,     31,    955, 
		   956,    499,    500,    501,    502,     25,    503,     42, 
		   960,     44,    536,    114,     47,     48,     49,     50, 
		   957,    959,    961,    962,    964,    967,     31,    968, 
		   969,     31,    974,    223,    976,    225,    226,    227, 
		   228,    229,    230,    231,    977,    978,    292,    981, 
		   294,    295,    296,    297,    298,    299,    300,    301, 
		   302,    292,    486,    296,    297,    298,    998,    299, 
		   300,    301,    302,    407,    988,    409,    410,    411, 
		   412,    413,    414,    415,    473,     31,    991,    478, 
		    31,    407,    992,    409,    410,    411,    412,    413, 
		   414,    415,    991,    482,     31,    407,    995,    409, 
		   410,    411,    412,    413,    414,    415,    991,   1001, 
		  1002,    499,    500,    501,    502,     25,    503,     42, 
		  1006,     44,    536,    114,     47,     48,     49,     50, 
		  1003,   1005,   1007,   1008,   1010,     67,     68,     69, 
		    70,     71,     72,     73,     74,     75,     76,     77, 
		    78,     79,     80,     81,     82,     83,     84,     85, 
		  1012,   1013,   1017,     68,   1018,   1019,   1020,   1021, 
		  1022,   1023,   1024,   1025,   1026,   1027,   1028,   1029, 
		  1030,     82,   1031,     84,   1032,   1033,   1075,   1073, 
		   364,    365,    366,    367,   1065,   1056,   1040,   1054, 
		  1034,   1011,     68,   1036,   1037,   1038,     82,   1031, 
		    84,   1039,   1046,   1040,   1034,     68,   1036,   1038, 
		  1041,     84,   1042,     68,   1036,   1038,   1043,    292, 
		   486,    296,    297,    298,   1051,    299,    300,    301, 
		   302,    407,   1047,    409,    410,    411,    412,    413, 
		   414,    415,   1049,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,   1062,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,   1057,   1059,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,   1060, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,   1061,   1064,    223, 
		  1066,    225,    226,    227,    228,    229,    230,    231, 
		  1067,   1068,    292,   1071,    294,    295,    296,    297, 
		   298,    299,    300,    301,    302,   1076,   1077,    499, 
		   500,    501,    502,     25,    503,     42,   1081,     44, 
		   536,    114,     47,     48,     49,     50,   1078,   1080, 
		  1082,   1083,   1085,   1096,   1097,   1098,   1099,   1100, 
		  1109,    382,    383,    384,   1105,    386,   1103,   1101, 
		  1096,   1097,   1098,   1102,   1096,   1097,   1098,   1104, 
		  1100,   1101,    388,    292,    486,    296,    297,    298, 
		  1114,    299,    300,    301,    302,    407,   1110,    409, 
		   410,    411,    412,    413,    414,    415,   1112,     68, 
		  1036,   1117,   1038,     82,     83,     84,   1039,   1116, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,   1127,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		  1122,   1124,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1125,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1126,   1129,    223,   1131,    225,    226, 
		   227,    228,    229,    230,    231,   1132,   1133,    292, 
		  1136,    294,    295,    296,    297,    298,    299,    300, 
		   301,    302,    388,    223,   1143,    225,    226,    227, 
		   228,    229,    230,    231,    407,   1147,    409,    410, 
		   411,    412,    413,    414,    415,    473,     31,   1049, 
		   478,     31,    407,   1150,    409,    410,    411,    412, 
		   413,    414,    415,   1049,    482,     31,   1153,   1154, 
		   499,    500,    501,    502,     25,    503,     42,   1158, 
		    44,    536,    114,     47,     48,     49,     50,   1155, 
		  1157,   1159,   1160,   1162,   1173,   1174,   1175,   1176, 
		  1177,   1186,    382,    383,    384,   1182,    386,   1180, 
		  1178,   1173,   1174,   1175,   1179,   1173,   1174,   1175, 
		  1181,   1177,   1178,    388,    292,    486,    296,    297, 
		   298,   1191,    299,    300,    301,    302,    407,   1187, 
		   409,    410,    411,    412,    413,    414,    415,   1189, 
		   388,   1206,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1207,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1209,   1215,   1212,   1214,   1216,   1218, 
		  1223,   1225,   1228,     31,   1229,   1230,   1232,     31, 
		  1359,   1254,   1248,   1252,   1256,   1257,   1269,   1261, 
		  1267,   1257,   1263,   1257,   1266,   1276,    148,   1277, 
		  1278,   1279,   1280,   1281,   1282,   1283,   1284,   1285, 
		  1286,    159,   1287,   1288,   1289,    163,   1290,    164, 
		   165,   1291,   1292,   1293,     25,   1294,   1349,    632, 
		   633,   1338,     42,   1336,     44,     45,     46,     47, 
		    48,     49,     50,   1322,   1313,   1276,    148,   1277, 
		  1278,   1279,   1280,   1281,   1282,   1283,   1284,   1311, 
		  1286,    159,   1287,   1288,   1289,    163,   1290,    164, 
		   165,   1291,   1292,   1293,     25,   1294,   1310,   1307, 
		  1296,     31,   1276,    148,   1277,   1278,   1279,   1280, 
		  1281,   1282,   1283,   1284,   1303,   1286,    159,   1287, 
		  1288,   1289,    163,   1290,    164,    165,   1291,   1292, 
		  1293,     25,   1294,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,   1319,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,   1314,   1316,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,   1317, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,   1318,   1321,    223, 
		  1323,    225,    226,    227,    228,    229,    230,    231, 
		  1324,   1325,   1329,     31,   1330,   1331,   1333,     31, 
		  1339,   1340,    499,    500,    501,    502,     25,    503, 
		    42,   1344,     44,    536,    114,     47,     48,     49, 
		    50,   1341,   1343,   1345,   1346,   1348,   1351,     31, 
		  1352,   1353,     31,   1276,    148,   1277,   1278,   1279, 
		  1280,   1281,   1282,   1283,   1284,   1357,   1286,    159, 
		  1287,   1288,   1289,    163,   1290,    164,    165,   1291, 
		  1292,   1293,     25,   1294,   1358,   1361,   1257,   1367, 
		  1362,   1364,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1365,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1366,   1370,     31,   1371,   1372,     31
	]


	
    var semantic : SemanticHandler = SemanticHandler()
    var params : [Symbol] = []
    var arguments : [(String, TypeSymbol)] = []
    var linkedListArray = ArrayLinkedList()
    var r : Int = 1
    var currentFuncName : String = ""
    

	
    func sendVariableRepeated(id : String){
        error(code: CompilerParser.VAR_ALREADY_DECLARED, data: ["varRep": id as AnyObject])
    }

    func faltanOperandos(){
        error(code: CompilerParser.BAD_OPERANDOS, data: [:])
    }

    func badJumpStackEmpty(){
        error(code: CompilerParser.JUMP_STACK_EMPTY, data: [:])
    }

    func constantAlreadyAssigned(id: String){
        error(code: CompilerParser.CONSTANT_ASSIGNED, data: ["id":id as AnyObject])
    }

    func notArray(id: String){
        error(code: CompilerParser.NOT_ARRAY, data: ["id":id as AnyObject])
    }

    func sendInvalidOperationBetween(t1 : TypeSymbol, t2: TypeSymbol){
        error(code: CompilerParser.TYPE_MISMATCH, data: ["t1": NSNumber(value: t1.rawValue) as AnyObject, "t2": NSNumber(value: t2.rawValue) as AnyObject])
    }

    func sendUndeclareVariable(id: NSString) {
        error(code: CompilerParser.UNDECLARED_VAR, data: ["undeclaredVar": id as NSString])
    }

    func sendTypeMismatch() {
        error(code: CompilerParser.TYPE_MISMATCH, data: [:])
    }
    
    func sendBadParametersForFunc(id: NSString){
        error(code: CompilerParser.BAD_PARAMETERS, data: ["id": id])
    }



	/*
	 *	Error Values
	 */

	public static let ERRORMASK_WARNING = 0x8000
	public static let ERROR_SYNTAX = 0x0001
	public static let ERROR_MISSINGTOKEN = 0x0002
	public static let ERROR_MISSINGTOKENS = 0x0003
	public static let ERROR_STARTERRORID = 0x0100

    
    static let ERROR_UNIMPLEMENTED = (CompilerParser.ERROR_STARTERRORID+1)
    static let VAR_ALREADY_DECLARED = (CompilerParser.ERROR_STARTERRORID+2)
    static let TYPE_MISMATCH = (CompilerParser.ERROR_STARTERRORID+3)
    static let UNDECLARED_VAR = (CompilerParser.ERROR_STARTERRORID+4)
    static let BAD_PARAMETERS = (CompilerParser.ERROR_STARTERRORID+5)
    static let BAD_OPERANDOS = (CompilerParser.ERROR_STARTERRORID+6)
    static let JUMP_STACK_EMPTY = (CompilerParser.ERROR_STARTERRORID+7)
    static let CONSTANT_ASSIGNED = (CompilerParser.ERROR_STARTERRORID+8)
    static let NOT_ARRAY = (CompilerParser.ERROR_STARTERRORID+8)


	/*
	 *	Stack
	 */

	private struct Stack {
		var state: UInt16
		var line: Int
		var column: Int
		var filename: String?
		var value: AnyObject?

		init()
		{
			state = 0
			line = 0
			column = 0
			filename = nil
			value = nil
		}
	}

	/*
	 *	Internal values
	 */

	private var stack: [Stack]
	private var lex: OCLexInput

	// Error support
	private var success: Bool
	private var errorCount: Int

	private var hasError: Bool
	private var errorLine: Int
	private var errorColumn: Int
	private var errorFileName: String?

	// Delegate
	public var errorDelegate: CompilerParserError?


	/*
	 *	Startup
	 */

	public init(lexer: OCLexInput)
	{
		lex = lexer

		stack = Array()
		success = true
		errorCount = 0;
		hasError = false
		errorLine = 0
		errorColumn = 0
		errorFileName = nil
		errorDelegate = nil

        
    semantic.delegate = self

	}

	deinit {
	    
	}

	/*
	 *	Process production rule. This processes the production rule and creates
	 *	a new stack state with the rule reduction.
	 */

	private func processReduction(_ rule: Int16) -> CompilerParser.Stack
	{
		// Get production len, for translating $1...$N into something useful
		let pos = stack.count - Int(CompilerParser.RuleLength[Int(rule)])

		// Set up initial state.
		var s = CompilerParser.Stack()

		// File position of reduced rule is first token of the symbols reduced
		let fs = stack[pos]
		s.filename = fs.filename;
		s.line = fs.line;
		s.column = fs.column;

		do {
			try reduction(rule: rule, at: pos, with: &s)
		} catch {
			// Ignore errors. Can happen when the stack is in an error state
		}

		return s
	}

	private func reduction(rule: Int16, at pos: Int, with s: inout CompilerParser.Stack) throws
	{
		// Now process production.
		//
		// Note that $$ translated into (s.value), and
		// $n translates into ((<type> *)(self.stack[pos+(n-1)])), where <type>
		// is the declared type of the token or production rule.

		// Note: value is AnyObject, but we use as! cast to coerce, and assume
		// the exception is caught and ignored if it all goes south.
		switch rule {

        // Production rules
            // (110046) $accept : programa $end
            // (110047) array : arrayA 
            // (110047) array : arrayA arrayA 
            // (110048) arrayExpressions : arrayFactor SEMICOLON arrayExpressions 
            // (110048) arrayExpressions : arrayFactor 
            // (110049) arrayFactor : factor COMMA arrayFactor 
            // (110049) arrayFactor : factor 
            // (11004a) asignar : ID varAssign 
            case 7:
                semantic.saveValueVariable(id : (stack[pos].value as! NSString) as String)
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE varAssign 
            case 8:
                print("Assigned celle array");
        semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE LSBRAKE expresion RSBRAKE varAssign 
            case 9:
                print("Assigned cell matrix")
        semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID assMulti varAssign 
            case 10:
                semantic.assignOneCellArray((stack[pos].value as! NSString));
        semantic.assignToPointer();
    
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE 
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE assMulti 
            // (11004c) booleanOperators : AND 
            case 13:
                semantic.addOperator(op: Operator.and)
            // (11004c) booleanOperators : OR 
            case 14:
                semantic.addOperator(op: Operator.or)
            // (11004d) booleanValue : T 
            case 15:
                s.value = (stack[pos].value as! NSNumber)
            // (11004d) booleanValue : F 
            case 16:
                s.value = (stack[pos].value as! NSNumber)
            // (11004e) cicloForEach : forEach popNode 
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP1 cicloForIteradorA cicloForIteradorP2 asignar RPAREN cuerpo 
            case 18:
                semantic.whileP3()
   
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP2 asignar RPAREN cuerpo 
            case 19:
                semantic.whileP3()
   
            // (110050) cicloForIteradorA : hiperExpression 
            // (110051) cicloForIteradorP1 : vars 
            case 21:
                semantic.whileP1()
   
            // (110052) cicloForIteradorP2 : SEMICOLON 
            case 22:
                semantic.whileP2()
   
            // (110053) cicloWhile : cicloWhileP1 startNode expresion cicloWhileP2 cuerpo 
            case 23:
                semantic.whileP3()
   
            // (110054) cicloWhileP1 : WHILE 
            case 24:
                semantic.whileP1()
   
            // (110055) cicloWhileP2 : RPAREN 
            case 25:
                semantic.whileP2();
   
            // (110056) comparisonOperators : EQ EQ 
            case 26:
                semantic.addOperator(op: Operator.equal)
            // (110056) comparisonOperators : NEQ 
            case 27:
                semantic.addOperator(op: Operator.different)
            // (110056) comparisonOperators : LT 
            case 28:
                semantic.addOperator(op: Operator.lessThan)
            // (110056) comparisonOperators : LE 
            case 29:
                semantic.addOperator(op: Operator.lessOrEqualThan)
            // (110056) comparisonOperators : GT 
            case 30:
                semantic.addOperator(op: Operator.greaterThan)
            // (110056) comparisonOperators : GE 
            case 31:
                semantic.addOperator(op: Operator.greaterOrEqualThan)
            // (110057) condicion : condicionA cuerpo 
            case 32:
                semantic.endCondicional() 
            // (110057) condicion : condicionA cuerpo startNodeElse cuerpo 
            case 33:
                semantic.endCondicional() 
            // (110058) condicionA : IF startNode expresion RPAREN 
            case 34:
                semantic.addCondicional()
   
            // (110059) const : CONST tipo ID varAssign SEMICOLON 
            case 35:
                semantic.insertSymbolToST((stack[pos + 2].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 2].value as! NSString) as String)
        
            // (11005a) cuerpo : LBRACE cuerpoListaA popNode 
            // (11005b) cuerpoLista : vars 
            // (11005b) cuerpoLista : asignar SEMICOLON 
            // (11005b) cuerpoLista : llamada SEMICOLON 
            // (11005b) cuerpoLista : leer SEMICOLON 
            // (11005b) cuerpoLista : escribir SEMICOLON 
            // (11005b) cuerpoLista : condicion 
            // (11005b) cuerpoLista : cicloWhile 
            // (11005b) cuerpoLista : cicloForEach 
            // (11005b) cuerpoLista : cicloForIterador 
            // (11005b) cuerpoLista : ternary SEMICOLON 
            // (11005b) cuerpoLista : RTN expresion SEMICOLON 
            case 47:
                semantic.returnFunctions()
            // (11005b) cuerpoLista : error 
            case 48:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11005c) cuerpoListaA : cuerpoLista 
            // (11005c) cuerpoListaA : cuerpoLista cuerpoListaA 
            case 50:
                s.value = (stack[pos].value) as AnyObject?
            // (11005d) cuerpoReturn : cuerpoLista cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON 
            // (11005e) declareVarCiclo : INT ID COLON factor range factor 
            case 54:
                semantic.addForEachRange(range: (stack[pos + 4].value as! NSString) as String, id : (stack[pos + 1].value as! NSString) as String);
            s.value = (stack[pos + 1].value as! NSString);
        
            // (11005f) endForEach : LBRACE cuerpoListaA 
            // (110060) endParams : RPAREN 
            case 56:
                semantic.returnSymbolByID(currentFuncName).params = params.reversed()
    
            // (110061) escribir : PRINT LPAREN escribirA RPAREN 
            case 57:
                semantic.addPrint()
            // (110062) escribirA : escribirB 
            // (110062) escribirA : escribirB COMMA escribirA 
            // (110063) escribirB : expresion 
            // (110064) expresion : hiperExpression 
            // (110064) expresion : llamada 
            // (110064) expresion : LBRACE arrayExpressions RBRACE 
            // (110065) factor : CTEI 
            case 64:
                semantic.addConstantInteger((stack[pos].value as! NSNumber))
        
            // (110065) factor : CTEF 
            case 65:
                semantic.addConstantFloat((stack[pos].value as! NSNumber))
       
            // (110065) factor : booleanValue 
            case 66:
                semantic.addConstantBool((stack[pos].value as! NSNumber))
       
            // (110065) factor : CTES 
            case 67:
                semantic.addConstantString((stack[pos].value as! NSString))
       
            // (110065) factor : ID 
            case 68:
                semantic.addIDAsQuadruple((stack[pos].value as! NSString))
       
            // (110065) factor : ID assMulti 
            case 69:
                semantic.readOneCellArray((stack[pos].value as! NSString));
       
            // (110065) factor : CTEC 
            case 70:
                semantic.addConstantChar((stack[pos].value as! NSString))
       
            // (110065) factor : llamada 
            // (110065) factor : LPAREN megaExpression RPAREN 
            // (110065) factor : NLL 
            // (110066) flujoBloque : asignar SEMICOLON 
            // (110066) flujoBloque : llamada 
            // (110066) flujoBloque : escribir 
            // (110066) flujoBloque : condicion 
            // (110066) flujoBloque : cicloWhile 
            // (110066) flujoBloque : cicloForIterador 
            // (110066) flujoBloque : cicloForEach 
            // (110066) flujoBloque : factor 
            // (110066) flujoBloque : ternary 
            // (110067) forEach : FOR startNode VAR ID COLON ID RPAREN cuerpo 
            // (110067) forEach : FOR startNode declareVarCiclo RPAREN endForEach 
            case 84:
                semantic.endForEachRange(id: (stack[pos + 2].value as! NSString))
            // (110068) funciones : funcionesVoid 
            // (110068) funciones : funcionesReturn 
            // (110068) funciones : funcionesVoid funciones 
            // (110068) funciones : funcionesReturn funciones 
            // (110069) funcionesReturn : FUNC idFuncReturn startNode params endParams LBRACE cuerpoReturn popNode 
            case 89:
                semantic.endFunction()
           self.params.removeAll()
       
            // (110069) funcionesReturn : FUNC idFuncReturn startNode RPAREN LBRACE cuerpoReturn popNode 
            case 90:
                semantic.endFunction()
       
            // (110069) funcionesReturn : error 
            case 91:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11006a) funcionesVoid : FUNC idFunc startNode params endParams cuerpo 
            case 92:
                semantic.endFunction()
           self.params.removeAll()
       
            // (11006a) funcionesVoid : FUNC idFunc startNode RPAREN cuerpo 
            case 93:
                semantic.endFunction()
       
            // (11006b) hiperExpression : superExpression 
            // (11006b) hiperExpression : hiperExpression booleanOperators hiperExpression 
            case 95:
                semantic.addQuadruple()
            // (11006c) idFunc : ID 
            case 96:
                currentFuncName = (stack[pos].value as! NSString) as String
        semantic.insertSymbolToST((stack[pos].value as! NSString), true, false, .void, .method)
        semantic.startFunction((stack[pos].value as! NSString));
        s.value = (stack[pos].value as! NSString)
            // (11006d) idFuncReturn : tipoSimple ID 
            case 97:
                currentFuncName = (stack[pos + 1].value as! NSString) as String;
        semantic.startFunction((stack[pos + 1].value as! NSString));
        semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, .method);
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 1].value as! NSString)
            // (11006d) idFuncReturn : tipoSimple varsPrimaArreglosMulti ID 
            case 98:
                currentFuncName = (stack[pos + 2].value as! NSString) as String;
        semantic.startFunction((stack[pos + 2].value as! NSString));
        semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, type: TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, kind: .method);
        linkedListArray = ArrayLinkedList();
        r = 1;
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 2].value as! NSString);
    
            // (11006e) leer : INPUT LPAREN leerR RPAREN 
            // (11006f) leerR : ID 
            case 100:
                semantic.readID((stack[pos].value as! NSString))

            // (11006f) leerR : leerR COMMA ID 
            case 101:
                semantic.readID((stack[pos + 2].value as! NSString))

            // (110070) llamada : ID LPAREN llamadaA RPAREN 
            case 102:
                semantic.functionCall((stack[pos].value as! NSString), args: arguments);
                arguments.removeAll()
             
            // (110070) llamada : ID LPAREN RPAREN 
            case 103:
                semantic.functionCall((stack[pos].value as! NSString), args: [])
        
            // (110071) llamadaA : expresion 
            case 104:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110071) llamadaA : expresion COMMA llamadaA 
            case 105:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110072) megaExpression : termino 
            // (110072) megaExpression : megaExpression o1 termino 
            case 107:
                semantic.addQuadruple()
            // (110073) o1 : PLUS 
            case 108:
                semantic.addOperator(op: Operator.sum)
            // (110073) o1 : MINUS 
            case 109:
                semantic.addOperator(op:Operator.minus)
            // (110074) o2 : TIMES 
            case 110:
                semantic.addOperator(op: Operator.multiply)
            // (110074) o2 : DIVIDE 
            case 111:
                semantic.addOperator(op: Operator.division)
            // (110075) params : tipoSimple ID 
            case 112:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110075) params : tipoSimple ID COMMA params 
            case 113:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110075) params : tipoSimple ID paramsArreglosMulti COMMA params 
            case 114:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110075) params : tipoSimple ID paramsArreglosMulti 
            case 115:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110076) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 116:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
                r = (lS) * r
                linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
            
            // (110076) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE paramsArreglosMulti 
            case 117:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (110077) popNode : RBRACE 
            case 118:
                semantic.endScope()
   
            // (110078) printOper : PRINT 
            case 119:
                semantic.addOperator(op: Operator.print)
            // (110079) programa : programaPrimo funciones startMain startNode RPAREN cuerpo 
            case 120:
                semantic.endFunction()
            // (110079) programa : funciones startMain startNode RPAREN cuerpo 
            case 121:
                semantic.endFunction()
            // (110079) programa : programaPrimo startMain startNode RPAREN cuerpo 
            case 122:
                semantic.endFunction()
            // (110079) programa : startMain startNode RPAREN cuerpo 
            case 123:
                semantic.endFunction()
            // (11007a) programaPrimo : vars programaPrimo 
            // (11007a) programaPrimo : vars 
            // (11007b) range : CPTRG 
            case 126:
                s.value = (stack[pos].value as! NSString)
            // (11007b) range : INCPTRG 
            case 127:
                s.value = (stack[pos].value as! NSString)
            // (11007c) returnCuerpo : RTN expresion 
            case 128:
                semantic.returnFunctions()
            // (11007d) startMain : MAIN 
            case 129:
                semantic.insertSymbolToST("main", true, false, .void, .method)
        semantic.startFunction("main" as NSString)
        semantic.foundMain()
    
            // (11007e) startNode : LPAREN 
            case 130:
                semantic.startScope()
   
            // (11007f) startNodeElse : ELSE 
            case 131:
                semantic.startScope()
        semantic.addElse()
    
            // (110080) superExpression : megaExpression 
            // (110080) superExpression : megaExpression comparisonOperators megaExpression 
            case 133:
                semantic.addQuadruple()
            // (110080) superExpression : ternary 
            // (110081) termino : factor 
            // (110081) termino : factor o2 megaExpression 
            case 136:
                semantic.addQuadruple()
            // (110082) ternary : superExpression ternaryTrue ternaryBloque ternaryFalse ternaryBloque 
            case 137:
                semantic.endTernaryOperator()
            // (110083) ternaryBloque : flujoBloque 
            // (110083) ternaryBloque : expresion 
            // (110084) ternaryFalse : COLON 
            case 140:
                semantic.colonTernaryOperator()
            // (110085) ternaryTrue : QM 
            case 141:
                semantic.addQuadrupleWithTernaryOperator()
            // (110086) tipo : tipoSimple 
            case 142:
                s.value = (stack[pos].value as! NSNumber)
            // (110086) tipo : tipoCompuesto 
            case 143:
                s.value = (stack[pos].value as! NSNumber)
            // (110087) tipoCompuesto : INTEGERCLASS 
            case 144:
                s.value = (stack[pos].value as! NSNumber)
            // (110087) tipoCompuesto : STRINGCLASS 
            case 145:
                s.value = (stack[pos].value as! NSNumber)
            // (110087) tipoCompuesto : ID 
            case 146:
                s.value = NSNumber(integerLiteral: TypeSymbol.ID.rawValue)
            // (110088) tipoSimple : INT 
            case 147:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : FLOAT 
            case 148:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : DOUBLE 
            case 149:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : CHAR 
            case 150:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : BOOLEAN 
            case 151:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : STR 
            case 152:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoSimple : VOID 
            case 153:
                s.value = (stack[pos].value)
            // (110089) varAssign : varEqAssign expresion 
            // (11008a) varEqAssign : EQ 
            case 155:
                semantic.addOperator(op: .assign)
            // (11008b) vars : VAR ID SEMICOLON 
            case 156:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false)
    
            // (11008b) vars : tipo VAR ID SEMICOLON 
            case 157:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
        semantic.insertSymbolToST((stack[pos + 2].value as! NSString), false, false, type)
    
            // (11008b) vars : VAR ID varsPrimaArreglosMulti SEMICOLON 
            case 158:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false);
            linkedListArray = ArrayLinkedList();
            r = 1;
        
            // (11008b) vars : VAR ID varAssign SEMICOLON 
            case 159:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String);
        
            // (11008b) vars : VAR ID varsPrimaArreglos varAssign SEMICOLON 
            case 160:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false, (stack[pos + 2].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 1].value as! NSString));
        
            // (11008b) vars : tipoCompuesto ID varAssign SEMICOLON 
            case 161:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String)
        
            // (11008b) vars : CONST tipo ID varsPrimaArreglos varAssign SEMICOLON 
            case 162:
                semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, const : true, type:  TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void, (stack[pos + 3].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 2].value as! NSString));
        
            // (11008b) vars : const 
            // (11008c) varsPrima : EQ LBRACE expresion RBRACE 
            // (11008c) varsPrima : EQ LBRACE expresion COMMA RBRACE 
            // (11008d) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE 
            case 166:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r: r))
        s.value = ((stack[pos + 1].value as! NSNumber), 1) as! AnyObject
    
            // (11008d) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE LSBRAKE CTEI RSBRAKE 
            case 167:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
        s.value = ((stack[pos + 1].value as! NSNumber), (stack[pos + 4].value as! NSNumber)) as! AnyObject
    
            // (11008e) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 168:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (11008e) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE varsPrimaArreglosMulti 
            case 169:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    

			default:
				break
		}
	}

	private func actionForState(_ state: UInt16, token t: Int) -> Int
	{
		var min,max,mid: Int

		let token = (t == -1) ? CompilerParser.K_EOFTOKEN : t

		/* Find range */
		min = Int(CompilerParser.ActionI[Int(state)])
		max = Int(CompilerParser.ActionI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.ActionJ[mid]
			if token == j {
				return Int(CompilerParser.ActionA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Look up the goto value for the state and token (production rule) provided.
	 *	Operates the same as actionForState, except we look in the goto table.
	 *	In teory I guess we could combine these two tables (as productions and
	 *	tokens do not overlap).
	 */

	private func goto(state: UInt16, production token: UInt32) -> Int
	{
		var min,max,mid: Int

		/* Find range */
		min = Int(CompilerParser.GotoI[Int(state)])
		max = Int(CompilerParser.GotoI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.GotoJ[mid]
			if token == j {
				return Int(CompilerParser.GotoA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Errors. This formats and prints the specified error
	 */

	private func error(code: Int, data: [String: AnyObject])
	{
		if errorDelegate == nil {	// No error handling, ignore.
			return
		}
		if errorCount > 0 {			// skip until synced on 3 shifts
			return
		}

		// Call delegate with current token position
		// Token position is the topmost symbol

		if hasError {
			errorDelegate?.error(parser: self, line: errorLine, column: errorColumn, filename: errorFileName, errorCode: code, data: data)
		} else {
			if let top = stack.last {
				errorDelegate?.error(parser: self, line: top.line, column: top.column, filename: top.filename, errorCode: code, data: data)
			}
		}

		if 0 == (code & CompilerParser.ERRORMASK_WARNING) {
			success = false
			errorCount = 3
		}
	}

	private func error(code: Int)
	{
		error(code: code, data: [:])
	}

	private func errorOK()
	{
		errorCount = 0
	}

	private func tokenToString(_ token: UInt32) -> String
	{
		if token >= CompilerParser.K_FIRSTTOKEN {
			return CompilerParser.TokenArray[Int(token) - CompilerParser.K_FIRSTTOKEN]
		} else {
			return String.init(Unicode.Scalar(token) ?? Unicode.Scalar.init(UInt8(32)))
		}
	}

	private func reduce(action: Int16) -> Bool
	{
		// Determine the new state we're transitioning to.
		let production = CompilerParser.RuleProduction[Int(action)]
		let length = CompilerParser.RuleLength[Int(action)]

		// We pull the state we'd have after popping the stack.
		let statep = stack[stack.count - Int(length) - 1].state

		// Calculate the state we should transition to
		let newState = goto(state: statep, production: production)
		if newState == Int.max {
			return false
		}

		// Process reduction rule
		var state = processReduction(action)

		// Update state
		state.state = UInt16(newState)

		// Pop the stack
		stack.removeSubrange(stack.count - Int(length) ..< stack.count)

		// Push new state
		stack.append(state)

		// Clear error marker
		hasError = false

		// Return success
		return true
	}



	/*
	 *	Parser engine. Returns NO if there was an error during processing. Note
	 *	that as we uncover errors we call our delegate for error handling. This
	 *	implements the algorithm described in the Dragon Book, Algorithm 4.7.
	 */

	public func parse() -> Bool
	{
		var s: CompilerParser.Stack
		var a: Int

		/*
		 *	Step 1: reset and push the empty state.
		 */

		success = true
		stack = []

		hasError = false
		errorCount = 0

		s = CompilerParser.Stack()
		s.state = CompilerParser.K_STARTSTATE
		s.filename = lex.filename
		s.line = lex.line
		s.column = lex.column

		stack.append(s)

		/*
		 *	Now repeat forever:
		 */

		a = lex.lex()
		while true {
			s = stack.last!

			/*
			 *	Determine if this is the end state. If so, then we immediately
			 *	quit. We assume the user has set the production rule at the
			 *	top, so we can simply drop the stack
			 */

			if s.state == CompilerParser.K_ACCEPTSTATE {
				stack.removeAll()
				return success
			}

			/*
			 *	Now determine the action and shift, reduce or handle error as
			 *	appropriate
			 */

			var action = actionForState(s.state, token: a)
			var foundError = false

			if action == Int.max {
				/*
				 *	Handle error. First, note we have an error, and note the
				 *	symbol on which our error took place.
				 */

				success = false
				errorFileName = lex.filename
				errorLine = lex.line
				errorColumn = lex.column
				hasError = true

				/*
				 *	First, scan backwards from the current state, looking for one
				 *	which has an 'error' symbol.
				 */

				var ix = stack.count
				while (ix > 0) && !foundError {
					ix -= 1
					let si = stack[ix]
					action = actionForState(si.state, token: CompilerParser.K_ERRORTOKEN)
					if (action >= 0) && (action != Int.max) {

						/*
						 *	Encountered error state. If the user has defined an
						 *	error token, we ultimately will want to (a) unwind
						 *	the stack until we find a state which handles the
						 *	error transition. We then .
						 */

						if ix+1 < stack.count {
							stack.removeSubrange(ix+1..<stack.count)
						}

						/*
						 *	At this point we perform a shift to our new error
						 *	state.
						 */

						var s = CompilerParser.Stack()
						s.state = UInt16(action)
						s.value = lex.value

						s.filename = lex.filename
						s.line = lex.line
						s.column = lex.column

						stack.append(s)

						/*
						 *	Second, we start pulling symbols until we find a symbol
						 *	that shifts, or until we hit the end of file symbol.
						 *	This becomes our current token for parsing
						 */

						while (true) {
							a = lex.lex()
							action = actionForState(s.state, token: a)
							if (action >= 0) && (action != Int.max) {
								/*
								 *	Valid shift. This becomes our current token,
								 *	and we resume processing.
								 */

								foundError = true
								break
							} else if (a == CompilerParser.K_EOFTOKEN) || (a == -1) {
								/*
								 *	We ran out of tokens. At this point all
								 *	we can do is print an error and force quit
								 */

								error(code: CompilerParser.ERROR_SYNTAX)
								stack.removeAll()
								return false
							}
						}
					}
				}
				if foundError {
					continue
				}

				/*
				 *	If we reach this point, there is no error we can recover to.
				 *	So figure this out on our own.
				 *
				 *	First, we see if the state we're in has a limited number of
				 *	choices. For example, in C, the 'for' keyword will always be
				 *	followed by a '(' token, so we can offer to automatically
				 *	insert that token.
				 */

				let actionMin: Int = Int(CompilerParser.ActionI[Int(s.state)])
				let actionMax: Int = Int(CompilerParser.ActionI[Int(s.state) + 1])
				var actionVal: Int = actionMin
				var actionState: Int16 = -1

				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == -1 {
						if act >= 0 {
							actionState = act;
							actionVal = ix
						}
					} else {
						actionState = -1
						break
					}
				}

				if actionState != -1 {
					/*
					 *	We can accomplish this transition with one token. Print
					 *	an error, and do a shift on the state with an empty value.
					 */

					let tokenStr = tokenToString(CompilerParser.ActionJ[actionVal])
					error(code: CompilerParser.ERROR_MISSINGTOKEN, data: ["token": tokenStr as AnyObject])


					/*
					 *	Perform a shift but do not pull a new token
					 */

					let top = stack.last!

					var s = CompilerParser.Stack()

					s.state = UInt16(actionState)
					s.value = lex.value

					s.filename = top.filename
					s.line = top.line
					s.column = top.column

					stack.append(s)
					continue
				}

				/*
				 *	See if we have a limited choice in reductions. If this can
				 *	only reduce to a single state, try that reduction.
				 */

				actionState = 0
				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == 0 {
						if (act < 0) && (actionState != act) {
							actionState = act;
						}
					} else {
						actionState = 0
						break
					}
				}

				if actionState != 0 {
					/*
					 *	We have one possible reduction. Try that. Note that this
					 *	will trigger a syntax error since we're reducing down
					 *	without the follow token. My hope is that the state we
					 *	transition to has a limited set of next tokens to follow.
					 */

					_ = reduce(action: Int16(action))
					continue;
				}

				/*
				 *	If we have a limited number of tokens which can follow,
				 *	print a list of them. Then shift by the first one we
				 *	find. We don't do this if the number of shifts is greater
				 *	than five.
				 */

				if actionMax - actionMin <= 5 {
					var list: [String] = []
					for ix in actionMin..<actionMax {
						list.append(tokenToString(CompilerParser.ActionJ[ix]))
					}

					error(code: CompilerParser.ERROR_MISSINGTOKENS, data: ["tokens": list as AnyObject])

					/*
					 *	Now we artificially insert the first of the list of
					 *	tokens as our action and continue.
					 */

					a = Int(CompilerParser.ActionJ[actionMin])
					continue;
				}

				/*
				 *	If we get here, things just went too far south. So we
				 *	skip a token, print syntax error and move on
				 */

				error(code:CompilerParser.ERROR_SYNTAX)
				a = lex.lex()
				if a == -1 {
					return false
				}

			} else if action >= 0 {
				/*
				 *	Shift operation.
				 */

				// Shift
				var s = CompilerParser.Stack()

				s.state = UInt16(action)
				s.value = lex.value

				s.filename = lex.filename
				s.line = lex.line
				s.column = lex.column

				stack.append(s)

				// Advance to next token.
				a = lex.lex()

				// Decrement our error count. If this is non-zero we're in an
				// error state, and we don't pass spurrous errors upwards
				if errorCount > 0 {
					errorCount -= 1
				}
			} else {
				/*
				 *	Reduce action. (Reduce is < 0, and the production to reduce
				 *	by is given below
				 */

				action = -action-1

				if !reduce(action: Int16(action)) {

					// If there is an error, this handles the error.
					// (This should not happen in practice).
					error(code:CompilerParser.ERROR_SYNTAX)

					// Advance to next token.
					a = lex.lex()
				}
			}
		}
	}

}
