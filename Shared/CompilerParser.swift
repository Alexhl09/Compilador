//  CompilerParser

#if os(macOS)
import Cocoa
#else
import UIKit
#endif




    extension CompilerParser : SemanticErrorDelegate {}


protocol CompilerParserError {
	func error(parser: CompilerParser, line: Int, column: Int, filename: String?, errorCode: Int, data: [String: AnyObject]?)
}

class CompilerParser {
	/*
	 *	Yacc Constants
	 */

	public static let AND                                           = 0x00110002
	public static let ASSIGN                                        = 0x00110003
	public static let BOOLEAN                                       = 0x00110004
	public static let CHAR                                          = 0x00110005
	public static let COLON                                         = 0x00110006
	public static let COMMA                                         = 0x00110007
	public static let CONST                                         = 0x00110008
	public static let CPTRG                                         = 0x00110009
	public static let CTEC                                          = 0x0011000a
	public static let CTEF                                          = 0x0011000b
	public static let CTEI                                          = 0x0011000c
	public static let CTES                                          = 0x0011000d
	public static let DIF                                           = 0x0011000e
	public static let DIVIDE                                        = 0x0011000f
	public static let DO                                            = 0x00110010
	public static let DOT                                           = 0x00110011
	public static let DOUBLE                                        = 0x00110012
	public static let ELSE                                          = 0x00110013
	public static let EQ                                            = 0x00110014
	public static let F                                             = 0x00110015
	public static let FLOAT                                         = 0x00110016
	public static let FOR                                           = 0x00110017
	public static let FUNC                                          = 0x00110018
	public static let FUNCTION                                      = 0x00110019
	public static let GE                                            = 0x0011001a
	public static let GT                                            = 0x0011001b
	public static let ID                                            = 0x0011001c
	public static let IF                                            = 0x0011001d
	public static let INCPTRG                                       = 0x0011001e
	public static let INPUT                                         = 0x0011001f
	public static let INT                                           = 0x00110020
	public static let INTEGERCLASS                                  = 0x00110021
	public static let LBRACE                                        = 0x00110022
	public static let LBRACK                                        = 0x00110023
	public static let LE                                            = 0x00110024
	public static let LPAREN                                        = 0x00110025
	public static let LSBRAKE                                       = 0x00110026
	public static let LT                                            = 0x00110027
	public static let MAIN                                          = 0x00110028
	public static let MINUS                                         = 0x00110029
	public static let NEQ                                           = 0x0011002a
	public static let NEW                                           = 0x0011002b
	public static let NLL                                           = 0x0011002c
	public static let NOT                                           = 0x0011002d
	public static let NUMBER                                        = 0x0011002e
	public static let OF                                            = 0x0011002f
	public static let OR                                            = 0x00110030
	public static let PGR                                           = 0x00110031
	public static let PLUS                                          = 0x00110032
	public static let PNT                                           = 0x00110033
	public static let PRINT                                         = 0x00110034
	public static let QM                                            = 0x00110035
	public static let RBRACE                                        = 0x00110036
	public static let RPAREN                                        = 0x00110037
	public static let RSBRAKE                                       = 0x00110038
	public static let RTN                                           = 0x00110039
	public static let SEMICOLON                                     = 0x0011003a
	public static let STR                                           = 0x0011003b
	public static let STRINGCLASS                                   = 0x0011003c
	public static let T                                             = 0x0011003d
	public static let THEN                                          = 0x0011003e
	public static let TIMES                                         = 0x0011003f
	public static let TYPE                                          = 0x00110040
	public static let UMINUS                                        = 0x00110041
	public static let VAR                                           = 0x00110042
	public static let VOID                                          = 0x00110043
	public static let WHILE                                         = 0x00110044
	public static let arrayA                                        = 0x00110045

	// Various constants
	private static let K_ACCEPTSTATE: UInt16 = 1292        // Final accept state
	private static let K_EOFTOKEN: Int       = 0x110000     // EOF token ID
	private static let K_ERRORTOKEN: Int     = 0x110001     // Error token ID
	private static let K_FIRSTTOKEN: Int     = 0x110002     // Error token ID
	private static let K_MAXSYMBOL:Int       = 0x110090     // Max ID for all symbols
	private static let K_STARTSTATE: UInt16  = 0        // Start state is always 0

	/*  TokenArray
	 *
	 *      Array of non-Unicode token values for error reporting
	 */

	private static let TokenArray: [String] = [
		"AND",
		"ASSIGN",
		"BOOLEAN",
		"CHAR",
		"COLON",
		"COMMA",
		"CONST",
		"CPTRG",
		"CTEC",
		"CTEF",
		"CTEI",
		"CTES",
		"DIF",
		"DIVIDE",
		"DO",
		"DOT",
		"DOUBLE",
		"ELSE",
		"EQ",
		"F",
		"FLOAT",
		"FOR",
		"FUNC",
		"FUNCTION",
		"GE",
		"GT",
		"ID",
		"IF",
		"INCPTRG",
		"INPUT",
		"INT",
		"INTEGERCLASS",
		"LBRACE",
		"LBRACK",
		"LE",
		"LPAREN",
		"LSBRAKE",
		"LT",
		"MAIN",
		"MINUS",
		"NEQ",
		"NEW",
		"NLL",
		"NOT",
		"NUMBER",
		"OF",
		"OR",
		"PGR",
		"PLUS",
		"PNT",
		"PRINT",
		"QM",
		"RBRACE",
		"RPAREN",
		"RSBRAKE",
		"RTN",
		"SEMICOLON",
		"STR",
		"STRINGCLASS",
		"T",
		"THEN",
		"TIMES",
		"TYPE",
		"UMINUS",
		"VAR",
		"VOID",
		"WHILE",
		"arrayA"
	]

	/*  RuleLength
	 *
	 *      The number of tokens a reduce action removes from the stack
	 */

	private static let RuleLength: [UInt8] = [
		 1,  1,  2,  3,  1,  3,  1,  2, 
		 5,  8,  3,  3,  4,  1,  1,  1, 
		 1,  2,  8,  6,  1,  1,  1,  5, 
		 1,  1,  2,  1,  1,  1,  1,  1, 
		 2,  4,  4,  5,  3,  1,  2,  2, 
		 2,  2,  1,  1,  1,  1,  2,  3, 
		 1,  1,  2,  2,  3,  2,  6,  2, 
		 1,  4,  1,  3,  1,  1,  1,  3, 
		 1,  1,  1,  1,  1,  2,  1,  1, 
		 3,  1,  2,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  8,  5,  1,  1, 
		 2,  2,  8,  7,  1,  6,  5,  1, 
		 3,  1,  2,  3,  4,  1,  3,  2, 
		 4,  4,  3,  1,  3,  1,  3,  1, 
		 1,  1,  1,  2,  4,  5,  3,  3, 
		 4,  1,  1,  6,  5,  5,  4,  2, 
		 1,  1,  1,  2,  1,  1,  1,  1, 
		 3,  1,  1,  3,  5,  1,  1,  1, 
		 1,  1,  1,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  1,  2,  1,  3, 
		 4,  4,  4,  5,  6,  4,  6,  1, 
		 4,  5,  3,  6,  3,  4
	]

	/*  RuleProduction
	 *
	 *      The prodution ID we reduce to
	 */

	private static let RuleProduction: [UInt32] = [
		0x110046, 0x110047, 0x110047, 0x110048, 0x110048, 0x110049, 0x110049, 0x11004a, 
		0x11004a, 0x11004a, 0x11004a, 0x11004b, 0x11004b, 0x11004c, 0x11004c, 0x11004d, 
		0x11004d, 0x11004e, 0x11004f, 0x11004f, 0x110050, 0x110051, 0x110052, 0x110053, 
		0x110054, 0x110055, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 
		0x110057, 0x110057, 0x110058, 0x110059, 0x11005a, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005c, 0x11005c, 0x11005d, 0x11005d, 0x11005d, 0x11005e, 0x11005f, 
		0x110060, 0x110061, 0x110062, 0x110062, 0x110063, 0x110064, 0x110064, 0x110064, 
		0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 
		0x110065, 0x110065, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 
		0x110066, 0x110066, 0x110066, 0x110067, 0x110067, 0x110067, 0x110067, 0x110067, 
		0x110067, 0x110067, 0x110067, 0x110067, 0x110068, 0x110068, 0x110069, 0x110069, 
		0x110069, 0x110069, 0x11006a, 0x11006a, 0x11006a, 0x11006b, 0x11006b, 0x11006c, 
		0x11006c, 0x11006d, 0x11006e, 0x11006e, 0x11006f, 0x110070, 0x110070, 0x110070, 
		0x110070, 0x110071, 0x110071, 0x110072, 0x110072, 0x110073, 0x110073, 0x110074, 
		0x110074, 0x110075, 0x110075, 0x110076, 0x110076, 0x110076, 0x110076, 0x110077, 
		0x110077, 0x110078, 0x110079, 0x11007a, 0x11007a, 0x11007a, 0x11007a, 0x11007b, 
		0x11007b, 0x11007c, 0x11007c, 0x11007d, 0x11007e, 0x11007f, 0x110080, 0x110081, 
		0x110081, 0x110081, 0x110082, 0x110082, 0x110083, 0x110084, 0x110084, 0x110085, 
		0x110086, 0x110087, 0x110087, 0x110088, 0x110088, 0x110088, 0x110089, 0x110089, 
		0x110089, 0x110089, 0x110089, 0x110089, 0x110089, 0x11008a, 0x11008b, 0x11008c, 
		0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 
		0x11008d, 0x11008d, 0x11008e, 0x11008e, 0x11008f, 0x11008f
	]

	/*
	 *  The following tables are compressed using CSR format.
	 *  See https://en.wikipedia.org/wiki/Sparse_matrix
	 */

	/*  ActionI, J, A
	 *
	 *      Compressed action index table.
	 */

	private static let ActionI:[UInt32] = [
		     0,     15,     18,     19,     20,     30,     31,     32, 
		    40,     42,     43,     45,     46,     47,     49,     50, 
		    51,     66,     67,     70,     73,     74,     77,     78, 
		    79,     81,     82,     97,    100,    101,    111,    112, 
		   122,    136,    150,    164,    178,    192,    208,    217, 
		   226,    240,    254,    268,    269,    283,    286,    300, 
		   312,    316,    328,    332,    346,    360,    374,    388, 
		   402,    416,    430,    431,    447,    448,    457,    466, 
		   480,    481,    495,    496,    497,    511,    512,    513, 
		   514,    515,    516,    517,    518,    519,    533,    534, 
		   535,    538,    552,    564,    568,    580,    584,    585, 
		   599,    613,    614,    630,    639,    640,    644,    648, 
		   652,    656,    657,    661,    662,    666,    670,    684, 
		   688,    689,    693,    707,    711,    715,    719,    728, 
		   737,    746,    750,    764,    768,    772,    781,    790, 
		   799,    811,    820,    829,    838,    850,    877,    882, 
		   883,    884,    911,    915,    943,    953,    964,    975, 
		   986,    997,   1008,   1009,   1024,   1025,   1034,   1045, 
		  1046,   1056,   1067,   1068,   1069,   1080,   1108,   1136, 
		  1164,   1165,   1193,   1194,   1222,   1250,   1251,   1252, 
		  1263,   1264,   1265,   1277,   1286,   1287,   1296,   1298, 
		  1299,   1301,   1329,   1330,   1331,   1359,   1360,   1362, 
		  1363,   1391,   1392,   1393,   1421,   1422,   1424,   1425, 
		  1426,   1427,   1455,   1469,   1470,   1484,   1485,   1501, 
		  1510,   1511,   1513,   1515,   1517,   1519,   1520,   1522, 
		  1523,   1525,   1527,   1541,   1543,   1544,   1548,   1562, 
		  1566,   1568,   1570,   1572,   1599,   1602,   1603,   1630, 
		  1632,   1633,   1635,   1636,   1639,   1642,   1652,   1662, 
		  1676,   1690,   1704,   1718,   1732,   1748,   1757,   1766, 
		  1780,   1794,   1808,   1809,   1823,   1826,   1840,   1852, 
		  1856,   1868,   1872,   1886,   1887,   1901,   1902,   1918, 
		  1927,   1928,   1932,   1936,   1940,   1944,   1945,   1949, 
		  1950,   1954,   1958,   1972,   1976,   1977,   1981,   1995, 
		  1999,   2003,   2007,   2016,   2020,   2034,   2038,   2042, 
		  2051,   2063,   2072,   2084,   2111,   2116,   2117,   2144, 
		  2148,   2149,   2153,   2154,   2159,   2164,   2174,   2175, 
		  2176,   2177,   2181,   2191,   2206,   2221,   2236,   2251, 
		  2266,   2283,   2292,   2301,   2316,   2331,   2346,   2347, 
		  2349,   2351,   2366,   2370,   2385,   2398,   2403,   2416, 
		  2421,   2435,   2436,   2450,   2451,   2468,   2477,   2478, 
		  2483,   2488,   2493,   2498,   2499,   2504,   2505,   2510, 
		  2515,   2530,   2535,   2536,   2541,   2556,   2561,   2566, 
		  2571,   2580,   2585,   2600,   2605,   2610,   2619,   2632, 
		  2641,   2654,   2681,   2687,   2688,   2715,   2720,   2721, 
		  2726,   2727,   2733,   2739,   2749,   2750,   2751,   2756, 
		  2766,   2767,   2772,   2775,   2778,   2781,   2784,   2787, 
		  2792,   2801,   2804,   2807,   2808,   2810,   2813,   2816, 
		  2819,   2828,   2830,   2839,   2840,   2845,   2850,   2855, 
		  2860,   2865,   2870,   2877,   2886,   2891,   2896,   2901, 
		  2906,   2911,   2914,   2917,   2920,   2929,   2932,   2941, 
		  2944,   2947,   2952,   2963,   2973,   2978,   2992,   3006, 
		  3020,   3034,   3048,   3064,   3073,   3082,   3096,   3110, 
		  3124,   3125,   3139,   3142,   3156,   3168,   3172,   3184, 
		  3188,   3202,   3203,   3217,   3218,   3234,   3243,   3244, 
		  3248,   3252,   3256,   3260,   3261,   3265,   3266,   3270, 
		  3274,   3288,   3292,   3293,   3297,   3311,   3315,   3319, 
		  3323,   3332,   3336,   3350,   3354,   3358,   3367,   3379, 
		  3388,   3400,   3427,   3432,   3433,   3460,   3464,   3465, 
		  3469,   3470,   3475,   3480,   3490,   3491,   3492,   3496, 
		  3506,   3507,   3511,   3512,   3516,   3527,   3537,   3551, 
		  3555,   3565,   3569,   3583,   3587,   3588,   3603,   3613, 
		  3627,   3631,   3632,   3647,   3657,   3661,   3662,   3677, 
		  3691,   3693,   3694,   3708,   3718,   3719,   3732,   3745, 
		  3755,   3757,   3758,   3759,   3768,   3769,   3778,   3779, 
		  3780,   3782,   3791,   3792,   3793,   3802,   3803,   3805, 
		  3814,   3815,   3816,   3825,   3826,   3853,   3854,   3855, 
		  3857,   3858,   3859,   3863,   3873,   3874,   3875,   3885, 
		  3886,   3887,   3888,   3890,   3900,   3901,   3902,   3903, 
		  3905,   3915,   3916,   3917,   3919,   3920,   3923,   3932, 
		  3935,   3936,   3937,   3938,   3942,   3946,   3947,   3948, 
		  3957,   3958,   3959,   3960,   3969,   3970,   3979,   3988, 
		  3989,   3992,   3993,   3994,   3995,   3998,   3999,   4000, 
		  4002,   4003,   4004,   4031,   4032,   4033,   4034,   4035, 
		  4036,   4045,   4047,   4049,   4051,   4053,   4055,   4059, 
		  4068,   4070,   4072,   4074,   4076,   4078,   4087,   4096, 
		  4105,   4106,   4107,   4108,   4109,   4110,   4113,   4122, 
		  4123,   4124,   4125,   4126,   4127,   4130,   4131,   4142, 
		  4152,   4153,   4154,   4156,   4157,   4158,   4159,   4160, 
		  4163,   4165,   4176,   4186,   4188,   4189,   4192,   4194, 
		  4196,   4197,   4199,   4200,   4201,   4202,   4203,   4204, 
		  4205,   4206,   4207,   4208,   4209,   4210,   4211,   4212, 
		  4214,   4215,   4216,   4217,   4226,   4235,   4236,   4245, 
		  4254,   4263,   4272,   4281,   4290,   4298,   4306,   4314, 
		  4322,   4330,   4340,   4349,   4357,   4365,   4373,   4381, 
		  4389,   4395,   4401,   4410,   4416,   4425,   4431,   4434, 
		  4442,   4453,   4463,   4471,   4472,   4481,   4489,   4497, 
		  4498,   4506,   4515,   4524,   4527,   4533,   4538,   4541, 
		  4555,   4556,   4557,   4571,   4576,   4577,   4582,   4593, 
		  4603,   4606,   4607,   4611,   4614,   4617,   4618,   4621, 
		  4632,   4642,   4657,   4662,   4672,   4677,   4692,   4697, 
		  4698,   4714,   4724,   4739,   4744,   4745,   4761,   4771, 
		  4776,   4777,   4793,   4808,   4809,   4824,   4837,   4846, 
		  4847,   4848,   4849,   4854,   4855,   4856,   4857,   4858, 
		  4863,   4872,   4881,   4890,   4899,   4908,   4917,   4928, 
		  4937,   4946,   4955,   4964,   4973,   4982,   4989,   4996, 
		  5005,   5012,   5021,   5028,   5031,   5040,   5051,   5061, 
		  5070,   5071,   5081,   5090,   5099,   5100,   5109,   5118, 
		  5122,   5132,   5133,   5137,   5140,   5155,   5156,   5158, 
		  5173,   5174,   5178,   5189,   5199,   5213,   5217,   5227, 
		  5231,   5245,   5249,   5250,   5265,   5275,   5289,   5293, 
		  5294,   5309,   5319,   5323,   5324,   5339,   5353,   5354, 
		  5368,   5381,   5390,   5391,   5392,   5393,   5397,   5398, 
		  5399,   5400,   5401,   5405,   5414,   5422,   5430,   5438, 
		  5446,   5454,   5464,   5473,   5481,   5489,   5497,   5505, 
		  5513,   5519,   5525,   5534,   5540,   5549,   5555,   5558, 
		  5566,   5577,   5587,   5595,   5596,   5605,   5613,   5621, 
		  5622,   5630,   5639,   5642,   5643,   5645,   5648,   5662, 
		  5663,   5664,   5678,   5688,   5689,   5691,   5692,   5694, 
		  5705,   5715,   5729,   5731,   5741,   5743,   5757,   5759, 
		  5760,   5775,   5785,   5799,   5801,   5802,   5817,   5827, 
		  5829,   5830,   5845,   5859,   5860,   5874,   5887,   5896, 
		  5897,   5898,   5899,   5901,   5902,   5903,   5904,   5905, 
		  5907,   5916,   5925,   5938,   5949,   5958,   5969,   5979, 
		  5990,   5991,   6003,   6014,   6025,   6026,   6037,   6042, 
		  6047,   6052,   6057,   6062,   6069,   6078,   6083,   6088, 
		  6093,   6098,   6103,   6106,   6109,   6118,   6121,   6130, 
		  6133,   6136,   6141,   6152,   6162,   6167,   6168,   6174, 
		  6179,   6184,   6185,   6190,   6218,   6246,   6274,   6302, 
		  6311,   6320,   6348,   6352,   6353,   6380,   6409,   6410, 
		  6437,   6465,   6466,   6494,   6495,   6524,   6553,   6563, 
		  6564,   6565,   6593,   6621,   6624,   6652,   6653,   6654, 
		  6655,   6683,   6684,   6712,   6740,   6741,   6769,   6779, 
		  6780,   6781,   6784,   6795,   6796,   6799,   6801,   6802, 
		  6803,   6806,   6816,   6818,   6819,   6822,   6824,   6826, 
		  6837,   6847,   6858,   6859,   6860,   6861,   6873,   6883, 
		  6884,   6885,   6897,   6898,   6910,   6911,   6923,   6936, 
		  6945,   6946,   6947,   6948,   6976,   6977,   6978,   6979, 
		  6980,   7008,   7009,   7011,   7012,   7013,   7014,   7042, 
		  7070,   7071,   7076,   7081,   7091,   7092,   7093,   7097, 
		  7107,   7108,   7112,   7113,   7117,   7127,   7141,   7145, 
		  7155,   7159,   7173,   7177,   7178,   7193,   7203,   7207, 
		  7208,   7223,   7227,   7240,   7249,   7250,   7251,   7252, 
		  7256,   7257,   7258,   7259,   7260,   7264,   7278,   7279, 
		  7293,   7294,   7310,   7319,   7320,   7324,   7328,   7332, 
		  7336,   7337,   7341,   7342,   7346,   7350,   7364,   7368, 
		  7369,   7373,   7387,   7391,   7395,   7399,   7408,   7424, 
		  7438,   7442,   7456,   7460,   7469,   7481,   7490,   7502, 
		  7513,   7523,   7537,   7538,   7553,   7567,   7581,   7582, 
		  7596,   7600,   7604,   7631,   7636,   7637,   7664,   7668, 
		  7669,   7673,   7674,   7679,   7684,   7694,   7695,   7696, 
		  7700,   7710,   7711,   7715,   7716,   7720,   7730,   7744, 
		  7748,   7758,   7762,   7776,   7780,   7781,   7796,   7806, 
		  7810,   7811,   7826,   7830,   7843,   7852,   7853,   7854, 
		  7855,   7859,   7860,   7861,   7862,   7863,   7867,   7876, 
		  7884,   7892,   7900,   7908,   7916,   7926,   7935,   7943, 
		  7951,   7959,   7967,   7975,   7981,   7987,   7996,   8002, 
		  8011,   8017,   8020,   8028,   8039,   8049,   8057,   8058, 
		  8067,   8075,   8083,   8084,   8092,   8101,   8104,   8105, 
		  8106,   8133,   8135,   8136,   8163,   8164,   8165,   8166, 
		  8167,   8169,   8171,   8181,   8182,   8183,   8184,   8194, 
		  8195,   8196,   8199,   8213,   8214,   8215,   8225,   8226, 
		  8227,   8237,   8251,   8252,   8262,   8263,   8277,   8278, 
		  8279,   8294,   8304,   8305,   8306,   8321,   8322,   8335, 
		  8344,   8345,   8346,   8347,   8348,   8349,   8350,   8351, 
		  8352,   8353,   8362,   8370,   8378,   8386,   8394,   8402, 
		  8412,   8421,   8429,   8437,   8445,   8453,   8461,   8467, 
		  8473,   8482,   8488,   8497,   8503,   8506,   8514,   8525, 
		  8535,   8543,   8544,   8553,   8561,   8569,   8570,   8578, 
		  8581,   8595,   8596,   8597,   8611,   8626,   8627,   8629, 
		  8644,   8645,   8646,   8661,   8662,   8663,   8664,   8691, 
		  8692,   8693,   8694,   8695,   8696,   8697,   8698,   8699, 
		  8700,   8701,   8702,   8703,   8704,   8705,   8706,   8707, 
		  8708,   8709,   8710,   8711,   8714,   8729,   8730,   8731, 
		  8732,   8747,   8748,   8763,   8778,   8780,   8782,   8784, 
		  8786,   8787,   8789,   8791,   8793,   8794,   8795,   8797, 
		  8798,   8799,   8800,   8801,   8802,   8804,   8805,   8813, 
		  8821,   8822,   8823,   8824,   8827,   8834,   8835,   8837, 
		  8844,   8845,   8846,   8849,   8851,   8852,   8853,   8854, 
		  8881,   8908,   8918,   8919,   8929,   8930,   8931,   8958, 
		  8985,   9012,   9013,   9040,   9041,   9068,   9095,   9096, 
		  9097,   9098,   9099,   9111,   9112,   9114,   9115,   9117, 
		  9144,   9145,   9146,   9173,   9174,   9176,   9203,   9204, 
		  9205,   9232,   9259,   9287,   9288,   9315,   9342,   9369, 
		  9396,   9423,   9426,   9429,   9430,   9457,   9485,   9486, 
		  9513,   9540,   9541,   9568,   9569,   9597,   9625,   9635, 
		  9636,   9637,   9664,   9691,   9694,   9721,   9722,   9723, 
		  9724,   9751,   9752,   9779,   9806,   9807,   9834,   9847, 
		  9856,   9857,   9858,   9859,   9886,   9887,   9888,   9889, 
		  9890,   9917,   9918,   9920,   9921,   9922,   9923,   9950, 
		  9977,  10004,  10005,  10008,  10016,  10017,  10018,  10019, 
		 10046,  10049,  10050,  10053,  10056,  10057,  10059,  10060, 
		 10061,  10062,  10077,  10092
	]

	private static let ActionJ:[UInt32] = [
		0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 
		0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110001, 
		0x110018, 0x110028, 0x110042, 0x110042, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x110042, 0x110042, 
		0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x11003b, 0x110043, 
		0x11001c, 0x110042, 0x110042, 0x11001c, 0x110042, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110028, 0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 
		0x110028, 0x110000, 0x110001, 0x110018, 0x110028, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x110001, 0x110018, 0x110028, 0x110014, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110025, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x110006, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 
		0x110006, 0x110006, 0x110025, 0x110006, 0x110022, 0x110006, 0x110006, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 0x110036, 0x110002, 
		0x110006, 0x110030, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 
		0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110025, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110022, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x11003a, 0x110022, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110004, 
		0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 
		0x110043, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x110025, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x11001c, 0x110024, 0x110025, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110042, 
		0x110025, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110025, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x11001c, 0x11003a, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110036, 
		0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x110035, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x110035, 0x11003a, 0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 
		0x110026, 0x11003a, 0x11000c, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110038, 0x110014, 0x110026, 
		0x11000c, 0x110038, 0x110014, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 
		0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x110035, 
		0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110025, 
		0x110035, 0x11003a, 0x110022, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110036, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110035, 0x11003a, 
		0x110035, 0x11003a, 0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110013, 
		0x110035, 0x11003a, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110035, 0x11003a, 
		0x110036, 0x110035, 0x11003a, 0x110036, 0x110013, 0x110035, 0x11003a, 0x110013, 
		0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110030, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 
		0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110025, 0x110002, 0x110030, 0x110035, 0x110037, 0x110022, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110013, 0x110030, 0x110035, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110036, 0x110002, 0x110013, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110013, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110037, 0x110007, 0x110037, 0x110007, 0x110037, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x110030, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x110025, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x110025, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110036, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110002, 0x110007, 0x110013, 0x110030, 0x110035, 0x110037, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110036, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 
		0x110007, 0x110013, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110013, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110007, 0x110036, 0x11003a, 0x110007, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x110007, 0x110025, 0x110026, 0x110036, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110036, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110036, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110036, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110025, 
		0x110026, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 
		0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x110029, 
		0x110032, 0x110037, 0x110029, 0x110032, 0x110037, 0x110007, 0x110036, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110029, 0x110032, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 0x110037, 
		0x110029, 0x110032, 0x110037, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110038, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 
		0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110025, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110025, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 0x110013, 
		0x110030, 0x110035, 0x110038, 0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110038, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x110035, 0x110038, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110007, 0x110037, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110004, 
		0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 
		0x11003b, 0x11003c, 0x110042, 0x110043, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003b, 0x11003c, 0x110043, 0x11001c, 0x110042, 0x11001c, 0x11001c, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110042, 0x11001c, 0x110042, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11001c, 0x110026, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110036, 0x110014, 
		0x110026, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110014, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110037, 0x110038, 
		0x110014, 0x110026, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x110037, 0x110038, 0x110014, 
		0x110026, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110038, 0x110014, 0x110026, 0x11003a, 
		0x110002, 0x110030, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x11003a, 0x11001c, 
		0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x110006, 0x110014, 
		0x110026, 0x11003a, 0x11001c, 0x11000c, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11003a, 0x110014, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110038, 0x110014, 0x110026, 0x11003a, 
		0x11000c, 0x11003a, 0x110038, 0x110014, 0x110026, 0x11003a, 0x11000c, 0x110038, 
		0x110026, 0x11003a, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 
		0x110036, 0x110036, 0x110036, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110009, 
		0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 
		0x11001e, 0x110025, 0x110026, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110009, 0x11001e, 
		0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 0x110025, 0x110026, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 0x110029, 
		0x110032, 0x110037, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110038, 0x110026, 0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 
		0x110029, 0x110032, 0x110037, 0x110009, 0x11001e, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110038, 0x110009, 0x11001e, 0x110026, 
		0x110009, 0x11001e, 0x110009, 0x11001e, 0x110037, 0x110009, 0x11001e, 0x11001c, 
		0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 
		0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110014, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x110029, 
		0x110032, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110038, 
		0x110002, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110038, 0x11000f, 
		0x110026, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110036, 0x110038, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x110037, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110007, 0x110036, 0x11003a, 0x110038, 0x110007, 
		0x110026, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 
		0x11003a, 0x110037, 0x110007, 0x110036, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110038, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110038, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110038, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 
		0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11003a, 0x11001c, 
		0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 0x110002, 
		0x110007, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x110030, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110036, 0x110007, 0x110037, 0x110002, 0x110007, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 0x11003a, 0x11001c, 0x110037, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110038, 0x110002, 0x11000f, 0x110026, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110030, 0x110037, 0x110022, 0x110035, 0x11003a, 0x110029, 0x110032, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110035, 0x11003a, 0x110036, 0x110035, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110035, 0x11003a, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110035, 
		0x11003a, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110035, 0x11003a, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x110037, 0x110022, 0x110035, 0x11003a, 0x11003a, 0x11001c, 0x110037, 
		0x110022, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110038, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x110037, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110025, 
		0x110026, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110029, 
		0x110032, 0x110035, 0x110029, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 
		0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110029, 0x110032, 0x110035, 0x110029, 0x110032, 0x110037, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110038, 
		0x11000f, 0x110026, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 
		0x110037, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 0x110026, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x110014, 0x11003a, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x11003a, 0x110029, 0x110032, 0x110037, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x11001c, 0x110007, 0x110026, 0x110037, 0x110007, 
		0x110037, 0x11001c, 0x11003a, 0x110007, 0x110026, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110007, 0x110037, 0x110038, 0x110007, 0x110026, 0x110037, 0x110007, 0x110037, 
		0x110007, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11003a, 0x11003a, 0x110038, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x11003a, 0x110038, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110037, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x11003a, 0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110002, 
		0x110013, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110013, 0x110030, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 
		0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110025, 0x110002, 0x110006, 0x110030, 0x110035, 0x110022, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110036, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110037, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110006, 0x110013, 0x110030, 0x110035, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110036, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x110036, 0x110002, 0x110006, 0x110013, 0x110030, 0x110035, 0x110002, 
		0x110006, 0x110013, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110036, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110038, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110025, 
		0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110029, 0x110032, 0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110026, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110030, 
		0x110006, 0x110006, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110006, 0x110013, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110006, 0x110036, 0x110006, 0x110036, 0x110006, 
		0x110013, 0x110006, 0x110013, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110006, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110006, 0x110029, 0x110032, 0x110037, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110036, 0x110006, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110022, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110006, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 0x110038, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110006, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110006, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x110037, 0x110022, 0x110006, 0x11003a, 0x11001c, 0x110037, 0x110022, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x110029, 
		0x110032, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110038, 
		0x110002, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110036, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x11001c, 0x110026, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 
		0x11003b, 0x11003c, 0x110042, 0x110043, 0x110014, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 
		0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110037, 0x110037, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110000, 0x110036, 0x110000, 0x110000, 0x110028, 
		0x110025, 0x110037, 0x110022, 0x110000, 0x110025, 0x110037, 0x110022, 0x110000, 
		0x110000, 0x110028, 0x110028, 0x110025, 0x110037, 0x110022, 0x110000, 0x110014, 
		0x110026, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 
		0x11001c, 0x110026, 0x110025, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 
		0x110026, 0x110025, 0x110025, 0x11001c, 0x110026, 0x110025, 0x11000c, 0x11001c, 
		0x110025, 0x110038, 0x11001c, 0x110026, 0x11001c, 0x110004, 0x110005, 0x110012, 
		0x110016, 0x110020, 0x110037, 0x11003b, 0x110043, 0x110004, 0x110005, 0x110012, 
		0x110016, 0x110020, 0x110037, 0x11003b, 0x110043, 0x110022, 0x110037, 0x11001c, 
		0x110007, 0x110026, 0x110037, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 
		0x11003b, 0x110043, 0x11000c, 0x110007, 0x110037, 0x110004, 0x110005, 0x110012, 
		0x110016, 0x110020, 0x11003b, 0x110043, 0x110037, 0x110038, 0x110007, 0x110026, 
		0x110037, 0x110007, 0x110037, 0x110037, 0x110022, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x110025, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x11001c, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 
		0x11003a, 0x110036, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 
		0x110035, 0x11003a, 0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x110026, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110018, 0x110028, 0x110001, 0x110018, 0x110028, 0x110036, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110014, 0x110026, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x11001c, 
		0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x110014, 0x110026, 
		0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110018, 0x110028, 
		0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 0x110037, 0x11003b, 0x110043, 
		0x110022, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110018, 
		0x110028, 0x110036, 0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 0x110028, 
		0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 
		0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 
		0x11003b, 0x11003c, 0x110042, 0x110043
	]

	// Note: < 0 -> reduce (rule = -a-1), >= 0 -> shift (state).
	private static let ActionA:[Int16] = [
		     1,      2,      3,      4,      5,      6,      7,      8, 
		     9,     10,     11,     12,     13,     14,     15,   -101, 
		  -101,   -101,   -163,   -162,    634,    635,    636,    637, 
		   638,    639,    640,    641,    642,    643,   -161,   -160, 
		  1308,   1309,   1310,   1311,   1312,   1313,   1314,   1315, 
		  -158,   -158,   -159,   -156,   -156,   -141,   -164,   -157, 
		  -157,   1299,   -165,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,     11,      1,      7,    -96,      1,      7, 
		   -95,   1292,      1,      7,     11,   1275,   1269,     28, 
		  -155,   -154,   -137,      2,      3,      4,      5,      6, 
		  -137,      8,      9,     10,   -137,     12,     13,     14, 
		    15,   -136,   -136,   -136,     29,   -167,   -167,   -167, 
		  -167,   -167,   -167,   -167,   -167,   -167,   -167,   1268, 
		    32,     33,     34,     35,     36,     37,     38,     39, 
		    40,     41,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    863,    878, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   362,    363,    364,    365,    366,    367,    368,    369, 
		   370,    381,    382,    383,    384,    385,    386,    387, 
		   388,    389,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,   -166,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,    118,    110,    111,    -62,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,   -144,    653,    654,    655, 
		   656,    657,    121,    658,   -144,    122,   -144,   -144, 
		  -104,   -104,     51,   -104,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,   -146,   -146,   -146,   -153,   -153,   -153,   -153, 
		  -153,   -153,   -153,   -153,   -153,   -153,   -153,   -153, 
		  -153,   -153,     53,     54,     55,     56,     57,     58, 
		    59,     60,     61,     62,     63,     64,     65,     66, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    501,    -69, 
		   -69,    -69,     29,    -69,    -69,    -69,   1095,   1208, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    221, 
		   362,    363,    364,    365,    366,    367,    368,    369, 
		   370,    381,    382,    383,    384,    385,    386,    387, 
		   388,    389,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		  1198,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -25, 
		   -84,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -90, 
		   -89,    -88,    221,    -87,   1184,    -86,   -151,   -147, 
		   -91,    117,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,    118,   -150,   1182,    110, 
		   -62,    111,    -72,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -144,   -144,    653,    654,    655,    656,    657,    121, 
		   658,   -144,    122,   -144,   -104,   -104,   -104,     51, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -146,    -92,   -146,   -146, 
		    87,   -152,   -152,   -152,   -152,   -152,   -152,   -152, 
		  -152,   -152,   -152,   -152,   -152,   -152,   -152,     32, 
		    33,     34,     35,     36,     89,     90,     60,     91, 
		    39,     40,     92,     41,     66,    501,    -69,    -69, 
		    29,    -69,    -69,    -69,    863,   1036,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    362,    363, 
		   364,    365,    366,    367,    368,    369,    370,   1031, 
		   -84,    -84,    -84,    -84,    -90,    -90,    -90,    -90, 
		   -89,    -89,    -89,    -89,    -88,    -88,    -88,    -88, 
		   221,    -87,    -87,    -87,    -87,    125,    -86,    -86, 
		   -86,    -86,   -151,   -151,   -151,   -151,    -91,    117, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,    -91, 
		  -147,    -91,    -91,    118,   -150,   -150,   -150,   -150, 
		   115,    -62,    -62,    -62,    -62,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -63,    -72,   -104,   -104,   -104,   -104,    -92, 
		   -92,    -92,    -92,   -149,   -149,   -149,   -149,    -14, 
		   -14,    -14,    -14,    -14,    -14,    -14,    -14,    -14, 
		   -15,    -15,    -15,    -15,    -15,    -15,    -15,    -15, 
		   -15,     32,     33,     34,     35,     36,     37,     39, 
		    40,     41,   -105,   -105,   -105,   -105,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   -130,   -130,   -130,   -130, 
		   -18,    -18,    -18,    -18,   -123,   -123,   -123,   -123, 
		  -123,   -123,   -123,   -123,   -123,   -122,   -122,   -122, 
		  -122,   -122,   -122,   -122,   -122,   -122,     32,     33, 
		    34,     35,     36,     37,     39,     40,     41,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -121,   -121,   -121,   -121,   -121, 
		  -121,   -121,   -121,   -121,   -120,   -120,   -120,   -120, 
		  -120,   -120,   -120,   -120,   -120,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -33,    127,    -33, 
		   -33,    -33,   -143,    129,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -34, 
		   -34,    -34,    -34,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    634, 
		   635,    636,    637,    638,    639,    640,    641,    642, 
		   643,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   501,    -69,     29,    -69,    -69,   -158,    -69,    991, 
		   992,    -69,    -69,    -69,    -69,    -69,    -69,   -158, 
		   979,    381,    382,    383,    384,    385,    386,    387, 
		   388,    389,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    974,     32,     33, 
		    34,     35,     36,     37,     38,     39,     40,     41, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    963,    962,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    221,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    948,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    -50,    144,     12,     13,    145,    146, 
		    15,     66,    115,    945,    117,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,    118,    941, 
		   940,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    939,    -72,    653,    654,    655, 
		   656,    657,    121,    658,    122,   -144,     51,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,    185,    173,    170,   -155,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,     29,    172,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,    174, 
		   175,    176,    180,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,     29, 
		   179,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,    181,   -179,    182, 
		   183,    184,   -180,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,     53, 
		    54,     55,     56,     57,     58,     59,     60,     61, 
		    62,     63,     64,     65,     66,     87,     32,     33, 
		    34,     35,     36,    189,    190,     60,    191,     39, 
		    40,    192,     41,     66,    501,    -69,    -69,     29, 
		   -69,    -69,    -69,    863,    864,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    362,    363,    364, 
		   365,    366,    367,    368,    369,    370,    858,    -84, 
		   -84,    -90,    -90,    -89,    -89,    -88,    -88,    221, 
		   -87,    -87,    211,    -86,    -86,   -151,   -151,   -147, 
		   117,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,    -91,    -91,    118,   -150,   -150,    209, 
		   110,    111,    -62,    -62,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -63,    -72,   -146,   -146,    -92,    -92,   -149,   -149, 
		  -130,   -130,    -18,    -18,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    127, 
		   -33,    -33,    214,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,    -34,    -34, 
		   209,    -37,    -37,    219,   -130,   -130,   -130,    -37, 
		   -37,    -37,   -142,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,   -142,   -142,    223,    224,    225,    226, 
		   227,    228,    229,    230,    231,    232,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -69,    -69,    -69,    -69, 
		   -69,    -69,    786,    801,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    362,    363,    364,    365, 
		   366,    367,    368,    369,    370,    381,    382,    383, 
		   384,    385,    386,    387,    388,    389,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   287,   -147,    117,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,    118,    110, 
		   111,    -62,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		  -144,    653,    654,    655,    656,    657,    121,    658, 
		  -144,    122,   -144,   -144,   -104,   -104,     51,   -104, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -146,   -146,   -146,   -146, 
		    53,     54,     55,     56,     57,     58,     59,     60, 
		    61,     62,     63,     64,     65,     66,     87,    223, 
		   224,    225,    226,    227,    245,    246,     60,    247, 
		   230,    231,    248,    232,     66,    501,    -69,    -69, 
		    29,    -69,    -69,    -69,    786,    787,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    362,    363, 
		   364,    365,    366,    367,    368,    369,    370,    290, 
		   -84,    -84,    -84,    -84,    -90,    -90,    -90,    -90, 
		   -89,    -89,    -89,    -89,    -88,    -88,    -88,    -88, 
		   221,    -87,    -87,    -87,    -87,    275,    -86,    -86, 
		   -86,    -86,   -151,   -151,   -151,   -151,    -91,    117, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,    -91, 
		  -147,    -91,    -91,    118,   -150,   -150,   -150,   -150, 
		   269,    -62,    -62,    -62,    -62,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -63,    -72,   -104,   -104,   -104,   -104,    -92, 
		   -92,    -92,    -92,   -149,   -149,   -149,   -149,    223, 
		   224,    225,    226,    227,    228,    230,    231,    232, 
		  -105,   -105,   -105,   -105,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,   -130,   -130,   -130,   -130,    -18,    -18, 
		   -18,    -18,    223,    224,    225,    226,    227,    228, 
		   230,    231,    232,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,    223, 
		   224,    225,    226,    227,    228,    230,    231,    232, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -33, 
		   127,    -33,    -33,    -33,    278,    131,      2,      3, 
		   132,    133,    134,    135,    136,      5,    137,      6, 
		   138,    139,     60,    140,      9,     10,    141,    142, 
		   143,    144,     12,     13,    145,    146,     15,     66, 
		   -34,    -34,    -34,    -34,    269,    -37,    -37,    -37, 
		   -37,    283,   -130,   -130,   -130,   -130,   -130,    -37, 
		   -37,    -37,    -37,    -37,    223,    224,    225,    226, 
		   227,    228,    229,    230,    231,    232,    287,    -26, 
		   278,    -24,    -24,    -24,    -24,    291,    292,    293, 
		   294,    295,    296,    297,    298,    299,    300,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    711,    726,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    362,    363,    364,    365,    366, 
		   367,    368,    369,    370,    381,    382,    383,    384, 
		   385,    386,    387,    388,    389,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    778,    776,    -59,    -61,    -61,   -147, 
		  -147,    117,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,    118,    110,    -62, 
		   111,    -62,    -72,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -72,   -144,   -144,    653,    654,    655,    656,    657, 
		   121,    658,   -144,    122,   -144,   -144,   -104,   -104, 
		  -104,     51,   -104,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,   -146,   -146,   -146,   -146,     53,     54,     55, 
		    56,     57,     58,     59,     60,     61,     62,     63, 
		    64,     65,     66,     87,    291,    292,    293,    294, 
		   295,    315,    316,     60,    317,    298,    299,    318, 
		   300,     66,    501,    -69,    -69,    -69,     29,    -69, 
		   -69,    -69,    711,    712,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    362,    363,    364,    365, 
		   366,    367,    368,    369,    370,    359,    -84,    -84, 
		   -84,    -84,    -84,    -90,    -90,    -90,    -90,    -90, 
		   -89,    -89,    -89,    -89,    -89,    -88,    -88,    -88, 
		   -88,    -88,    221,    -87,    -87,    -87,    -87,    -87, 
		   345,    -86,    -86,    -86,    -86,    -86,   -151,   -151, 
		  -151,   -151,   -151,    -91,    -91,    117,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,    -91,   -147,    -91, 
		   -91,    118,   -150,   -150,   -150,   -150,   -150,    339, 
		   -62,    -62,    -62,    -62,    -62,    -63,    -63,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -72,    -63,    -63,    -72,   -104,   -104,   -104,   -104, 
		  -104,    -92,    -92,    -92,    -92,    -92,   -149,   -149, 
		  -149,   -149,   -149,    291,    292,    293,    294,    295, 
		   296,    298,    299,    300,   -105,   -105,   -105,   -105, 
		  -105,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -130,   -130,   -130,   -130,   -130,    -18,    -18,    -18, 
		   -18,    -18,    291,    292,    293,    294,    295,    296, 
		   298,    299,    300,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		   291,    292,    293,    294,    295,    296,    298,    299, 
		   300,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -33,    -33,    127,    -33,    -33,    -33,    348, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -34,    -34,    -34,    -34,    -34, 
		   339,    -37,    -37,    -37,    -37,    -37,    353,   -130, 
		  -130,   -130,   -130,   -130,   -130,    -37,    -37,    -37, 
		   -37,    -37,    -37,    223,    224,    225,    226,    227, 
		   228,    229,    230,    231,    232,    287,    348,    -24, 
		   -24,    -24,    -24,    -24,    291,    292,    293,    294, 
		   295,    296,    297,    298,    299,    300,    361,    -58, 
		   -58,    -58,    -58,    -58,    -71,    -71,    -71,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -69,    702,    703,    -69,    -69, 
		   381,    382,    383,    384,    385,    386,    387,    388, 
		   389,    -74,    -74,    -74,    -16,    -16,    -16,    380, 
		    -5,    378,    -67,    -67,    -67,    376,     -7,     -7, 
		   -72,    -72,    -72,    362,    363,    364,    365,    366, 
		   367,    368,    369,    370,     -6,     -6,    362,    363, 
		   364,    365,    366,    367,    368,    369,    370,     -4, 
		   -64,    -64,    -64,    -64,    -64,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -17,    -17,    -17,    -17,    -17,    -69,    402, 
		   403,    -69,    -69,    -69,    -69,    381,    382,    383, 
		   384,    385,    386,    387,    388,    389,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -67,    -67,    -67,    -67,    -67,    117,   -147,   -147, 
		  -147,    118,    -72,    -72,    -72,    -72,    -72,    121, 
		   122,    395,   -118,   -118,   -118,    -73,    -73,    -73, 
		   381,    382,    383,    384,    385,    386,    387,    388, 
		   389,   -119,   -119,   -119,    381,    382,    383,    384, 
		   385,    386,    387,    388,    389,   -148,   -148,   -148, 
		   121,    122,    401,    -73,    -73,    -73,    -73,    -73, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		   299,    699,    300,    405,    406,    407,    408,    409, 
		   410,    411,    412,    413,    414,    -70,    -70,    -70, 
		   -70,    -70,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    476,    491, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   362,    363,    364,    365,    366,    367,    368,    369, 
		   370,    381,    382,    383,    384,    385,    386,    387, 
		   388,    389,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    692,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,    118,    110,    111,    -62,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,   -144,    653,    654,    655, 
		   656,    657,    121,    658,   -144,    122,   -144,   -144, 
		  -104,   -104,     51,   -104,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,   -146,   -146,   -146,     53,     54,     55,     56, 
		    57,     58,     59,     60,     61,     62,     63,     64, 
		    65,     66,     87,    405,    406,    407,    408,    409, 
		   427,    428,     60,    429,    412,    413,    430,    414, 
		    66,    501,    -69,    -69,     29,    -69,    -69,    -69, 
		   476,    477,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    362,    363,    364,    365,    366,    367, 
		   368,    369,    370,    471,    -84,    -84,    -84,    -84, 
		   -90,    -90,    -90,    -90,    -89,    -89,    -89,    -89, 
		   -88,    -88,    -88,    -88,    221,    -87,    -87,    -87, 
		   -87,    457,    -86,    -86,    -86,    -86,   -151,   -151, 
		  -151,   -151,    -91,    117,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,    -91,   -147,    -91,    -91,    118, 
		  -150,   -150,   -150,   -150,    451,    -62,    -62,    -62, 
		   -62,    -63,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,    -63,    -63,    -72,   -104, 
		  -104,   -104,   -104,    -92,    -92,    -92,    -92,   -149, 
		  -149,   -149,   -149,    405,    406,    407,    408,    409, 
		   410,    412,    413,    414,   -105,   -105,   -105,   -105, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,   -130,   -130, 
		  -130,   -130,    -18,    -18,    -18,    -18,    405,    406, 
		   407,    408,    409,    410,    412,    413,    414,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,    405,    406,    407,    408,    409, 
		   410,    412,    413,    414,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -33,    127,    -33,    -33,    -33, 
		   460,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -34,    -34,    -34,    -34, 
		   451,    -37,    -37,    -37,    -37,    465,   -130,   -130, 
		  -130,   -130,   -130,    -37,    -37,    -37,    -37,    -37, 
		   223,    224,    225,    226,    227,    228,    229,    230, 
		   231,    232,    287,    460,    -24,    -24,    -24,    -24, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		   299,    300,    473,    -58,    -58,    -58,    -58,    475, 
		   -64,    -64,    -64,    -64,    291,    292,    293,    294, 
		   295,    296,    297,    298,    299,    495,    300,    405, 
		   406,    407,    408,    409,    410,    411,    412,    413, 
		   414,    -70,    -70,     29,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,     -8, 
		    -8,     -8,     -8,    405,    406,    407,    408,    409, 
		   410,    429,    412,    413,    414,   -166,   -166,   -166, 
		  -166,    -63,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,    -63,    -63,    -72,    -11, 
		   -11,    -11,    -11,    485,    -12,    -12,    -12,    -12, 
		   -12,    -12,    486,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,    405,    406,    407,    408,    409, 
		   410,    411,    412,    413,    414,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,     -9,     -9,     -9,     -9,    490, 
		   -12,    -12,    -12,    -12,    -12,    -12,    491,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    405, 
		   406,    407,    408,    409,    410,    411,    412,    413, 
		   414,    -10,    -10,    -10,    -10,    494,    -12,    -12, 
		   -12,    -12,    -12,    -12,    491,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,    499,   -116,    498,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,    291,    292,    293,    294, 
		   295,    296,    297,    298,    299,    300,   -117,   -142, 
		  -142,   -142,   -142,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,   -142,   -142,      2,      3,    503,      5, 
		     6,      8,    504,     10,    505,     12,     13,    506, 
		    15,    634,    635,    636,    637,    638,    639,    640, 
		   641,    642,    643,    583,   -159,    -23,    556,     32, 
		    33,     34,     35,     36,     37,     39,     40,     41, 
		   527,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,    523,    517,    514,   -155,    -22,    -22, 
		   -22,    -22,    -22,    -22,    -22,    -22,    -22,     29, 
		   516,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,    518,    175,    519,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,     29,    522, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,    524,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -94,    -56,     29, 
		   531,    529,    460,    -20,    -20,    -20,    -20,    405, 
		   406,    407,    408,    409,    410,    411,    412,    413, 
		   414,     29,     -8,    223,    224,    225,    226,    227, 
		   228,    229,    230,    231,    232,   -166,    -11,    538, 
		   -12,    539,    405,    406,    407,    408,    409,    410, 
		   411,    412,    413,    414,    -13,     -9,    543,    -12, 
		   544,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -10,    547,    -12,    544,    505, 
		   110,    111,    -21,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,   -105,   -105,   -105,    527, 
		   554,    460,    -19,    -19,    -19,    -19,    557,     29, 
		   558,    559,    576,    567,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,    566,     29,    563, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,    565,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,    568,   -179,    569,   -181, 
		   571,   -182,    572,   -180,    573,   -181,    574,    575, 
		   573,   -181,    577,    578,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -93, 
		   581,   -130,    -37,    584,    585,    586,    587,    588, 
		   589,    590,    591,    592,    593,    -71,    -71,    -66, 
		   -66,    -65,    -65,    -68,    -68,    -17,    -17,    -69, 
		   -69,    625,    626,    381,    382,    383,    384,    385, 
		   386,    387,    388,    389,    -74,    -74,    -16,    -16, 
		   -67,    -67,    597,    598,    -72,    -72,   -138,   -138, 
		  -138,   -138,   -138,   -138,   -138,   -138,   -138,   -139, 
		  -139,   -139,   -139,   -139,   -139,   -139,   -139,   -139, 
		   600,    601,    602,    603,    604,    605,    606,    607, 
		   608,    -71,    -66,    -65,    -68,    -17,    614,    615, 
		   -69,    381,    382,    383,    384,    385,    386,    387, 
		   388,    389,    -74,    -16,    -67,    -55,    -72,    121, 
		   122,    613,    -73,    291,    292,    293,    294,    295, 
		   296,    297,    298,    299,    620,    300,    405,    406, 
		   407,    408,    409,    410,    411,    412,    413,    414, 
		   -70,    618,    615,    -12,    -13,   -115,    622,   -114, 
		   121,    122,    624,    -73,    -73,    291,    292,    293, 
		   294,    295,    296,    297,    298,    299,    631,    300, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   413,    414,    -70,    -70,    629,    -12,    -12,    626, 
		   -13,    -13,   -115,   -115,    633,   -114,   -114,   -163, 
		  -162,   -161,   -160,   -158,   -159,   -156,   -164,   -157, 
		  -165,    647,   -155,   -154,     29,    175,    652,     29, 
		   651,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    689,    -32,    -32,    -32,    -32, 
		   -32,    -32,    -32,    -32,    -32,    -31,    -31,    -31, 
		   -31,    -31,    -31,    -31,    -31,    -31,    -30,    -30, 
		   -30,    -30,    -30,    -30,    -30,    -30,    -30,    -29, 
		   -29,    -29,    -29,    -29,    -29,    -29,    -29,    -29, 
		   -28,    -28,    -28,    -28,    -28,    -28,    -28,    -28, 
		   -28,    660,    661,    662,    663,    664,    665,    666, 
		   667,    668,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,    680,    681,    -69,    -69, 
		   -69,    -69,    -69,    -69,    381,    382,    383,    384, 
		   385,    386,    387,    388,    389,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,    118,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   -145,    121,   -145, 
		   122,   -145,   -145,   -118,   -118,   -118,   -118,   -118, 
		  -118,    660,    661,    662,    663,    664,    665,    666, 
		   667,    668,   -119,   -119,   -119,   -119,   -119,   -119, 
		   660,    661,    662,    663,    664,    665,    666,    667, 
		   668,   -148,   -148,   -148,   -148,   -148,   -148,    121, 
		   122,    679,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    291,    292,    293,    294,    295,    296, 
		   297,    298,    299,    686,    300,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    684, 
		   -12,    -12,    681,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    688,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,    -27,    -27,    -27,    -27,    -27,    -27, 
		   -27,    -27,    -27,    405,    406,    407,    408,    409, 
		   410,    412,    413,    414,   -105,   -105,   -105,    -12, 
		   403,    -12,    -12,    -12,    -12,    -13,    -13,    -13, 
		   -13,    -13,    121,    122,    695,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    697,    -64,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,   -115,   -115,   -115,   -115,   -115, 
		   701,   -114,   -114,   -114,   -114,   -114,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,    708, 
		   300,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -70,    -70,    -70,    706,    -12, 
		   703,    -12,    -12,    -13,    -13,    -13,   -115,   -115, 
		  -115,    710,   -114,   -114,   -114,    291,    292,    293, 
		   294,    295,    296,    297,    298,    299,    730,    300, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   413,    414,    -70,    -70,    -70,     29,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,     -8,     -8,     -8,     -8,     -8,    291,    292, 
		   293,    294,    295,    296,    317,    298,    299,    300, 
		  -166,   -166,   -166,   -166,   -166,    -63,    -63,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -72,    -63,    -63,    -72,    -11,    -11,    -11,    -11, 
		   -11,    720,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    721,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    405,    406,    407,    408,    409,    410, 
		   411,    412,    413,    414,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,     -9,     -9,     -9,     -9,     -9, 
		   725,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   726,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -10,    -10,    -10,    -10,    -10, 
		   729,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   726,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		   732,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		     2,      3,    503,      5,      6,      8,    504,     10, 
		   505,     12,     13,    506,     15,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    527,    737, 
		   348,    -20,    -20,    -20,    -20,    -20,    505,    527, 
		   742,    348,    -19,    -19,    -19,    -19,    -19,    745, 
		   746,    747,    748,    749,    750,    751,    752,    753, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -69,    -69,    -69, 
		   765,    766,    -69,    -69,    -69,    -69,    -69,    -69, 
		   381,    382,    383,    384,    385,    386,    387,    388, 
		   389,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,   -147,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,    118,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,   -145,   -145, 
		   121,   -145,    122,   -145,   -145,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,    745,    746,    747,    748, 
		   749,    750,    751,    752,    753,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,    745,    746,    747,    748, 
		   749,    750,    751,    752,    753,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,    121,    122,    764,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		   299,    771,    300,    405,    406,    407,    408,    409, 
		   410,    411,    412,    413,    414,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    769,    -12, 
		   -12,    -12,    766,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,    773,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,    291,    292,    293, 
		   294,    295,    296,    298,    299,    300,   -105,   -105, 
		  -105,   -105,    291,    292,    293,    294,    295,    296, 
		   297,    298,    299,    300,    -60,    -58,    -58,    -58, 
		   -58,    121,    122,    780,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    782,    -64,    -64,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    785,    -64,    -64, 
		   -64,    -64,    291,    292,    293,    294,    295,    296, 
		   297,    298,    299,    805,    300,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -70, 
		   -70,     29,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,     -8,     -8,     -8, 
		    -8,    223,    224,    225,    226,    227,    228,    247, 
		   230,    231,    232,   -166,   -166,   -166,   -166,    -63, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -72,    -63,    -63,    -72,    -11,    -11,    -11, 
		   -11,    795,    -12,    -12,    -12,    -12,    -12,    -12, 
		   796,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,     -9,     -9,     -9,     -9,    800,    -12,    -12, 
		   -12,    -12,    -12,    -12,    801,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -10, 
		   -10,    -10,    -10,    804,    -12,    -12,    -12,    -12, 
		   -12,    -12,    801,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    807,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		     2,      3,    503,      5,      6,      8,    504,     10, 
		   505,     12,     13,    506,     15,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    527,    812, 
		   278,    -20,    -20,    -20,    -20,    505,    527,    817, 
		   278,    -19,    -19,    -19,    -19,    820,    821,    822, 
		   823,    824,    825,    826,    827,    828,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -69,    -69, 
		   840,    841,    -69,    -69,    -69,    -69,    -69,    -69, 
		   381,    382,    383,    384,    385,    386,    387,    388, 
		   389,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,   -147,    117,   -147,   -147,   -147,   -147,   -147, 
		   118,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,   -145,    121,   -145,    122,   -145,   -145,   -118, 
		  -118,   -118,   -118,   -118,   -118,    820,    821,    822, 
		   823,    824,    825,    826,    827,    828,   -119,   -119, 
		  -119,   -119,   -119,   -119,    820,    821,    822,    823, 
		   824,    825,    826,    827,    828,   -148,   -148,   -148, 
		  -148,   -148,   -148,    121,    122,    839,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,    846, 
		   300,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    844,    -12,    -12,    841,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,    848,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,    223,    224, 
		   225,    226,    227,    228,    230,    231,    232,   -105, 
		  -105,   -105,    214,    -24,    -24,    121,    122,    854, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    856,    -64, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,    300, 
		   860,    -58,    -58,    862,    -64,    -64,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,    882, 
		   300,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -70,    -70,     29,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,     -8,     -8,     32,     33,     34,     35,     36, 
		    37,    191,     39,     40,     41,   -166,   -166,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -63,    -72,    -11,    -11,    872, 
		   -12,    -12,    -12,    -12,    -12,    -12,    873,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    405, 
		   406,    407,    408,    409,    410,    411,    412,    413, 
		   414,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,     -9, 
		    -9,    877,    -12,    -12,    -12,    -12,    -12,    -12, 
		   878,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -10,    -10,    881,    -12,    -12, 
		   -12,    -12,    -12,    -12,    878,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,    884,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,      2,      3,    503,      5,      6,      8, 
		   504,     10,    505,     12,     13,    506,     15,     32, 
		    33,     34,     35,     36,     37,     39,     40,     41, 
		   527,    889,    214,    -20,    -20,    505,    527,    894, 
		   214,    -19,    -19,    910,    911,    912,    913,    914, 
		   915,    916,    917,    918,    133,    134,    135,    136, 
		   137,    898,    141,    142,    145,    -69,    -69,    -69, 
		   -69,    -69,    901,    902,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,    907, 
		   300,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    905,    -12, 
		   -12,    -12,    -12,    -12,    902,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    909,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -17,    -17,    -17,    -17,    -17,    -69,    930, 
		   931,    -69,    -69,    -69,    -69,    381,    382,    383, 
		   384,    385,    386,    387,    388,    389,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -67,    -67,    -67,    -67,    -67,    117,   -147,   -147, 
		  -147,    118,    -72,    -72,    -72,    -72,    -72,    121, 
		   122,   -145,   -118,   -118,   -118,    910,    911,    912, 
		   913,    914,    915,    916,    917,    918,   -119,   -119, 
		  -119,    910,    911,    912,    913,    914,    915,    916, 
		   917,    918,   -148,   -148,   -148,    121,    122,    929, 
		   -73,    -73,    -73,    -73,    -73,    291,    292,    293, 
		   294,    295,    296,    297,    298,    299,    936,    300, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   413,    414,    -70,    -70,    -70,    -70,    -70,    934, 
		   -12,    931,    -12,    -12,    -12,    -12,    -13,    -13, 
		   -13,    -13,    -13,   -115,   -115,   -115,   -115,   -115, 
		   938,   -114,   -114,   -114,   -114,   -114,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    133,    134, 
		   135,    136,    137,    898,    141,    142,    145,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -37,    -37,    -37,    -37, 
		   -51,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    127,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    951,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    941,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    956,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    223,    224,    225,    226,    227,    228,    229, 
		   230,    231,    232,    287,    951,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,     29,    558,    964, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,    971,     29,    968,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,    970,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,    973,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    291,    292,    293,    294,    295,    296,    297, 
		   298,    299,    300,    976,    -58,    121,    122,    978, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    980,   -110,    985,   -110,    982, 
		   983,    984,   -109,   -111,    985,   -111,    405,    406, 
		   407,    408,    409,    410,    411,    412,    413,    414, 
		  -113,   -113,    988,    -12,    985,    -12,    -13,    -13, 
		  -112,   -112,    291,    292,    293,    294,    295,    296, 
		   297,    298,    299,   1003,    300,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -70, 
		    29,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,     -8,    -11,    997,    -12,    -12,    -12, 
		   -12,    -12,    998,    -12,    -12,    -12,    -12,    -12, 
		   -12,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,     -9,   1001,    -12,    -12,    -12, 
		   -12,    -12,    902,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -10,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   1005,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,      2,      3,    503,      5,      6, 
		     8,    504,     10,    505,     12,     13,    506,     15, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    527,   1010,    951,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   505,    527,   1015,    951,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		  1018,     29,    175,   1023,     29,   1022,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,   1025,   -130, 
		  -130,   -130,   -130,   -130,    -37,    -37,    -37,    -37, 
		   -37,    223,    224,    225,    226,    227,    228,    229, 
		   230,    231,    232,    287,    129,    -24,    -24,    -24, 
		   -24,    291,    292,    293,    294,    295,    296,    297, 
		   298,    299,    300,   1033,    -58,    -58,    -58,    -58, 
		  1035,    -64,    -64,    -64,    -64,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -70, 
		   -70,     29,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,     -8,     -8,     -8, 
		    -8,     32,     33,     34,     35,     36,     37,     91, 
		    39,     40,     41,   -166,   -166,   -166,   -166,    -63, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -72,    -63,    -63,    -72,    -11,    -11,    -11, 
		   -11,   1044,    -12,    -12,    -12,    -12,    -12,    -12, 
		  1045,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,     -9,     -9,     -9,     -9,   1048, 
		   -12,    -12,    -12,    -12,    -12,    -12,    878,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -10, 
		   -10,    -10,    -10,      2,      3,    503,      5,      6, 
		     8,    504,     10,    505,     12,     13,    506,     15, 
		    32,     33,     34,     35,     36,     37,     39,     40, 
		    41,    527,   1054,    129,    -20,    -20,    -20,    -20, 
		   505,    527,   1059,    129,    -19,    -19,    -19,    -19, 
		    53,     54,     55,     56,     57,     58,     59,     60, 
		    61,     62,     63,     64,     65,     66,     87,     53, 
		    54,     55,     56,     57,   1064,   1065,     60,   1066, 
		    62,     63,   1067,     65,     66,    501,    -69,    -69, 
		   -69,     29,    -69,    -69,    -69,   1095,   1125,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    362,    363, 
		   364,    365,    366,    367,    368,    369,    370,   1120, 
		   -84,    -84,    -84,    -84,    -90,    -90,    -90,    -90, 
		   -89,    -89,    -89,    -89,    -88,    -88,    -88,    -88, 
		   221,    -87,    -87,    -87,    -87,   1106,    -86,    -86, 
		   -86,    -86,   -151,   -151,   -151,   -151,    -91,    -91, 
		   117,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		   -91,   -147,    -91,    118,   -150,   -150,   -150,   -150, 
		  1104,    -62,    -62,    -62,    -62,    -63,    -63,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -63, 
		   -72,    -63,    -72,   -104,   -104,   -104,   -104,    -92, 
		   -92,    -92,    -92,   -149,   -149,   -149,   -149,     53, 
		    54,     55,     56,     57,   1086,     62,     63,     65, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,   1095, 
		  1096,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		  -147,   -147,    117,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,    118,   -105,   -105, 
		  -105,   -105,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -146,   -146,   -146,   -146,     53,     54,     55,     56, 
		    57,   1086,     62,     63,     65,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,     53,     54,     55,     56,     57,   1086,     62, 
		    63,     65,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    291,    292, 
		   293,    294,    295,    296,    297,    298,    299,   1101, 
		   300,    405,    406,    407,    408,    409,    410,    411, 
		   412,    413,    414,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,   1099,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   1096,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   1103,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -130,   -130,   -130,   -130, 
		   -18,    -18,    -18,    -18,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -33, 
		   -33,    127,    -33,    -33,   1109,    131,      2,      3, 
		   132,    133,    134,    135,    136,      5,    137,      6, 
		   138,    139,     60,    140,      9,     10,    141,    142, 
		   143,    144,     12,     13,    145,    146,     15,     66, 
		   -34,    -34,    -34,    -34,   1104,    -37,    -37,    -37, 
		   -37,   1114,   -130,   -130,   -130,   -130,   -130,    -37, 
		   -37,    -37,    -37,    -37,    223,    224,    225,    226, 
		   227,    228,    229,    230,    231,    232,    287,   1109, 
		   -24,    -24,    -24,    -24,    291,    292,    293,    294, 
		   295,    296,    297,    298,    299,    300,   1122,    -58, 
		   -58,    -58,    -58,   1124,    -64,    -64,    -64,    -64, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   413,    414,    -70,    -70,    -70,     29,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		    -8,     -8,     -8,     -8,     53,     54,     55,     56, 
		    57,   1086,   1066,     62,     63,     65,   -166,   -166, 
		  -166,   -166,    -63,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -63,    -72,    -63,    -72, 
		   -11,    -11,    -11,    -11,   1133,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,   1134,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    405,    406,    407,    408, 
		   409,    410,    411,    412,    413,    414,     -9,     -9, 
		    -9,     -9,   1137,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,   1096,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -10,    -10,    -10,    -10,      2,      3, 
		   503,      5,      6,      8,    504,     10,    505,     12, 
		    13,    506,     15,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,    527,   1143,   1109,    -20, 
		   -20,    -20,    -20,    505,    527,   1148,   1109,    -19, 
		   -19,    -19,    -19,   1151,   1152,   1153,   1154,   1155, 
		  1156,   1157,   1158,   1159,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -69,    -69,    -69,   1171, 
		  1172,    -69,    -69,    -69,    -69,    -69,    381,    382, 
		   383,    384,    385,    386,    387,    388,    389,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,   -147, 
		  -147,    117,   -147,   -147,   -147,   -147,    118,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,   -145, 
		  -145,    121,   -145,    122,   -145,   -118,   -118,   -118, 
		  -118,   -118,   -118,   1151,   1152,   1153,   1154,   1155, 
		  1156,   1157,   1158,   1159,   -119,   -119,   -119,   -119, 
		  -119,   -119,   1151,   1152,   1153,   1154,   1155,   1156, 
		  1157,   1158,   1159,   -148,   -148,   -148,   -148,   -148, 
		  -148,    121,    122,   1170,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    291,    292,    293,    294, 
		   295,    296,    297,    298,    299,   1177,    300,    405, 
		   406,    407,    408,    409,    410,    411,    412,    413, 
		   414,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,   1175,    -12,    -12,    -12,   1172,    -12,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   1179,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,     53,     54,     55,     56, 
		    57,   1086,     62,     63,     65,   -105,   -105,   -105, 
		  -130,    -18,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -33,    127,   1187, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -34,   1182,    -37,   1192,   -130, 
		  -130,    -37,    -37,    223,    224,    225,    226,    227, 
		   228,    229,    230,    231,    232,    287,   1187,    -24, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		   299,    300,   1200,    -58,    121,    122,   1202,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,   1204,    -64,    223, 
		   224,    225,    226,    227,    228,    229,    230,    231, 
		   232,   1207,    -35,    405,    406,    407,    408,    409, 
		   410,    411,    412,    413,    414,    -70,    -70,    -70, 
		    29,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,     -8,     53,     54,     55,     56, 
		    57,   1086,     61,     62,     63,     65,   -166,    -72, 
		   -63,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -11,   1216,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,   1217,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    405,    406, 
		   407,    408,    409,    410,    411,    412,    413,    414, 
		    -9,   1220,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   1096,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -10,      2,      3,    503,      5,      6,      8, 
		   504,     10,    505,     12,     13,    506,     15,     32, 
		    33,     34,     35,     36,     37,     39,     40,     41, 
		   527,   1226,   1187,    -20,    505,    527,   1231,   1187, 
		   -19,   1234,   1235,   1236,   1237,   1238,   1239,   1240, 
		  1241,   1242,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,   1254,   1255,    -69,    -69, 
		   -69,    -69,    -69,    -69,    381,    382,    383,    384, 
		   385,    386,    387,    388,    389,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,    118,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   -145,    121,   -145, 
		   122,   -145,   -145,   -118,   -118,   -118,   -118,   -118, 
		  -118,   1234,   1235,   1236,   1237,   1238,   1239,   1240, 
		  1241,   1242,   -119,   -119,   -119,   -119,   -119,   -119, 
		  1234,   1235,   1236,   1237,   1238,   1239,   1240,   1241, 
		  1242,   -148,   -148,   -148,   -148,   -148,   -148,    121, 
		   122,   1253,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    291,    292,    293,    294,    295,    296, 
		   297,    298,    299,   1260,    300,    405,    406,    407, 
		   408,    409,    410,    411,    412,    413,    414,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,   1258, 
		   -12,    -12,   1255,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   1262,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,    121,    122,   1264,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,   1266,    -64,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   1270,    175,   1271,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,     29,   1274,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -142,   1277,   1278, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,   -135,   1281,   -130,    -37,     11, 
		  1275,   1286,   1278,   -134,   1275,   1290,   1278,   -132, 
		    -1,    -97,    -98,   1275,   1297,   1278,   -133,     29, 
		   558,   1300,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   1307,     29,   1304,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   1306,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -163,   -163,   -162,   -162,   -161,   -161, 
		  -160,   -160,   -106,   -159,   -159,   -164,   -164,   -165, 
		  -165,   1326,   1326,   1319,   1320,   -107,   1323,   1322, 
		  -108,   1324,   -181,   1320,   -182,   -142,   -142,   -142, 
		  -142,   -142,   -142,   -142,   -142,    634,    635,    636, 
		   637,    639,   1328,    641,    643,   1432,   1341,   1331, 
		  1332,   1333,   -124,    634,    635,    636,    637,    639, 
		   641,    643,   1337,   1335,   -127,    634,    635,    636, 
		   637,    639,    641,    643,   -126,   1338,   -128,   1333, 
		  -128,   -129,   -129,   -125,    -57,   1343,   1344,      2, 
		     3,   1345,    133,    134,    135,    136,      5,    137, 
		     6,   1346,    139,     60,    140,      9,     10,    141, 
		   142,    143,   1347,     12,     13,    145,   1348,     15, 
		    66,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    634,    635,    636,    637, 
		   638,    639,    640,    641,    642,    643,    501,     32, 
		    33,     34,     35,     36,     37,     38,     39,     40, 
		    41,   1403,   1402,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    221,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		  1388,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   1344,      2,      3,   1345, 
		   133,    134,    135,    136,      5,    137,      6,   1346, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		  1347,     12,     13,    145,   1348,     15,     66,   1385, 
		  1384,   1382,   1381,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   1380,    -72,   1378, 
		  -146,   1377,   1371,   1368,   -155,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		    29,   1370,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   1372,    175,   1373, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,     29,   1376,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,   1344,      2,      3,   1345,    133, 
		   134,    135,    136,      5,    137,      6,   1346,    139, 
		    60,    140,      9,     10,    141,    142,    143,    -54, 
		  1347,     12,     13,    145,   1348,     15,     66,    -53, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,   -130, 
		  -130,   -130,    -99,    -99,    -99,    -52,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    127,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,   1391,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,   1382,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		  1396,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    223,    224,    225,    226,    227,    228,    229, 
		   230,    231,    232,    287,   1391,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,     29,    558,   1404,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   1411,     29,   1408,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   1410, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -140,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,      2,      3,    503,      5,      6,      8, 
		   504,     10,    505,     12,     13,    506,     15,     32, 
		    33,     34,     35,     36,     37,     39,     40,     41, 
		   527,   1418,   1391,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    505,    527, 
		  1423,   1391,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,   1426,     29,    175, 
		  1431,     29,   1430,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,   1344,      2,      3,   1345,    133,    134,    135, 
		   136,      5,    137,      6,   1346,    139,     60,    140, 
		     9,     10,    141,    142,    143,   1347,     12,     13, 
		   145,   1348,     15,     66,   1385,   -100,   -100,   -100, 
		   634,    635,    636,    637,    639,   1436,    641,    643, 
		  1439,   1341,   1439,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,   -102,   -102, 
		  -102,   1385,    -37,    -37,    -37,   -103,   -103,   -103, 
		  1445,     29,    175,   1450,     29,   1449,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36
	]

	/*  GotoI, J, A
	 *
	 *      Compressed goto table.
	 */

	private static let GotoI:[UInt32] = [
		     0,     11,     11,     11,     11,     14,     14,     14, 
		    17,     17,     17,     17,     17,     17,     17,     17, 
		    17,     17,     18,     21,     24,     24,     28,     29, 
		    29,     29,     29,     35,     35,     37,     37,     37, 
		    46,     46,     46,     46,     46,     46,     47,     52, 
		    57,     57,     57,     57,     57,     58,     59,     59, 
		    61,     62,     62,     62,     62,     82,     82,     82, 
		    82,     82,     82,     83,     86,     87,     92,     97, 
		    97,     97,     97,     97,     97,     97,     97,     97, 
		    97,     98,     98,     99,     99,     99,    100,    100, 
		   101,    102,    102,    104,    105,    105,    105,    106, 
		   106,    126,    127,    130,    135,    135,    135,    135, 
		   135,    135,    136,    136,    137,    137,    137,    138, 
		   138,    139,    140,    140,    141,    141,    141,    141, 
		   141,    149,    150,    150,    150,    150,    150,    150, 
		   155,    156,    156,    156,    160,    160,    184,    185, 
		   185,    186,    210,    210,    210,    213,    213,    213, 
		   213,    213,    213,    214,    217,    217,    222,    222, 
		   222,    231,    231,    231,    231,    231,    231,    231, 
		   231,    232,    232,    233,    233,    257,    258,    258, 
		   259,    260,    260,    260,    262,    263,    263,    263, 
		   263,    263,    263,    265,    265,    265,    265,    266, 
		   266,    266,    268,    268,    268,    268,    268,    268, 
		   268,    268,    268,    288,    289,    309,    310,    313, 
		   318,    318,    318,    318,    318,    318,    319,    319, 
		   320,    320,    320,    321,    321,    322,    323,    323, 
		   323,    323,    323,    323,    347,    348,    349,    373, 
		   373,    374,    374,    375,    375,    375,    375,    384, 
		   384,    384,    384,    384,    384,    385,    390,    395, 
		   395,    395,    395,    396,    397,    398,    398,    400, 
		   401,    401,    401,    421,    422,    442,    443,    446, 
		   451,    451,    451,    451,    451,    451,    452,    452, 
		   453,    453,    453,    454,    454,    455,    456,    456, 
		   457,    457,    457,    465,    466,    466,    466,    466, 
		   471,    472,    476,    476,    500,    501,    502,    526, 
		   526,    527,    527,    528,    528,    528,    537,    538, 
		   538,    539,    539,    550,    550,    550,    550,    550, 
		   550,    551,    556,    561,    561,    561,    561,    561, 
		   561,    561,    562,    563,    563,    565,    566,    566, 
		   566,    586,    587,    607,    608,    611,    616,    616, 
		   616,    616,    616,    616,    617,    617,    618,    618, 
		   618,    619,    619,    620,    621,    621,    622,    622, 
		   622,    630,    631,    631,    631,    631,    636,    637, 
		   641,    641,    665,    666,    667,    691,    691,    692, 
		   692,    693,    693,    693,    702,    703,    704,    704, 
		   715,    715,    715,    715,    715,    715,    715,    715, 
		   716,    721,    721,    721,    721,    721,    721,    721, 
		   721,    725,    725,    730,    730,    730,    730,    730, 
		   730,    730,    730,    731,    736,    736,    736,    736, 
		   737,    737,    738,    738,    738,    742,    742,    747, 
		   748,    749,    749,    759,    768,    768,    768,    768, 
		   768,    768,    768,    769,    774,    779,    779,    779, 
		   779,    779,    780,    781,    781,    783,    784,    784, 
		   784,    804,    805,    825,    826,    829,    834,    834, 
		   834,    834,    834,    834,    835,    835,    836,    836, 
		   836,    837,    837,    838,    839,    839,    840,    840, 
		   840,    848,    849,    849,    849,    849,    854,    855, 
		   859,    859,    883,    884,    885,    909,    909,    910, 
		   910,    911,    911,    911,    920,    921,    922,    922, 
		   933,    933,    933,    933,    933,    943,    952,    954, 
		   954,    963,    963,    963,    963,    963,    966,    975, 
		   975,    975,    975,    978,    987,    987,    987,    988, 
		   988,    988,    988,    988,    998,    998,    998,   1006, 
		  1009,   1009,   1009,   1009,   1018,   1019,   1019,   1019, 
		  1019,   1019,   1019,   1021,   1021,   1021,   1021,   1022, 
		  1022,   1024,   1024,   1024,   1025,   1049,   1049,   1049, 
		  1052,   1052,   1053,   1053,   1062,   1064,   1064,   1073, 
		  1073,   1073,   1073,   1076,   1085,   1085,   1085,   1085, 
		  1088,   1097,   1097,   1097,   1098,   1099,   1100,   1108, 
		  1109,   1110,   1110,   1111,   1111,   1115,   1115,   1115, 
		  1115,   1115,   1117,   1117,   1117,   1117,   1117,   1117, 
		  1117,   1118,   1118,   1118,   1118,   1119,   1119,   1119, 
		  1120,   1120,   1121,   1145,   1145,   1146,   1146,   1146, 
		  1146,   1149,   1149,   1149,   1149,   1149,   1149,   1150, 
		  1155,   1155,   1155,   1155,   1156,   1156,   1156,   1156, 
		  1159,   1159,   1159,   1159,   1159,   1159,   1160,   1165, 
		  1165,   1165,   1165,   1165,   1165,   1166,   1166,   1176, 
		  1185,   1185,   1185,   1186,   1186,   1186,   1186,   1186, 
		  1187,   1187,   1197,   1206,   1206,   1206,   1207,   1207, 
		  1207,   1207,   1207,   1207,   1207,   1207,   1207,   1207, 
		  1207,   1207,   1207,   1207,   1207,   1207,   1207,   1207, 
		  1210,   1210,   1212,   1212,   1212,   1212,   1212,   1212, 
		  1212,   1212,   1212,   1212,   1217,   1217,   1217,   1217, 
		  1217,   1217,   1218,   1223,   1223,   1223,   1223,   1224, 
		  1224,   1225,   1225,   1229,   1229,   1234,   1235,   1236, 
		  1236,   1246,   1255,   1255,   1255,   1256,   1256,   1256, 
		  1256,   1256,   1256,   1264,   1265,   1266,   1266,   1267, 
		  1267,   1267,   1267,   1267,   1267,   1267,   1267,   1277, 
		  1286,   1286,   1286,   1287,   1287,   1287,   1287,   1287, 
		  1297,   1306,   1308,   1308,   1317,   1317,   1317,   1317, 
		  1317,   1320,   1329,   1329,   1329,   1329,   1332,   1341, 
		  1341,   1341,   1342,   1342,   1342,   1342,   1350,   1359, 
		  1360,   1360,   1361,   1361,   1362,   1363,   1363,   1364, 
		  1364,   1369,   1369,   1369,   1369,   1369,   1369,   1370, 
		  1375,   1375,   1375,   1375,   1376,   1376,   1377,   1377, 
		  1381,   1381,   1386,   1387,   1388,   1388,   1398,   1407, 
		  1407,   1407,   1408,   1408,   1408,   1408,   1408,   1416, 
		  1417,   1428,   1428,   1428,   1429,   1429,   1429,   1429, 
		  1429,   1429,   1429,   1439,   1448,   1450,   1450,   1459, 
		  1459,   1459,   1459,   1459,   1462,   1471,   1471,   1471, 
		  1471,   1474,   1483,   1483,   1483,   1484,   1484,   1484, 
		  1484,   1492,   1501,   1502,   1502,   1503,   1503,   1504, 
		  1505,   1505,   1506,   1506,   1511,   1511,   1511,   1511, 
		  1511,   1511,   1512,   1517,   1517,   1517,   1517,   1518, 
		  1518,   1519,   1519,   1523,   1523,   1528,   1529,   1530, 
		  1530,   1540,   1549,   1549,   1549,   1550,   1550,   1550, 
		  1550,   1550,   1558,   1559,   1560,   1560,   1561,   1561, 
		  1561,   1561,   1561,   1572,   1572,   1572,   1572,   1572, 
		  1582,   1591,   1593,   1593,   1602,   1602,   1602,   1602, 
		  1602,   1605,   1614,   1614,   1614,   1614,   1617,   1626, 
		  1626,   1626,   1627,   1627,   1627,   1627,   1635,   1644, 
		  1645,   1645,   1646,   1646,   1647,   1648,   1648,   1649, 
		  1649,   1654,   1658,   1659,   1659,   1659,   1669,   1678, 
		  1678,   1678,   1679,   1679,   1679,   1679,   1679,   1679, 
		  1679,   1679,   1679,   1679,   1680,   1685,   1685,   1685, 
		  1685,   1686,   1686,   1687,   1687,   1691,   1691,   1696, 
		  1697,   1698,   1698,   1708,   1717,   1717,   1717,   1718, 
		  1718,   1718,   1718,   1718,   1718,   1718,   1718,   1718, 
		  1723,   1724,   1724,   1724,   1724,   1748,   1749,   1750, 
		  1774,   1774,   1775,   1775,   1776,   1776,   1776,   1785, 
		  1786,   1787,   1787,   1787,   1791,   1791,   1791,   1793, 
		  1793,   1793,   1793,   1793,   1793,   1793,   1793,   1804, 
		  1804,   1804,   1805,   1805,   1806,   1807,   1807,   1807, 
		  1807,   1808,   1817,   1817,   1817,   1818,   1818,   1818, 
		  1828,   1837,   1839,   1839,   1839,   1839,   1842,   1851, 
		  1851,   1851,   1854,   1854,   1854,   1854,   1854,   1862, 
		  1871,   1872,   1872,   1873,   1873,   1874,   1875,   1875, 
		  1876,   1876,   1876,   1879,   1879,   1881,   1881,   1881, 
		  1881,   1882,   1882,   1882,   1891,   1892,   1893,   1893, 
		  1904,   1904,   1904,   1904,   1904,   1913,   1915,   1915, 
		  1924,   1924,   1924,   1924,   1924,   1927,   1936,   1936, 
		  1936,   1939,   1939,   1947,   1956,   1957,   1957,   1958, 
		  1958,   1959,   1960,   1960,   1961,   1961,   1981,   1982, 
		  2002,   2003,   2006,   2011,   2011,   2011,   2011,   2011, 
		  2011,   2012,   2012,   2013,   2013,   2013,   2014,   2014, 
		  2015,   2016,   2016,   2017,   2017,   2017,   2025,   2026, 
		  2027,   2028,   2028,   2028,   2033,   2034,   2038,   2038, 
		  2048,   2057,   2057,   2057,   2058,   2058,   2058,   2058, 
		  2058,   2058,   2058,   2082,   2083,   2084,   2108,   2108, 
		  2109,   2109,   2110,   2110,   2110,   2119,   2120,   2121, 
		  2121,   2132,   2132,   2132,   2132,   2132,   2141,   2143, 
		  2143,   2152,   2152,   2152,   2152,   2152,   2155,   2164, 
		  2164,   2164,   2167,   2167,   2175,   2184,   2185,   2185, 
		  2186,   2186,   2187,   2188,   2188,   2189,   2189,   2194, 
		  2194,   2194,   2194,   2194,   2194,   2195,   2200,   2200, 
		  2200,   2200,   2201,   2201,   2202,   2202,   2206,   2206, 
		  2211,   2212,   2213,   2213,   2223,   2232,   2232,   2232, 
		  2233,   2233,   2233,   2233,   2233,   2241,   2242,   2242, 
		  2242,   2266,   2267,   2268,   2292,   2292,   2293,   2293, 
		  2294,   2294,   2294,   2303,   2304,   2305,   2305,   2316, 
		  2316,   2316,   2317,   2317,   2317,   2317,   2326,   2326, 
		  2326,   2335,   2337,   2337,   2346,   2346,   2346,   2346, 
		  2346,   2349,   2358,   2358,   2358,   2361,   2361,   2369, 
		  2378,   2379,   2379,   2380,   2380,   2381,   2382,   2382, 
		  2383,   2383,   2388,   2388,   2388,   2388,   2388,   2388, 
		  2389,   2394,   2394,   2394,   2394,   2395,   2395,   2396, 
		  2396,   2400,   2400,   2405,   2406,   2407,   2407,   2417, 
		  2426,   2426,   2426,   2427,   2427,   2427,   2427,   2427, 
		  2428,   2428,   2428,   2428,   2428,   2428,   2428,   2429, 
		  2429,   2431,   2431,   2431,   2431,   2431,   2432,   2456, 
		  2456,   2457,   2457,   2457,   2458,   2459,   2459,   2460, 
		  2460,   2461,   2461,   2462,   2462,   2462,   2462,   2462, 
		  2463,   2463,   2464,   2464,   2468,   2468,   2468,   2470, 
		  2470,   2470,   2470,   2470,   2470,   2470,   2470,   2470, 
		  2470,   2470,   2470,   2470,   2470,   2471,   2472,   2473, 
		  2473,   2473,   2473,   2473,   2473,   2474,   2474,   2474, 
		  2476,   2476,   2477,   2477,   2478,   2480,   2480,   2480, 
		  2482,   2482,   2482,   2483,   2483,   2483,   2483,   2483, 
		  2508,   2508,   2511,   2512,   2521,   2521,   2521,   2521, 
		  2521,   2521,   2522,   2522,   2523,   2523,   2548,   2549, 
		  2549,   2550,   2550,   2550,   2550,   2550,   2550,   2550, 
		  2550,   2552,   2552,   2552,   2552,   2553,   2553,   2555, 
		  2555,   2555,   2555,   2580,   2580,   2580,   2580,   2580, 
		  2580,   2580,   2580,   2580,   2580,   2604,   2605,   2606, 
		  2630,   2630,   2631,   2631,   2632,   2632,   2632,   2641, 
		  2642,   2643,   2643,   2643,   2647,   2647,   2647,   2649, 
		  2649,   2649,   2649,   2649,   2649,   2649,   2649,   2657, 
		  2666,   2667,   2667,   2668,   2668,   2669,   2670,   2670, 
		  2671,   2671,   2671,   2674,   2674,   2676,   2676,   2676, 
		  2676,   2701,   2702,   2702,   2704,   2705,   2706,   2707, 
		  2731,   2731,   2732,   2732,   2732,   2732,   2735,   2735, 
		  2737,   2737,   2737,   2737
	]

	private static let GotoJ:[UInt32] = [
		0x110059, 0x110069, 0x11006a, 0x11006b, 0x11007a, 0x11007b, 0x11007e, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110087, 0x110088, 0x110089, 0x11006d, 0x11006e, 
		0x110089, 0x11007e, 0x110069, 0x11006a, 0x11006b, 0x110069, 0x11006a, 0x11006b, 
		0x110069, 0x11006a, 0x11006b, 0x11007e, 0x11007f, 0x110059, 0x11007b, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 0x110086, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x11007f, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110056, 0x110074, 
		0x110086, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 0x11004b, 
		0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11007f, 
		0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 0x11004d, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110087, 0x110088, 0x110089, 0x11007f, 0x11004b, 0x11008a, 
		0x11008b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11007f, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110078, 0x110075, 0x110078, 0x110056, 0x110074, 0x110086, 0x11008a, 
		0x11008b, 0x11008e, 0x11008a, 0x11008b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 
		0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 
		0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 
		0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11007f, 0x11005a, 
		0x110075, 0x110078, 0x11004c, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110055, 0x110075, 0x11004c, 0x110056, 0x110074, 
		0x110086, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 
		0x11004d, 0x110065, 0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 
		0x110086, 0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 
		0x11004d, 0x110065, 0x110071, 0x110082, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 0x110086, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 
		0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 
		0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110065, 0x110071, 
		0x110082, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 0x11005a, 
		0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110049, 0x11004d, 0x110065, 0x110071, 0x110048, 0x110049, 0x11004d, 
		0x110065, 0x110071, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 0x110086, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 
		0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 
		0x110065, 0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 
		0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x110051, 0x110052, 
		0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110087, 0x110088, 
		0x110089, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004a, 0x11008a, 0x11008b, 0x11008e, 0x11008a, 0x11008b, 
		0x11005f, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x11004b, 0x11008a, 0x11008b, 0x11005a, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110052, 0x11004c, 0x11004d, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004a, 0x11005a, 0x11008a, 
		0x11008b, 0x11008e, 0x11008f, 0x11008a, 0x11008b, 0x11008f, 0x11008f, 0x11008f, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110078, 0x11004d, 0x110065, 0x110071, 0x11004b, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x11007c, 0x11004d, 0x110065, 0x110071, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 
		0x11008b, 0x11008e, 0x11008a, 0x11008b, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 
		0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004c, 0x11004b, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x110051, 0x110052, 
		0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 
		0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 
		0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004c, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110074, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 
		0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11005a, 
		0x110074, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 
		0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 
		0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 
		0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004d, 0x110065, 
		0x110071, 0x110082, 0x11004b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110055, 0x11005a, 0x11008a, 0x11008b, 0x11008e, 0x11008f, 0x11008a, 
		0x11008b, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110074, 0x110070, 0x11004b, 0x11004b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004b, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x110051, 0x110052, 
		0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 
		0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11008a, 0x11008b, 0x11008e, 0x11008a, 
		0x11008b, 0x110078, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11008a, 0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 
		0x11004d, 0x110065, 0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 
		0x110086, 0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110075, 0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 
		0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x110051, 
		0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 
		0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004c, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 
		0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110074, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 
		0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 
		0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x110074, 0x11008e, 0x11008a, 0x11008b, 0x11005a, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110078, 0x11007e, 0x11007f, 0x11005a, 0x11007f, 0x11005a, 0x11007f, 0x11005a, 
		0x11008a, 0x11008b, 0x11008e, 0x11008f, 0x11008a, 0x11008b, 0x11007f, 0x11007f, 
		0x11008f, 0x11008f, 0x110076, 0x110089, 0x110060, 0x110077, 0x110076, 0x110089, 
		0x110076, 0x110089, 0x110077, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x11007d, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110087, 0x110088, 0x110089, 0x11007f, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11007f, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x11007d, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11008a, 0x11008b, 
		0x11008e, 0x11008a, 0x11008b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x11007d, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110055, 0x11005a, 0x11008a, 0x11008b, 0x11008e, 0x11008f, 0x11008a, 
		0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11008a, 
		0x11008b, 0x11008e, 0x11008a, 0x11008b, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005d, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x11007d, 0x110081, 0x110082, 
		0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110076, 0x110089, 
		0x11005a, 0x110060, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 
		0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110078, 0x11008a, 0x11008b, 0x11008e, 0x11008a, 
		0x11008b
	]

	private static let GotoA:[Int16] = [
		    16,     17,     18,     19,     20,     21,     22,     23, 
		    24,     25,     26,   1444,    645,    646,   1316,   1317, 
		  1318,   1295,   1294,     18,     19,   1293,     18,     19, 
		  1283,     18,     19,   1284,   1276,     16,     27,     23, 
		    24,     25,     26,     30,     31,     42,     43,     44, 
		    45,     46,     47,     48,     49,     50,   1267,   1265, 
		   372,    373,    374,    375,    390,    391,    392,   1263, 
		   394,    119,    550,   1233,    123,     52,     67,     68, 
		    69,     70,     71,     72,     73,     74,     75,     76, 
		    77,     78,     79,     80,     81,     82,     83,     84, 
		    85,     86,   1222,   1209,   1210,   1211,   1205,   1203, 
		   372,    373,    374,    375,    390,    391,    392,   1201, 
		   394,   1194,   1185,   1091,   1183,   1180,   1150,   1093, 
		  1061,     88,     93,     42,     94,     95,     96,     97, 
		    98,     99,    100,    101,    102,    103,    104,    105, 
		   106,     47,    107,     49,    108,    109,   1050,   1037, 
		  1038,   1039,   1034,    372,    373,    374,    375,   1027, 
		   126,    119,    116,    112,     52,     42,     44,    113, 
		   114,     47,    107,     49,     50,    112,     42,     44, 
		   114,    120,     49,    123,     42,     44,    114,    124, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,   1024,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		   128,    130,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    157,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1017,    645,    646,   1006,    993,    994, 
		    31,    390,    391,    392,    977,    394,     42,    972, 
		    44,     45,     46,     47,     48,     49,     50,    958, 
		   949,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    947,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    946,    943,    942,    896,    897,    186,    171, 
		    31,    177,    178,     31,     67,     68,     69,     70, 
		    71,     72,     73,     74,     75,     76,     77,     78, 
		    79,     80,     81,     82,     83,     84,     85,    187, 
		   188,    193,     42,    194,    195,    196,    197,    198, 
		   199,    200,    201,    202,    203,    204,    205,    206, 
		    47,    107,     49,    207,    208,    885,    865,    866, 
		   867,    861,    372,    373,    374,    375,    222,    212, 
		   119,    210,    112,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,    218,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,    213,    215,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    216, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    217,    220,    233, 
		   234,    235,    236,    237,    238,    239,    240,    241, 
		   857,    855,    372,    373,    374,    375,    390,    391, 
		   392,    853,    394,    851,    271,    849,    819,    273, 
		   242,     67,     68,     69,     70,     71,     72,     73, 
		    74,     75,     76,     77,     78,     79,     80,     81, 
		    82,     83,     84,     85,    243,    244,    249,    233, 
		   250,    251,    252,    253,    254,    255,    256,    257, 
		   258,    259,    260,    261,    262,    238,    263,    240, 
		   264,    265,    808,    788,    789,    790,    784,    372, 
		   373,    374,    375,    285,    276,    271,    270,    266, 
		   242,    233,    235,    267,    268,    238,    263,    240, 
		   241,    266,    233,    235,    268,    272,    240,    273, 
		   233,    235,    268,    274,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    282,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    277,    279,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		   280,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,    281,    284, 
		   233,    286,    235,    236,    237,    238,    239,    240, 
		   241,    288,    289,    301,    302,    303,    304,    305, 
		   306,    307,    308,    309,    310,    311,    783,    781, 
		   372,    373,    374,    375,    390,    391,    392,    779, 
		   394,    341,    774,    744,    343,    312,     67,     68, 
		    69,     70,     71,     72,     73,     74,     75,     76, 
		    77,     78,     79,     80,     81,     82,     83,     84, 
		    85,    313,    314,    319,    301,    320,    321,    322, 
		   323,    324,    325,    326,    327,    328,    329,    330, 
		   331,    332,    308,    333,    310,    334,    335,    733, 
		   713,    714,    715,    371,    372,    373,    374,    375, 
		   355,    346,    341,    340,    336,    312,    301,    305, 
		   337,    338,    308,    333,    310,    311,    336,    301, 
		   305,    338,    342,    310,    343,    301,    305,    338, 
		   344,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    352,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    347,    349,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,    350,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,    351,    354,    233,    356,    235, 
		   236,    237,    238,    239,    240,    241,    357,    358, 
		   301,    360,    303,    304,    305,    306,    307,    308, 
		   309,    310,    311,    704,    390,    391,    392,    393, 
		   394,    377,    373,    374,    375,    379,    372,    373, 
		   374,    375,    404,    390,    391,    392,    400,    394, 
		   398,    396,    390,    391,    392,    397,    390,    391, 
		   392,    399,    394,    396,    396,    301,    496,    305, 
		   306,    307,    700,    308,    309,    310,    311,    415, 
		   416,    417,    418,    419,    420,    421,    422,    423, 
		   698,    696,    372,    373,    374,    375,    390,    391, 
		   392,    694,    394,    453,    690,    659,    455,    424, 
		    67,     68,     69,     70,     71,     72,     73,     74, 
		    75,     76,     77,     78,     79,     80,     81,     82, 
		    83,     84,     85,    425,    426,    431,    415,    432, 
		   433,    434,    435,    436,    437,    438,    439,    440, 
		   441,    442,    443,    444,    420,    445,    422,    446, 
		   447,    502,    478,    479,    480,    474,    372,    373, 
		   374,    375,    467,    458,    453,    452,    448,    424, 
		   415,    417,    449,    450,    420,    445,    422,    423, 
		   448,    415,    417,    450,    454,    422,    455,    415, 
		   417,    450,    456,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,    464,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,    459,    461,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    462, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    463,    466,    233, 
		   468,    235,    236,    237,    238,    239,    240,    241, 
		   469,    470,    301,    472,    303,    304,    305,    306, 
		   307,    308,    309,    310,    311,    301,    496,    305, 
		   306,    307,    497,    308,    309,    310,    311,    415, 
		   484,    417,    418,    419,    420,    421,    422,    423, 
		   483,    480,    415,    481,    417,    443,    482,    420, 
		   445,    422,    423,    487,    488,    480,    415,    489, 
		   417,    418,    419,    420,    421,    422,    423,    487, 
		   492,    480,    415,    493,    417,    418,    419,    420, 
		   421,    422,    423,    487,    301,    496,    305,    306, 
		   307,    500,    308,    309,    310,    311,    507,    508, 
		   509,    510,    511,    512,     25,    513,    644,    645, 
		   646,     42,    548,     44,    549,    114,     47,     48, 
		    49,     50,    528,    515,     31,    520,    521,     31, 
		   525,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    526,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    532,    533,    534,    530,    415,    537,    417, 
		   418,    419,    420,    421,    422,    423,    536,    534, 
		   233,    535,    235,    236,    237,    238,    239,    240, 
		   241,    540,    541,    534,    415,    542,    417,    418, 
		   419,    420,    421,    422,    423,    540,    545,    534, 
		   415,    546,    417,    418,    419,    420,    421,    422, 
		   423,    540,    552,    550,     42,     44,    551,    114, 
		    47,     48,     49,     50,    550,    553,    555,    560, 
		    31,    561,    562,    564,     31,    570,    570,    570, 
		   579,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    580,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    582,    594,    595,    596,    627,    390,    391, 
		   392,    623,    394,    599,    609,    610,    611,    616, 
		   390,    391,    392,    612,    394,    396,    301,    496, 
		   305,    306,    307,    621,    308,    309,    310,    311, 
		   415,    617,    417,    418,    419,    420,    421,    422, 
		   423,    619,    396,    301,    496,    305,    306,    307, 
		   632,    308,    309,    310,    311,    415,    628,    417, 
		   418,    419,    420,    421,    422,    423,    630,    648, 
		    31,    649,    650,     31,    669,    670,    671,    672, 
		   673,    682,    390,    391,    392,    678,    394,    676, 
		   674,    669,    670,    671,    675,    669,    670,    671, 
		   677,    673,    674,    396,    301,    496,    305,    306, 
		   307,    687,    308,    309,    310,    311,    415,    683, 
		   417,    418,    419,    420,    421,    422,    423,    685, 
		   415,    417,    691,    450,    420,    421,    422,    423, 
		   690,    693,    396,    301,    496,    305,    306,    307, 
		   709,    308,    309,    310,    311,    415,    705,    417, 
		   418,    419,    420,    421,    422,    423,    707,    301, 
		   496,    305,    306,    307,    731,    308,    309,    310, 
		   311,    415,    719,    417,    418,    419,    420,    421, 
		   422,    423,    718,    715,    301,    716,    305,    331, 
		   717,    308,    333,    310,    311,    722,    723,    715, 
		   415,    724,    417,    418,    419,    420,    421,    422, 
		   423,    722,    727,    715,    415,    728,    417,    418, 
		   419,    420,    421,    422,    423,    722,    734,    735, 
		   509,    510,    511,    512,     25,    513,     42,    739, 
		    44,    549,    114,     47,     48,     49,     50,    736, 
		   738,    740,    741,    743,    754,    755,    756,    757, 
		   758,    767,    390,    391,    392,    763,    394,    761, 
		   759,    754,    755,    756,    760,    754,    755,    756, 
		   762,    758,    759,    396,    301,    496,    305,    306, 
		   307,    772,    308,    309,    310,    311,    415,    768, 
		   417,    418,    419,    420,    421,    422,    423,    770, 
		   301,    305,    775,    338,    308,    309,    310,    311, 
		   774,    301,    777,    303,    304,    305,    306,    307, 
		   308,    309,    310,    311,    396,    301,    496,    305, 
		   306,    307,    806,    308,    309,    310,    311,    415, 
		   794,    417,    418,    419,    420,    421,    422,    423, 
		   793,    790,    233,    791,    235,    261,    792,    238, 
		   263,    240,    241,    797,    798,    790,    415,    799, 
		   417,    418,    419,    420,    421,    422,    423,    797, 
		   802,    790,    415,    803,    417,    418,    419,    420, 
		   421,    422,    423,    797,    809,    810,    509,    510, 
		   511,    512,     25,    513,     42,    814,     44,    549, 
		   114,     47,     48,     49,     50,    811,    813,    815, 
		   816,    818,    829,    830,    831,    832,    833,    842, 
		   390,    391,    392,    838,    394,    836,    834,    829, 
		   830,    831,    835,    829,    830,    831,    837,    833, 
		   834,    396,    301,    496,    305,    306,    307,    847, 
		   308,    309,    310,    311,    415,    843,    417,    418, 
		   419,    420,    421,    422,    423,    845,    233,    235, 
		   850,    268,    238,    239,    240,    241,    849,    852, 
		   396,    301,    859,    303,    304,    305,    306,    307, 
		   308,    309,    310,    311,    301,    496,    305,    306, 
		   307,    883,    308,    309,    310,    311,    415,    871, 
		   417,    418,    419,    420,    421,    422,    423,    870, 
		   867,     42,    868,     44,    205,    869,     47,    107, 
		    49,     50,    874,    875,    867,    415,    876,    417, 
		   418,    419,    420,    421,    422,    423,    874,    879, 
		   867,    415,    880,    417,    418,    419,    420,    421, 
		   422,    423,    874,    886,    887,    509,    510,    511, 
		   512,     25,    513,     42,    891,     44,    549,    114, 
		    47,     48,     49,     50,    888,    890,    892,    893, 
		   895,    919,    920,    921,    922,    923,    148,    159, 
		   899,    900,    903,    301,    496,    305,    306,    307, 
		   908,    308,    309,    310,    311,    415,    904,    417, 
		   418,    419,    420,    421,    422,    423,    906,    932, 
		   390,    391,    392,    928,    394,    926,    924,    919, 
		   920,    921,    925,    919,    920,    921,    927,    923, 
		   924,    396,    301,    496,    305,    306,    307,    937, 
		   308,    309,    310,    311,    415,    933,    417,    418, 
		   419,    420,    421,    422,    423,    935,    148,    159, 
		   899,    944,    165,    897,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    955,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    950,    952,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		   953,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,    954,    957, 
		   233,    959,    235,    236,    237,    238,    239,    240, 
		   241,    960,    961,    965,     31,    966,    967,    969, 
		    31,    301,    975,    303,    304,    305,    306,    307, 
		   308,    309,    310,    311,    396,    981,    990,    986, 
		   415,    987,    417,    418,    419,    420,    421,    422, 
		   423,    989,    301,    496,    305,    306,    307,   1004, 
		   308,    309,    310,    311,    415,    996,    417,    418, 
		   419,    420,    421,    422,    423,    995,     31,    906, 
		   999,     31,    415,   1000,    417,    418,    419,    420, 
		   421,    422,    423,    906,   1002,     31,   1007,   1008, 
		   509,    510,    511,    512,     25,    513,     42,   1012, 
		    44,    549,    114,     47,     48,     49,     50,   1009, 
		  1011,   1013,   1014,   1016,   1019,     31,   1020,   1021, 
		    31,   1026,    233,   1028,    235,    236,    237,    238, 
		   239,    240,    241,   1029,   1030,    301,   1032,    303, 
		   304,    305,    306,    307,    308,    309,    310,    311, 
		   415,   1043,    417,    418,    419,    420,    421,    422, 
		   423,   1042,   1039,     42,   1040,     44,    105,   1041, 
		    47,    107,     49,     50,    874,   1046,   1039,    415, 
		  1047,    417,    418,    419,    420,    421,    422,    423, 
		   874,   1049,   1039,   1051,   1052,    509,    510,    511, 
		   512,     25,    513,     42,   1056,     44,    549,    114, 
		    47,     48,     49,     50,   1053,   1055,   1057,   1058, 
		  1060,     67,     68,     69,     70,     71,     72,     73, 
		    74,     75,     76,     77,     78,     79,     80,     81, 
		    82,     83,     84,     85,   1062,   1063,   1068,     68, 
		  1069,   1070,   1071,   1072,   1073,   1074,   1075,   1076, 
		  1077,   1078,   1079,   1080,   1081,     82,   1082,     84, 
		  1083,   1084,   1139,   1126,   1127,   1128,   1123,    372, 
		   373,    374,    375,   1116,   1107,   1091,   1105,   1085, 
		  1061,     68,   1087,   1088,   1089,     82,   1082,     84, 
		  1090,   1097,   1091,   1085,     68,   1087,   1089,   1092, 
		    84,   1093,     68,   1087,   1089,   1094,    301,    496, 
		   305,    306,    307,   1102,    308,    309,    310,    311, 
		   415,   1098,    417,    418,    419,    420,    421,    422, 
		   423,   1100,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1113,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1108,   1110,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,   1111,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,   1112,   1115,    233,   1117, 
		   235,    236,    237,    238,    239,    240,    241,   1118, 
		  1119,    301,   1121,    303,    304,    305,    306,    307, 
		   308,    309,    310,    311,    415,   1132,    417,    418, 
		   419,    420,    421,    422,    423,   1131,   1128,     68, 
		  1129,   1087,   1080,   1130,     82,   1082,     84,   1090, 
		  1100,   1135,   1128,    415,   1136,    417,    418,    419, 
		   420,    421,    422,    423,   1100,   1138,   1128,   1140, 
		  1141,    509,    510,    511,    512,     25,    513,     42, 
		  1145,     44,    549,    114,     47,     48,     49,     50, 
		  1142,   1144,   1146,   1147,   1149,   1160,   1161,   1162, 
		  1163,   1164,   1173,    390,    391,    392,   1169,    394, 
		  1167,   1165,   1160,   1161,   1162,   1166,   1160,   1161, 
		  1162,   1168,   1164,   1165,    396,    301,    496,    305, 
		   306,    307,   1178,    308,    309,    310,    311,    415, 
		  1174,    417,    418,    419,    420,    421,    422,    423, 
		  1176,     68,   1087,   1181,   1089,     82,     83,     84, 
		  1090,   1180,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1191,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1186,   1188,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,   1189,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,   1190,   1193,    233,   1195, 
		   235,    236,    237,    238,    239,    240,    241,   1196, 
		  1197,    301,   1199,    303,    304,    305,    306,    307, 
		   308,    309,    310,    311,    396,    233,   1206,    235, 
		   236,    237,    238,    239,    240,    241,    415,   1215, 
		   417,    418,    419,    420,    421,    422,    423,   1214, 
		  1211,     68,   1212,   1087,     80,   1213,     82,     83, 
		    84,   1090,   1100,   1218,   1211,    415,   1219,    417, 
		   418,    419,    420,    421,    422,    423,   1100,   1221, 
		  1211,   1223,   1224,    509,    510,    511,    512,     25, 
		   513,     42,   1228,     44,    549,    114,     47,     48, 
		    49,     50,   1225,   1227,   1229,   1230,   1232,   1243, 
		  1244,   1245,   1246,   1247,   1256,    390,    391,    392, 
		  1252,    394,   1250,   1248,   1243,   1244,   1245,   1249, 
		  1243,   1244,   1245,   1251,   1247,   1248,    396,    301, 
		   496,    305,    306,    307,   1261,    308,    309,    310, 
		   311,    415,   1257,    417,    418,    419,    420,    421, 
		   422,    423,   1259,    396,   1272,   1273,     31,   1279, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,   1280,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		  1282,   1288,   1285,   1287,   1289,   1291,   1296,   1298, 
		  1301,     31,   1302,   1303,   1305,     31,   1435,   1327, 
		  1321,   1325,   1329,   1330,   1342,   1334,   1340,   1330, 
		  1336,   1330,   1339,   1349,    148,   1350,   1351,   1352, 
		  1353,   1354,   1355,   1356,   1357,   1358,   1359,    159, 
		  1360,   1361,   1362,    163,   1363,    164,    165,   1364, 
		  1365,   1366,     25,   1367,   1425,    645,    646,   1414, 
		    42,   1412,     44,     45,     46,     47,     48,     49, 
		    50,   1398,   1389,   1349,    148,   1350,   1351,   1352, 
		  1353,   1354,   1355,   1356,   1357,   1387,   1359,    159, 
		  1360,   1361,   1362,    163,   1363,    164,    165,   1364, 
		  1365,   1366,     25,   1367,   1386,   1383,   1369,     31, 
		  1374,   1375,     31,   1349,    148,   1350,   1351,   1352, 
		  1353,   1354,   1355,   1356,   1357,   1379,   1359,    159, 
		  1360,   1361,   1362,    163,   1363,    164,    165,   1364, 
		  1365,   1366,     25,   1367,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,   1395,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,   1390,   1392,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		  1393,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,   1394,   1397, 
		   233,   1399,    235,    236,    237,    238,    239,    240, 
		   241,   1400,   1401,   1405,     31,   1406,   1407,   1409, 
		    31,   1415,   1416,    509,    510,    511,    512,     25, 
		   513,     42,   1420,     44,    549,    114,     47,     48, 
		    49,     50,   1417,   1419,   1421,   1422,   1424,   1427, 
		    31,   1428,   1429,     31,   1349,    148,   1350,   1351, 
		  1352,   1353,   1354,   1355,   1356,   1357,   1433,   1359, 
		   159,   1360,   1361,   1362,    163,   1363,    164,    165, 
		  1364,   1365,   1366,     25,   1367,   1434,   1437,   1330, 
		  1443,   1438,   1440,    147,    148,    149,    150,    151, 
		   152,    153,    154,    155,    156,   1441,    158,    159, 
		   160,    161,    162,    163,    164,    165,    166,    167, 
		   168,     25,    169,   1442,   1446,     31,   1447,   1448, 
		    31
	]


	
    var semantic : SemanticHandler = SemanticHandler()
    var params : [Symbol] = []
    var arguments : [(String, TypeSymbol)] = []
    var linkedListArray = ArrayLinkedList()
    var r : Int = 1
    var currentFuncName : String = ""
    

	
    func sendVariableRepeated(id : String){
        error(code: CompilerParser.VAR_ALREADY_DECLARED, data: ["varRep": id as AnyObject])
    }

    func faltanOperandos(){
        error(code: CompilerParser.BAD_OPERANDOS, data: [:])
    }

    func badJumpStackEmpty(){
        error(code: CompilerParser.JUMP_STACK_EMPTY, data: [:])
    }

    func constantAlreadyAssigned(id: String){
        error(code: CompilerParser.CONSTANT_ASSIGNED, data: ["id":id as AnyObject])
    }

    func notArray(id: String){
        error(code: CompilerParser.NOT_ARRAY, data: ["id":id as AnyObject])
    }

    func sendInvalidOperationBetween(t1 : TypeSymbol, t2: TypeSymbol){
        error(code: CompilerParser.TYPE_MISMATCH, data: ["t1": NSNumber(value: t1.rawValue) as AnyObject, "t2": NSNumber(value: t2.rawValue) as AnyObject])
    }

    func sendUndeclareVariable(id: NSString) {
        error(code: CompilerParser.UNDECLARED_VAR, data: ["undeclaredVar": id as NSString])
    }

    func sendTypeMismatch() {
        error(code: CompilerParser.TYPE_MISMATCH, data: [:])
    }
    
    func sendBadParametersForFunc(id: NSString){
        error(code: CompilerParser.BAD_PARAMETERS, data: ["id": id])
    }



	/*
	 *	Error Values
	 */

	public static let ERRORMASK_WARNING = 0x8000
	public static let ERROR_SYNTAX = 0x0001
	public static let ERROR_MISSINGTOKEN = 0x0002
	public static let ERROR_MISSINGTOKENS = 0x0003
	public static let ERROR_STARTERRORID = 0x0100

    
    static let ERROR_UNIMPLEMENTED = (CompilerParser.ERROR_STARTERRORID+1)
    static let VAR_ALREADY_DECLARED = (CompilerParser.ERROR_STARTERRORID+2)
    static let TYPE_MISMATCH = (CompilerParser.ERROR_STARTERRORID+3)
    static let UNDECLARED_VAR = (CompilerParser.ERROR_STARTERRORID+4)
    static let BAD_PARAMETERS = (CompilerParser.ERROR_STARTERRORID+5)
    static let BAD_OPERANDOS = (CompilerParser.ERROR_STARTERRORID+6)
    static let JUMP_STACK_EMPTY = (CompilerParser.ERROR_STARTERRORID+7)
    static let CONSTANT_ASSIGNED = (CompilerParser.ERROR_STARTERRORID+8)
    static let NOT_ARRAY = (CompilerParser.ERROR_STARTERRORID+8)


	/*
	 *	Stack
	 */

	private struct Stack {
		var state: UInt16
		var line: Int
		var column: Int
		var filename: String?
		var value: AnyObject?

		init()
		{
			state = 0
			line = 0
			column = 0
			filename = nil
			value = nil
		}
	}

	/*
	 *	Internal values
	 */

	private var stack: [Stack]
	private var lex: OCLexInput

	// Error support
	private var success: Bool
	private var errorCount: Int

	private var hasError: Bool
	private var errorLine: Int
	private var errorColumn: Int
	private var errorFileName: String?

	// Delegate
	public var errorDelegate: CompilerParserError?


	/*
	 *	Startup
	 */

	public init(lexer: OCLexInput)
	{
		lex = lexer

		stack = Array()
		success = true
		errorCount = 0;
		hasError = false
		errorLine = 0
		errorColumn = 0
		errorFileName = nil
		errorDelegate = nil

        
    semantic.delegate = self

	}

	deinit {
	    
	}

	/*
	 *	Process production rule. This processes the production rule and creates
	 *	a new stack state with the rule reduction.
	 */

	private func processReduction(_ rule: Int16) -> CompilerParser.Stack
	{
		// Get production len, for translating $1...$N into something useful
		let pos = stack.count - Int(CompilerParser.RuleLength[Int(rule)])

		// Set up initial state.
		var s = CompilerParser.Stack()

		// File position of reduced rule is first token of the symbols reduced
		let fs = stack[pos]
		s.filename = fs.filename;
		s.line = fs.line;
		s.column = fs.column;

		do {
			try reduction(rule: rule, at: pos, with: &s)
		} catch {
			// Ignore errors. Can happen when the stack is in an error state
		}

		return s
	}

	private func reduction(rule: Int16, at pos: Int, with s: inout CompilerParser.Stack) throws
	{
		// Now process production.
		//
		// Note that $$ translated into (s.value), and
		// $n translates into ((<type> *)(self.stack[pos+(n-1)])), where <type>
		// is the declared type of the token or production rule.

		// Note: value is AnyObject, but we use as! cast to coerce, and assume
		// the exception is caught and ignored if it all goes south.
		switch rule {

        // Production rules
            // (110046) $accept : programa $end
            // (110047) array : arrayA 
            // (110047) array : arrayA arrayA 
            // (110048) arrayExpressions : arrayFactor SEMICOLON arrayExpressions 
            // (110048) arrayExpressions : arrayFactor 
            // (110049) arrayFactor : factor COMMA arrayFactor 
            // (110049) arrayFactor : factor 
            // (11004a) asignar : ID varAssign 
            case 7:
                semantic.saveValueVariable(id : (stack[pos].value as! NSString) as String)
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE varAssign 
            case 8:
                print("Assigned celle array");
        semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE LSBRAKE expresion RSBRAKE varAssign 
            case 9:
                print("Assigned cell matrix")
        semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID assMulti varAssign 
            case 10:
                semantic.assignOneCellArray((stack[pos].value as! NSString));
        semantic.assignToPointer();
    
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE 
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE assMulti 
            // (11004c) booleanOperators : AND 
            case 13:
                semantic.addOperator(op: Operator.and)
            // (11004c) booleanOperators : OR 
            case 14:
                semantic.addOperator(op: Operator.or)
            // (11004d) booleanValue : T 
            case 15:
                s.value = (stack[pos].value as! NSNumber)
            // (11004d) booleanValue : F 
            case 16:
                s.value = (stack[pos].value as! NSNumber)
            // (11004e) cicloForEach : forEach popNode 
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP1 cicloForIteradorA cicloForIteradorP2 asignar RPAREN cuerpo 
            case 18:
                semantic.whileP3()
   
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP2 asignar RPAREN cuerpo 
            case 19:
                semantic.whileP3()
   
            // (110050) cicloForIteradorA : hiperExpression 
            // (110051) cicloForIteradorP1 : vars 
            case 21:
                semantic.whileP1()
   
            // (110052) cicloForIteradorP2 : SEMICOLON 
            case 22:
                semantic.whileP2()
   
            // (110053) cicloWhile : cicloWhileP1 startNode expresion cicloWhileP2 cuerpo 
            case 23:
                semantic.whileP3()
   
            // (110054) cicloWhileP1 : WHILE 
            case 24:
                semantic.whileP1()
   
            // (110055) cicloWhileP2 : RPAREN 
            case 25:
                semantic.whileP2();
   
            // (110056) comparisonOperators : EQ EQ 
            case 26:
                semantic.addOperator(op: Operator.equal)
            // (110056) comparisonOperators : NEQ 
            case 27:
                semantic.addOperator(op: Operator.different)
            // (110056) comparisonOperators : LT 
            case 28:
                semantic.addOperator(op: Operator.lessThan)
            // (110056) comparisonOperators : LE 
            case 29:
                semantic.addOperator(op: Operator.lessOrEqualThan)
            // (110056) comparisonOperators : GT 
            case 30:
                semantic.addOperator(op: Operator.greaterThan)
            // (110056) comparisonOperators : GE 
            case 31:
                semantic.addOperator(op: Operator.greaterOrEqualThan)
            // (110057) condicion : condicionA cuerpo 
            case 32:
                semantic.endCondicional() 
            // (110057) condicion : condicionA cuerpo startNodeElse cuerpo 
            case 33:
                semantic.endCondicional() 
            // (110058) condicionA : IF startNode expresion RPAREN 
            case 34:
                semantic.addCondicional()
   
            // (110059) const : CONST tipo ID varAssign SEMICOLON 
            case 35:
                semantic.insertSymbolToST((stack[pos + 2].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 2].value as! NSString) as String)
        
            // (11005a) cuerpo : LBRACE cuerpoListaA popNode 
            // (11005b) cuerpoLista : vars 
            // (11005b) cuerpoLista : asignar SEMICOLON 
            // (11005b) cuerpoLista : llamada SEMICOLON 
            // (11005b) cuerpoLista : leer SEMICOLON 
            // (11005b) cuerpoLista : escribir SEMICOLON 
            // (11005b) cuerpoLista : condicion 
            // (11005b) cuerpoLista : cicloWhile 
            // (11005b) cuerpoLista : cicloForEach 
            // (11005b) cuerpoLista : cicloForIterador 
            // (11005b) cuerpoLista : ternary SEMICOLON 
            // (11005b) cuerpoLista : RTN expresion SEMICOLON 
            case 47:
                semantic.returnFunctions()
            // (11005b) cuerpoLista : error 
            case 48:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11005c) cuerpoListaA : cuerpoLista 
            // (11005c) cuerpoListaA : cuerpoLista cuerpoListaA 
            case 50:
                s.value = (stack[pos].value) as AnyObject?
            // (11005d) cuerpoReturn : cuerpoLista cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON 
            // (11005e) declareVarCiclo : INT ID COLON factor range factor 
            case 54:
                semantic.addForEachRange(range: (stack[pos + 4].value as! NSString) as String, id : (stack[pos + 1].value as! NSString) as String);
            s.value = (stack[pos + 1].value as! NSString);
        
            // (11005f) endForEach : LBRACE cuerpoListaA 
            // (110060) endParams : RPAREN 
            case 56:
                semantic.returnSymbolByID(currentFuncName).params = params.reversed()
    
            // (110061) escribir : PRINT LPAREN escribirA RPAREN 
            case 57:
                semantic.addPrint()
            // (110062) escribirA : escribirB 
            // (110062) escribirA : escribirB COMMA escribirA 
            // (110063) escribirB : expresion 
            // (110064) expresion : hiperExpression 
            // (110064) expresion : llamada 
            // (110064) expresion : LBRACE arrayExpressions RBRACE 
            // (110065) factor : CTEI 
            case 64:
                semantic.addConstantInteger((stack[pos].value as! NSNumber))
        
            // (110065) factor : CTEF 
            case 65:
                semantic.addConstantFloat((stack[pos].value as! NSNumber))
       
            // (110065) factor : booleanValue 
            case 66:
                semantic.addConstantBool((stack[pos].value as! NSNumber))
       
            // (110065) factor : CTES 
            case 67:
                semantic.addConstantString((stack[pos].value as! NSString))
       
            // (110065) factor : ID 
            case 68:
                semantic.addIDAsQuadruple((stack[pos].value as! NSString))
       
            // (110065) factor : ID assMulti 
            case 69:
                semantic.readOneCellArray((stack[pos].value as! NSString));
       
            // (110065) factor : CTEC 
            case 70:
                semantic.addConstantChar((stack[pos].value as! NSString))
       
            // (110065) factor : llamada 
            // (110065) factor : LPAREN megaExpression RPAREN 
            // (110065) factor : NLL 
            // (110066) flujoBloque : asignar SEMICOLON 
            // (110066) flujoBloque : llamada 
            // (110066) flujoBloque : escribir 
            // (110066) flujoBloque : condicion 
            // (110066) flujoBloque : cicloWhile 
            // (110066) flujoBloque : cicloForIterador 
            // (110066) flujoBloque : cicloForEach 
            // (110066) flujoBloque : factor 
            // (110066) flujoBloque : ternary 
            // (110067) flujoBloqueTernary : asignar 
            // (110067) flujoBloqueTernary : llamada 
            // (110067) flujoBloqueTernary : escribir 
            // (110067) flujoBloqueTernary : condicion 
            // (110067) flujoBloqueTernary : cicloWhile 
            // (110067) flujoBloqueTernary : cicloForIterador 
            // (110067) flujoBloqueTernary : cicloForEach 
            // (110067) flujoBloqueTernary : factor 
            // (110067) flujoBloqueTernary : ternary 
            // (110068) forEach : FOR startNode VAR ID COLON ID RPAREN cuerpo 
            // (110068) forEach : FOR startNode declareVarCiclo RPAREN endForEach 
            case 93:
                semantic.endForEachRange(id: (stack[pos + 2].value as! NSString))
            // (110069) funciones : funcionesVoid 
            // (110069) funciones : funcionesReturn 
            // (110069) funciones : funcionesVoid funciones 
            // (110069) funciones : funcionesReturn funciones 
            // (11006a) funcionesReturn : FUNC idFuncReturn startNode params endParams LBRACE cuerpoReturn popNode 
            case 98:
                semantic.endFunction()
           self.params.removeAll()
       
            // (11006a) funcionesReturn : FUNC idFuncReturn startNode RPAREN LBRACE cuerpoReturn popNode 
            case 99:
                semantic.endFunction()
       
            // (11006a) funcionesReturn : error 
            case 100:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11006b) funcionesVoid : FUNC idFunc startNode params endParams cuerpo 
            case 101:
                semantic.endFunction()
           self.params.removeAll()
       
            // (11006b) funcionesVoid : FUNC idFunc startNode RPAREN cuerpo 
            case 102:
                semantic.endFunction()
       
            // (11006c) hiperExpression : superExpression 
            // (11006c) hiperExpression : hiperExpression booleanOperators hiperExpression 
            case 104:
                semantic.addQuadruple()
            // (11006d) idFunc : ID 
            case 105:
                currentFuncName = (stack[pos].value as! NSString) as String
        semantic.insertSymbolToST((stack[pos].value as! NSString), true, false, .void, .method)
        semantic.startFunction((stack[pos].value as! NSString));
        s.value = (stack[pos].value as! NSString)
            // (11006e) idFuncReturn : tipoSimple ID 
            case 106:
                currentFuncName = (stack[pos + 1].value as! NSString) as String;
        semantic.startFunction((stack[pos + 1].value as! NSString));
        semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, .method);
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 1].value as! NSString)
            // (11006e) idFuncReturn : tipoSimple varsPrimaArreglosMulti ID 
            case 107:
                currentFuncName = (stack[pos + 2].value as! NSString) as String;
        semantic.startFunction((stack[pos + 2].value as! NSString));
        semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, type: TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, kind: .method);
        linkedListArray = ArrayLinkedList();
        r = 1;
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 2].value as! NSString);
    
            // (11006f) leer : INPUT LPAREN leerR RPAREN 
            // (110070) leerR : ID 
            case 109:
                semantic.readID((stack[pos].value as! NSString))

            // (110070) leerR : leerR COMMA ID 
            case 110:
                semantic.readID((stack[pos + 2].value as! NSString))

            // (110070) leerR : ID assMulti 
            case 111:
                semantic.readIDMulti((stack[pos].value as! NSString))

            // (110070) leerR : leerR COMMA ID assMulti 
            case 112:
                semantic.readIDMulti((stack[pos + 2].value as! NSString))

            // (110071) llamada : ID LPAREN llamadaA RPAREN 
            case 113:
                semantic.functionCall((stack[pos].value as! NSString), args: arguments);
                arguments.removeAll()
             
            // (110071) llamada : ID LPAREN RPAREN 
            case 114:
                semantic.functionCall((stack[pos].value as! NSString), args: [])
        
            // (110072) llamadaA : expresion 
            case 115:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110072) llamadaA : expresion COMMA llamadaA 
            case 116:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110073) megaExpression : termino 
            // (110073) megaExpression : megaExpression o1 termino 
            case 118:
                semantic.addQuadruple()
            // (110074) o1 : PLUS 
            case 119:
                semantic.addOperator(op: Operator.sum)
            // (110074) o1 : MINUS 
            case 120:
                semantic.addOperator(op:Operator.minus)
            // (110075) o2 : TIMES 
            case 121:
                semantic.addOperator(op: Operator.multiply)
            // (110075) o2 : DIVIDE 
            case 122:
                semantic.addOperator(op: Operator.division)
            // (110076) params : tipoSimple ID 
            case 123:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110076) params : tipoSimple ID COMMA params 
            case 124:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110076) params : tipoSimple ID paramsArreglosMulti COMMA params 
            case 125:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110076) params : tipoSimple ID paramsArreglosMulti 
            case 126:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110077) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 127:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
                r = (lS) * r
                linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
            
            // (110077) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE paramsArreglosMulti 
            case 128:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (110078) popNode : RBRACE 
            case 129:
                semantic.endScope()
   
            // (110079) printOper : PRINT 
            case 130:
                semantic.addOperator(op: Operator.print)
            // (11007a) programa : programaPrimo funciones startMain startNode RPAREN cuerpo 
            case 131:
                semantic.endFunction()
            // (11007a) programa : funciones startMain startNode RPAREN cuerpo 
            case 132:
                semantic.endFunction()
            // (11007a) programa : programaPrimo startMain startNode RPAREN cuerpo 
            case 133:
                semantic.endFunction()
            // (11007a) programa : startMain startNode RPAREN cuerpo 
            case 134:
                semantic.endFunction()
            // (11007b) programaPrimo : vars programaPrimo 
            // (11007b) programaPrimo : vars 
            // (11007c) range : CPTRG 
            case 137:
                s.value = (stack[pos].value as! NSString)
            // (11007c) range : INCPTRG 
            case 138:
                s.value = (stack[pos].value as! NSString)
            // (11007d) returnCuerpo : RTN expresion 
            case 139:
                semantic.returnFunctions()
            // (11007e) startMain : MAIN 
            case 140:
                semantic.insertSymbolToST("main", true, false, .void, .method)
        semantic.startFunction("main" as NSString)
        semantic.foundMain()
    
            // (11007f) startNode : LPAREN 
            case 141:
                semantic.startScope()
   
            // (110080) startNodeElse : ELSE 
            case 142:
                semantic.startScope()
        semantic.addElse()
    
            // (110081) superExpression : megaExpression 
            // (110081) superExpression : megaExpression comparisonOperators megaExpression 
            case 144:
                semantic.addQuadruple()
            // (110081) superExpression : ternary 
            // (110082) termino : factor 
            // (110082) termino : factor o2 megaExpression 
            case 147:
                semantic.addQuadruple()
            // (110083) ternary : superExpression ternaryTrue ternaryBloque ternaryFalse ternaryBloque 
            case 148:
                semantic.endTernaryOperator()
            // (110084) ternaryBloque : flujoBloqueTernary 
            // (110084) ternaryBloque : expresion 
            // (110085) ternaryFalse : COLON 
            case 151:
                semantic.colonTernaryOperator()
            // (110086) ternaryTrue : QM 
            case 152:
                semantic.addQuadrupleWithTernaryOperator()
            // (110087) tipo : tipoSimple 
            case 153:
                s.value = (stack[pos].value as! NSNumber)
            // (110087) tipo : tipoCompuesto 
            case 154:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : INTEGERCLASS 
            case 155:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : STRINGCLASS 
            case 156:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : ID 
            case 157:
                s.value = NSNumber(integerLiteral: TypeSymbol.ID.rawValue)
            // (110089) tipoSimple : INT 
            case 158:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : FLOAT 
            case 159:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : DOUBLE 
            case 160:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : CHAR 
            case 161:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : BOOLEAN 
            case 162:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : STR 
            case 163:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : VOID 
            case 164:
                s.value = (stack[pos].value)
            // (11008a) varAssign : varEqAssign expresion 
            // (11008b) varEqAssign : EQ 
            case 166:
                semantic.addOperator(op: .assign)
            // (11008c) vars : VAR ID SEMICOLON 
            case 167:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false)
    
            // (11008c) vars : tipo VAR ID SEMICOLON 
            case 168:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
        semantic.insertSymbolToST((stack[pos + 2].value as! NSString), false, false, type)
    
            // (11008c) vars : VAR ID varsPrimaArreglosMulti SEMICOLON 
            case 169:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false);
            linkedListArray = ArrayLinkedList();
            r = 1;
        
            // (11008c) vars : VAR ID varAssign SEMICOLON 
            case 170:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String);
        
            // (11008c) vars : VAR ID varsPrimaArreglos varAssign SEMICOLON 
            case 171:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false, (stack[pos + 2].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 1].value as! NSString));
        
            // (11008c) vars : tipo VAR ID varsPrimaArreglos varAssign SEMICOLON 
            case 172:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
            semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, const : false, type : type, (stack[pos + 3].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 2].value as! NSString));
        
            // (11008c) vars : tipoCompuesto ID varAssign SEMICOLON 
            case 173:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String)
        
            // (11008c) vars : CONST tipo ID varsPrimaArreglos varAssign SEMICOLON 
            case 174:
                semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, const : true, type:  TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void, (stack[pos + 3].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 2].value as! NSString));
        
            // (11008c) vars : const 
            // (11008d) varsPrima : EQ LBRACE expresion RBRACE 
            // (11008d) varsPrima : EQ LBRACE expresion COMMA RBRACE 
            // (11008e) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE 
            case 178:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r: r))
        s.value = ((stack[pos + 1].value as! NSNumber), 1) as! AnyObject
    
            // (11008e) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE LSBRAKE CTEI RSBRAKE 
            case 179:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
        s.value = ((stack[pos + 1].value as! NSNumber), (stack[pos + 4].value as! NSNumber)) as! AnyObject
    
            // (11008f) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 180:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (11008f) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE varsPrimaArreglosMulti 
            case 181:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    

			default:
				break
		}
	}

	private func actionForState(_ state: UInt16, token t: Int) -> Int
	{
		var min,max,mid: Int

		let token = (t == -1) ? CompilerParser.K_EOFTOKEN : t

		/* Find range */
		min = Int(CompilerParser.ActionI[Int(state)])
		max = Int(CompilerParser.ActionI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.ActionJ[mid]
			if token == j {
				return Int(CompilerParser.ActionA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Look up the goto value for the state and token (production rule) provided.
	 *	Operates the same as actionForState, except we look in the goto table.
	 *	In teory I guess we could combine these two tables (as productions and
	 *	tokens do not overlap).
	 */

	private func goto(state: UInt16, production token: UInt32) -> Int
	{
		var min,max,mid: Int

		/* Find range */
		min = Int(CompilerParser.GotoI[Int(state)])
		max = Int(CompilerParser.GotoI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.GotoJ[mid]
			if token == j {
				return Int(CompilerParser.GotoA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Errors. This formats and prints the specified error
	 */

	private func error(code: Int, data: [String: AnyObject])
	{
		if errorDelegate == nil {	// No error handling, ignore.
			return
		}
		if errorCount > 0 {			// skip until synced on 3 shifts
			return
		}

		// Call delegate with current token position
		// Token position is the topmost symbol

		if hasError {
			errorDelegate?.error(parser: self, line: errorLine, column: errorColumn, filename: errorFileName, errorCode: code, data: data)
		} else {
			if let top = stack.last {
				errorDelegate?.error(parser: self, line: top.line, column: top.column, filename: top.filename, errorCode: code, data: data)
			}
		}

		if 0 == (code & CompilerParser.ERRORMASK_WARNING) {
			success = false
			errorCount = 3
		}
	}

	private func error(code: Int)
	{
		error(code: code, data: [:])
	}

	private func errorOK()
	{
		errorCount = 0
	}

	private func tokenToString(_ token: UInt32) -> String
	{
		if token >= CompilerParser.K_FIRSTTOKEN {
			return CompilerParser.TokenArray[Int(token) - CompilerParser.K_FIRSTTOKEN]
		} else {
			return String.init(Unicode.Scalar(token) ?? Unicode.Scalar.init(UInt8(32)))
		}
	}

	private func reduce(action: Int16) -> Bool
	{
		// Determine the new state we're transitioning to.
		let production = CompilerParser.RuleProduction[Int(action)]
		let length = CompilerParser.RuleLength[Int(action)]

		// We pull the state we'd have after popping the stack.
		let statep = stack[stack.count - Int(length) - 1].state

		// Calculate the state we should transition to
		let newState = goto(state: statep, production: production)
		if newState == Int.max {
			return false
		}

		// Process reduction rule
		var state = processReduction(action)

		// Update state
		state.state = UInt16(newState)

		// Pop the stack
		stack.removeSubrange(stack.count - Int(length) ..< stack.count)

		// Push new state
		stack.append(state)

		// Clear error marker
		hasError = false

		// Return success
		return true
	}



	/*
	 *	Parser engine. Returns NO if there was an error during processing. Note
	 *	that as we uncover errors we call our delegate for error handling. This
	 *	implements the algorithm described in the Dragon Book, Algorithm 4.7.
	 */

	public func parse() -> Bool
	{
		var s: CompilerParser.Stack
		var a: Int

		/*
		 *	Step 1: reset and push the empty state.
		 */

		success = true
		stack = []

		hasError = false
		errorCount = 0

		s = CompilerParser.Stack()
		s.state = CompilerParser.K_STARTSTATE
		s.filename = lex.filename
		s.line = lex.line
		s.column = lex.column

		stack.append(s)

		/*
		 *	Now repeat forever:
		 */

		a = lex.lex()
		while true {
			s = stack.last!

			/*
			 *	Determine if this is the end state. If so, then we immediately
			 *	quit. We assume the user has set the production rule at the
			 *	top, so we can simply drop the stack
			 */

			if s.state == CompilerParser.K_ACCEPTSTATE {
				stack.removeAll()
				return success
			}

			/*
			 *	Now determine the action and shift, reduce or handle error as
			 *	appropriate
			 */

			var action = actionForState(s.state, token: a)
			var foundError = false

			if action == Int.max {
				/*
				 *	Handle error. First, note we have an error, and note the
				 *	symbol on which our error took place.
				 */

				success = false
				errorFileName = lex.filename
				errorLine = lex.line
				errorColumn = lex.column
				hasError = true

				/*
				 *	First, scan backwards from the current state, looking for one
				 *	which has an 'error' symbol.
				 */

				var ix = stack.count
				while (ix > 0) && !foundError {
					ix -= 1
					let si = stack[ix]
					action = actionForState(si.state, token: CompilerParser.K_ERRORTOKEN)
					if (action >= 0) && (action != Int.max) {

						/*
						 *	Encountered error state. If the user has defined an
						 *	error token, we ultimately will want to (a) unwind
						 *	the stack until we find a state which handles the
						 *	error transition. We then .
						 */

						if ix+1 < stack.count {
							stack.removeSubrange(ix+1..<stack.count)
						}

						/*
						 *	At this point we perform a shift to our new error
						 *	state.
						 */

						var s = CompilerParser.Stack()
						s.state = UInt16(action)
						s.value = lex.value

						s.filename = lex.filename
						s.line = lex.line
						s.column = lex.column

						stack.append(s)

						/*
						 *	Second, we start pulling symbols until we find a symbol
						 *	that shifts, or until we hit the end of file symbol.
						 *	This becomes our current token for parsing
						 */

						while (true) {
							a = lex.lex()
							action = actionForState(s.state, token: a)
							if (action >= 0) && (action != Int.max) {
								/*
								 *	Valid shift. This becomes our current token,
								 *	and we resume processing.
								 */

								foundError = true
								break
							} else if (a == CompilerParser.K_EOFTOKEN) || (a == -1) {
								/*
								 *	We ran out of tokens. At this point all
								 *	we can do is print an error and force quit
								 */

								error(code: CompilerParser.ERROR_SYNTAX)
								stack.removeAll()
								return false
							}
						}
					}
				}
				if foundError {
					continue
				}

				/*
				 *	If we reach this point, there is no error we can recover to.
				 *	So figure this out on our own.
				 *
				 *	First, we see if the state we're in has a limited number of
				 *	choices. For example, in C, the 'for' keyword will always be
				 *	followed by a '(' token, so we can offer to automatically
				 *	insert that token.
				 */

				let actionMin: Int = Int(CompilerParser.ActionI[Int(s.state)])
				let actionMax: Int = Int(CompilerParser.ActionI[Int(s.state) + 1])
				var actionVal: Int = actionMin
				var actionState: Int16 = -1

				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == -1 {
						if act >= 0 {
							actionState = act;
							actionVal = ix
						}
					} else {
						actionState = -1
						break
					}
				}

				if actionState != -1 {
					/*
					 *	We can accomplish this transition with one token. Print
					 *	an error, and do a shift on the state with an empty value.
					 */

					let tokenStr = tokenToString(CompilerParser.ActionJ[actionVal])
					error(code: CompilerParser.ERROR_MISSINGTOKEN, data: ["token": tokenStr as AnyObject])


					/*
					 *	Perform a shift but do not pull a new token
					 */

					let top = stack.last!

					var s = CompilerParser.Stack()

					s.state = UInt16(actionState)
					s.value = lex.value

					s.filename = top.filename
					s.line = top.line
					s.column = top.column

					stack.append(s)
					continue
				}

				/*
				 *	See if we have a limited choice in reductions. If this can
				 *	only reduce to a single state, try that reduction.
				 */

				actionState = 0
				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == 0 {
						if (act < 0) && (actionState != act) {
							actionState = act;
						}
					} else {
						actionState = 0
						break
					}
				}

				if actionState != 0 {
					/*
					 *	We have one possible reduction. Try that. Note that this
					 *	will trigger a syntax error since we're reducing down
					 *	without the follow token. My hope is that the state we
					 *	transition to has a limited set of next tokens to follow.
					 */

					_ = reduce(action: Int16(action))
					continue;
				}

				/*
				 *	If we have a limited number of tokens which can follow,
				 *	print a list of them. Then shift by the first one we
				 *	find. We don't do this if the number of shifts is greater
				 *	than five.
				 */

				if actionMax - actionMin <= 5 {
					var list: [String] = []
					for ix in actionMin..<actionMax {
						list.append(tokenToString(CompilerParser.ActionJ[ix]))
					}

					error(code: CompilerParser.ERROR_MISSINGTOKENS, data: ["tokens": list as AnyObject])

					/*
					 *	Now we artificially insert the first of the list of
					 *	tokens as our action and continue.
					 */

					a = Int(CompilerParser.ActionJ[actionMin])
					continue;
				}

				/*
				 *	If we get here, things just went too far south. So we
				 *	skip a token, print syntax error and move on
				 */

				error(code:CompilerParser.ERROR_SYNTAX)
				a = lex.lex()
				if a == -1 {
					return false
				}

			} else if action >= 0 {
				/*
				 *	Shift operation.
				 */

				// Shift
				var s = CompilerParser.Stack()

				s.state = UInt16(action)
				s.value = lex.value

				s.filename = lex.filename
				s.line = lex.line
				s.column = lex.column

				stack.append(s)

				// Advance to next token.
				a = lex.lex()

				// Decrement our error count. If this is non-zero we're in an
				// error state, and we don't pass spurrous errors upwards
				if errorCount > 0 {
					errorCount -= 1
				}
			} else {
				/*
				 *	Reduce action. (Reduce is < 0, and the production to reduce
				 *	by is given below
				 */

				action = -action-1

				if !reduce(action: Int16(action)) {

					// If there is an error, this handles the error.
					// (This should not happen in practice).
					error(code:CompilerParser.ERROR_SYNTAX)

					// Advance to next token.
					a = lex.lex()
				}
			}
		}
	}

}
