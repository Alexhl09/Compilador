//  CompilerParser

#if os(macOS)
import Cocoa
#else
import UIKit
#endif


    extension CompilerParser : SemanticErrorDelegate {}


protocol CompilerParserError {
	func error(parser: CompilerParser, line: Int, column: Int, filename: String?, errorCode: Int, data: [String: AnyObject]?)
}

class CompilerParser {
	/*
	 *	Yacc Constants
	 */

	public static let AND                                           = 0x00110002
	public static let ASSIGN                                        = 0x00110003
	public static let BOOLEAN                                       = 0x00110004
	public static let CHAR                                          = 0x00110005
	public static let COLON                                         = 0x00110006
	public static let COMMA                                         = 0x00110007
	public static let CONST                                         = 0x00110008
	public static let CPTRG                                         = 0x00110009
	public static let CTEC                                          = 0x0011000a
	public static let CTEF                                          = 0x0011000b
	public static let CTEI                                          = 0x0011000c
	public static let CTES                                          = 0x0011000d
	public static let DIF                                           = 0x0011000e
	public static let DIVIDE                                        = 0x0011000f
	public static let DO                                            = 0x00110010
	public static let DOT                                           = 0x00110011
	public static let DOUBLE                                        = 0x00110012
	public static let ELSE                                          = 0x00110013
	public static let EQ                                            = 0x00110014
	public static let F                                             = 0x00110015
	public static let FLOAT                                         = 0x00110016
	public static let FOR                                           = 0x00110017
	public static let FUNC                                          = 0x00110018
	public static let FUNCTION                                      = 0x00110019
	public static let GE                                            = 0x0011001a
	public static let GT                                            = 0x0011001b
	public static let ID                                            = 0x0011001c
	public static let IF                                            = 0x0011001d
	public static let INCPTRG                                       = 0x0011001e
	public static let INPUT                                         = 0x0011001f
	public static let INT                                           = 0x00110020
	public static let INTEGERCLASS                                  = 0x00110021
	public static let LBRACE                                        = 0x00110022
	public static let LBRACK                                        = 0x00110023
	public static let LE                                            = 0x00110024
	public static let LPAREN                                        = 0x00110025
	public static let LSBRAKE                                       = 0x00110026
	public static let LT                                            = 0x00110027
	public static let MAIN                                          = 0x00110028
	public static let MINUS                                         = 0x00110029
	public static let NEQ                                           = 0x0011002a
	public static let NEW                                           = 0x0011002b
	public static let NLL                                           = 0x0011002c
	public static let NOT                                           = 0x0011002d
	public static let NUMBER                                        = 0x0011002e
	public static let OF                                            = 0x0011002f
	public static let OR                                            = 0x00110030
	public static let PGR                                           = 0x00110031
	public static let PLUS                                          = 0x00110032
	public static let PNT                                           = 0x00110033
	public static let PRINT                                         = 0x00110034
	public static let QM                                            = 0x00110035
	public static let RBRACE                                        = 0x00110036
	public static let RPAREN                                        = 0x00110037
	public static let RSBRAKE                                       = 0x00110038
	public static let RTN                                           = 0x00110039
	public static let SEMICOLON                                     = 0x0011003a
	public static let STR                                           = 0x0011003b
	public static let STRINGCLASS                                   = 0x0011003c
	public static let T                                             = 0x0011003d
	public static let THEN                                          = 0x0011003e
	public static let TIMES                                         = 0x0011003f
	public static let TYPE                                          = 0x00110040
	public static let UMINUS                                        = 0x00110041
	public static let VAR                                           = 0x00110042
	public static let VOID                                          = 0x00110043
	public static let WHILE                                         = 0x00110044
	public static let arrayA                                        = 0x00110045

	// Various constants
	private static let K_ACCEPTSTATE: UInt16 = 1282        // Final accept state
	private static let K_EOFTOKEN: Int       = 0x110000     // EOF token ID
	private static let K_ERRORTOKEN: Int     = 0x110001     // Error token ID
	private static let K_FIRSTTOKEN: Int     = 0x110002     // Error token ID
	private static let K_MAXSYMBOL:Int       = 0x110090     // Max ID for all symbols
	private static let K_STARTSTATE: UInt16  = 0        // Start state is always 0

	/*  TokenArray
	 *
	 *      Array of non-Unicode token values for error reporting
	 */

	private static let TokenArray: [String] = [
		"AND",
		"ASSIGN",
		"BOOLEAN",
		"CHAR",
		"COLON",
		"COMMA",
		"CONST",
		"CPTRG",
		"CTEC",
		"CTEF",
		"CTEI",
		"CTES",
		"DIF",
		"DIVIDE",
		"DO",
		"DOT",
		"DOUBLE",
		"ELSE",
		"EQ",
		"F",
		"FLOAT",
		"FOR",
		"FUNC",
		"FUNCTION",
		"GE",
		"GT",
		"ID",
		"IF",
		"INCPTRG",
		"INPUT",
		"INT",
		"INTEGERCLASS",
		"LBRACE",
		"LBRACK",
		"LE",
		"LPAREN",
		"LSBRAKE",
		"LT",
		"MAIN",
		"MINUS",
		"NEQ",
		"NEW",
		"NLL",
		"NOT",
		"NUMBER",
		"OF",
		"OR",
		"PGR",
		"PLUS",
		"PNT",
		"PRINT",
		"QM",
		"RBRACE",
		"RPAREN",
		"RSBRAKE",
		"RTN",
		"SEMICOLON",
		"STR",
		"STRINGCLASS",
		"T",
		"THEN",
		"TIMES",
		"TYPE",
		"UMINUS",
		"VAR",
		"VOID",
		"WHILE",
		"arrayA"
	]

	/*  RuleLength
	 *
	 *      The number of tokens a reduce action removes from the stack
	 */

	private static let RuleLength: [UInt8] = [
		 1,  1,  2,  3,  1,  3,  1,  2, 
		 5,  8,  3,  3,  4,  1,  1,  1, 
		 1,  2,  8,  6,  1,  1,  1,  5, 
		 1,  1,  2,  1,  1,  1,  1,  1, 
		 2,  4,  4,  5,  3,  1,  2,  2, 
		 2,  2,  1,  1,  1,  1,  2,  3, 
		 1,  1,  2,  2,  3,  2,  6,  2, 
		 1,  4,  1,  3,  1,  1,  1,  3, 
		 1,  1,  1,  1,  1,  2,  1,  1, 
		 3,  1,  2,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  8,  5,  1,  1, 
		 2,  2,  8,  7,  1,  6,  5,  1, 
		 3,  1,  2,  3,  4,  1,  3,  2, 
		 4,  4,  3,  1,  3,  1,  3,  1, 
		 1,  1,  1,  2,  4,  5,  3,  3, 
		 4,  1,  1,  6,  5,  5,  4,  2, 
		 1,  1,  1,  2,  1,  1,  1,  1, 
		 3,  1,  1,  3,  5,  1,  1,  1, 
		 1,  1,  1,  1,  1,  1,  1,  1, 
		 1,  1,  1,  1,  1,  2,  1,  3, 
		 4,  4,  4,  5,  6,  4,  6,  1, 
		 4,  5,  3,  6,  3,  4
	]

	/*  RuleProduction
	 *
	 *      The prodution ID we reduce to
	 */

	private static let RuleProduction: [UInt32] = [
		0x110046, 0x110047, 0x110047, 0x110048, 0x110048, 0x110049, 0x110049, 0x11004a, 
		0x11004a, 0x11004a, 0x11004a, 0x11004b, 0x11004b, 0x11004c, 0x11004c, 0x11004d, 
		0x11004d, 0x11004e, 0x11004f, 0x11004f, 0x110050, 0x110051, 0x110052, 0x110053, 
		0x110054, 0x110055, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 0x110056, 
		0x110057, 0x110057, 0x110058, 0x110059, 0x11005a, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 0x11005b, 
		0x11005b, 0x11005c, 0x11005c, 0x11005d, 0x11005d, 0x11005d, 0x11005e, 0x11005f, 
		0x110060, 0x110061, 0x110062, 0x110062, 0x110063, 0x110064, 0x110064, 0x110064, 
		0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 0x110065, 
		0x110065, 0x110065, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 0x110066, 
		0x110066, 0x110066, 0x110066, 0x110067, 0x110067, 0x110067, 0x110067, 0x110067, 
		0x110067, 0x110067, 0x110067, 0x110067, 0x110068, 0x110068, 0x110069, 0x110069, 
		0x110069, 0x110069, 0x11006a, 0x11006a, 0x11006a, 0x11006b, 0x11006b, 0x11006c, 
		0x11006c, 0x11006d, 0x11006e, 0x11006e, 0x11006f, 0x110070, 0x110070, 0x110070, 
		0x110070, 0x110071, 0x110071, 0x110072, 0x110072, 0x110073, 0x110073, 0x110074, 
		0x110074, 0x110075, 0x110075, 0x110076, 0x110076, 0x110076, 0x110076, 0x110077, 
		0x110077, 0x110078, 0x110079, 0x11007a, 0x11007a, 0x11007a, 0x11007a, 0x11007b, 
		0x11007b, 0x11007c, 0x11007c, 0x11007d, 0x11007e, 0x11007f, 0x110080, 0x110081, 
		0x110081, 0x110081, 0x110082, 0x110082, 0x110083, 0x110084, 0x110084, 0x110085, 
		0x110086, 0x110087, 0x110087, 0x110088, 0x110088, 0x110088, 0x110089, 0x110089, 
		0x110089, 0x110089, 0x110089, 0x110089, 0x110089, 0x11008a, 0x11008b, 0x11008c, 
		0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 0x11008c, 
		0x11008d, 0x11008d, 0x11008e, 0x11008e, 0x11008f, 0x11008f
	]

	/*
	 *  The following tables are compressed using CSR format.
	 *  See https://en.wikipedia.org/wiki/Sparse_matrix
	 */

	/*  ActionI, J, A
	 *
	 *      Compressed action index table.
	 */

	private static let ActionI:[UInt32] = [
		     0,     15,     18,     19,     20,     30,     31,     32, 
		    40,     42,     43,     45,     46,     47,     49,     50, 
		    51,     66,     67,     70,     73,     74,     77,     78, 
		    79,     81,     82,     97,    100,    101,    111,    112, 
		   122,    136,    150,    164,    178,    192,    208,    217, 
		   226,    240,    254,    268,    269,    283,    286,    300, 
		   312,    316,    328,    332,    346,    360,    374,    388, 
		   402,    416,    430,    431,    447,    448,    457,    466, 
		   480,    481,    495,    496,    497,    511,    512,    513, 
		   514,    515,    516,    517,    518,    519,    533,    534, 
		   535,    538,    552,    564,    568,    580,    584,    585, 
		   599,    613,    614,    630,    639,    640,    644,    648, 
		   652,    656,    657,    661,    662,    666,    670,    684, 
		   688,    689,    693,    707,    711,    715,    719,    728, 
		   737,    746,    750,    764,    768,    772,    781,    790, 
		   799,    811,    820,    829,    838,    850,    877,    882, 
		   883,    884,    911,    915,    943,    953,    964,    975, 
		   986,    997,   1008,   1009,   1024,   1025,   1034,   1045, 
		  1046,   1056,   1067,   1068,   1069,   1080,   1108,   1136, 
		  1164,   1165,   1193,   1194,   1222,   1250,   1251,   1252, 
		  1263,   1264,   1265,   1277,   1286,   1287,   1296,   1298, 
		  1299,   1301,   1329,   1330,   1331,   1359,   1360,   1362, 
		  1363,   1391,   1392,   1393,   1421,   1422,   1424,   1425, 
		  1453,   1467,   1468,   1482,   1483,   1499,   1508,   1509, 
		  1511,   1513,   1515,   1517,   1518,   1520,   1521,   1523, 
		  1525,   1539,   1541,   1542,   1546,   1560,   1564,   1566, 
		  1568,   1570,   1597,   1600,   1601,   1628,   1630,   1631, 
		  1633,   1634,   1637,   1640,   1650,   1660,   1674,   1688, 
		  1702,   1716,   1730,   1746,   1755,   1764,   1778,   1792, 
		  1806,   1807,   1821,   1824,   1838,   1850,   1854,   1866, 
		  1870,   1884,   1885,   1899,   1900,   1916,   1925,   1926, 
		  1930,   1934,   1938,   1942,   1943,   1947,   1948,   1952, 
		  1956,   1970,   1974,   1975,   1979,   1993,   1997,   2001, 
		  2005,   2014,   2018,   2032,   2036,   2040,   2049,   2061, 
		  2070,   2082,   2109,   2114,   2115,   2142,   2146,   2147, 
		  2151,   2152,   2157,   2162,   2172,   2173,   2174,   2175, 
		  2179,   2189,   2204,   2219,   2234,   2249,   2264,   2281, 
		  2290,   2299,   2314,   2329,   2344,   2345,   2347,   2349, 
		  2364,   2368,   2383,   2396,   2401,   2414,   2419,   2433, 
		  2434,   2448,   2449,   2466,   2475,   2476,   2481,   2486, 
		  2491,   2496,   2497,   2502,   2503,   2508,   2513,   2528, 
		  2533,   2534,   2539,   2554,   2559,   2564,   2569,   2578, 
		  2583,   2598,   2603,   2608,   2617,   2630,   2639,   2652, 
		  2679,   2685,   2686,   2713,   2718,   2719,   2724,   2725, 
		  2731,   2737,   2747,   2748,   2749,   2754,   2764,   2765, 
		  2770,   2773,   2776,   2779,   2782,   2785,   2790,   2799, 
		  2802,   2805,   2806,   2808,   2811,   2814,   2817,   2826, 
		  2828,   2837,   2838,   2843,   2848,   2853,   2858,   2863, 
		  2868,   2875,   2884,   2889,   2894,   2899,   2904,   2909, 
		  2912,   2915,   2918,   2927,   2930,   2939,   2942,   2945, 
		  2950,   2961,   2971,   2976,   2990,   3004,   3018,   3032, 
		  3046,   3062,   3071,   3080,   3094,   3108,   3122,   3123, 
		  3137,   3140,   3154,   3166,   3170,   3182,   3186,   3200, 
		  3201,   3215,   3216,   3232,   3241,   3242,   3246,   3250, 
		  3254,   3258,   3259,   3263,   3264,   3268,   3272,   3286, 
		  3290,   3291,   3295,   3309,   3313,   3317,   3321,   3330, 
		  3334,   3348,   3352,   3356,   3365,   3377,   3386,   3398, 
		  3425,   3430,   3431,   3458,   3462,   3463,   3467,   3468, 
		  3473,   3478,   3488,   3489,   3490,   3494,   3504,   3505, 
		  3509,   3510,   3514,   3525,   3535,   3549,   3553,   3563, 
		  3567,   3581,   3585,   3586,   3601,   3611,   3625,   3629, 
		  3630,   3645,   3655,   3659,   3660,   3675,   3689,   3691, 
		  3692,   3706,   3716,   3717,   3730,   3743,   3753,   3755, 
		  3756,   3757,   3766,   3767,   3776,   3777,   3778,   3780, 
		  3789,   3790,   3791,   3800,   3801,   3803,   3812,   3813, 
		  3814,   3823,   3824,   3851,   3852,   3853,   3855,   3856, 
		  3857,   3861,   3871,   3872,   3873,   3883,   3884,   3885, 
		  3886,   3888,   3898,   3899,   3900,   3901,   3903,   3913, 
		  3914,   3915,   3917,   3918,   3921,   3930,   3933,   3934, 
		  3935,   3936,   3940,   3944,   3945,   3946,   3955,   3956, 
		  3958,   3967,   3968,   3977,   3986,   3987,   3990,   3992, 
		  3993,   3994,   4021,   4022,   4023,   4024,   4025,   4026, 
		  4035,   4037,   4039,   4041,   4043,   4045,   4049,   4058, 
		  4060,   4062,   4064,   4066,   4068,   4077,   4086,   4095, 
		  4096,   4097,   4098,   4099,   4100,   4103,   4112,   4113, 
		  4114,   4115,   4116,   4117,   4120,   4121,   4132,   4142, 
		  4143,   4144,   4146,   4147,   4148,   4149,   4150,   4153, 
		  4155,   4166,   4176,   4178,   4179,   4182,   4184,   4186, 
		  4187,   4189,   4190,   4191,   4192,   4193,   4194,   4195, 
		  4196,   4197,   4198,   4199,   4200,   4201,   4202,   4204, 
		  4205,   4206,   4207,   4216,   4225,   4226,   4235,   4244, 
		  4253,   4262,   4271,   4280,   4288,   4296,   4304,   4312, 
		  4320,   4330,   4339,   4347,   4355,   4363,   4371,   4379, 
		  4385,   4391,   4400,   4406,   4415,   4421,   4424,   4432, 
		  4443,   4453,   4461,   4462,   4471,   4479,   4487,   4488, 
		  4496,   4505,   4514,   4517,   4523,   4528,   4531,   4545, 
		  4546,   4547,   4561,   4566,   4567,   4572,   4583,   4593, 
		  4596,   4597,   4601,   4604,   4607,   4608,   4611,   4622, 
		  4632,   4647,   4652,   4662,   4667,   4682,   4687,   4688, 
		  4704,   4714,   4729,   4734,   4735,   4751,   4761,   4766, 
		  4767,   4783,   4798,   4799,   4814,   4827,   4836,   4837, 
		  4838,   4839,   4844,   4845,   4846,   4847,   4848,   4853, 
		  4862,   4871,   4880,   4889,   4898,   4907,   4918,   4927, 
		  4936,   4945,   4954,   4963,   4972,   4979,   4986,   4995, 
		  5002,   5011,   5018,   5021,   5030,   5041,   5051,   5060, 
		  5061,   5071,   5080,   5089,   5090,   5099,   5108,   5112, 
		  5122,   5123,   5127,   5130,   5145,   5146,   5148,   5163, 
		  5164,   5168,   5179,   5189,   5203,   5207,   5217,   5221, 
		  5235,   5239,   5240,   5255,   5265,   5279,   5283,   5284, 
		  5299,   5309,   5313,   5314,   5329,   5343,   5344,   5358, 
		  5371,   5380,   5381,   5382,   5383,   5387,   5388,   5389, 
		  5390,   5391,   5395,   5404,   5412,   5420,   5428,   5436, 
		  5444,   5454,   5463,   5471,   5479,   5487,   5495,   5503, 
		  5509,   5515,   5524,   5530,   5539,   5545,   5548,   5556, 
		  5567,   5577,   5585,   5586,   5595,   5603,   5611,   5612, 
		  5620,   5629,   5632,   5633,   5635,   5638,   5652,   5653, 
		  5654,   5668,   5678,   5679,   5681,   5682,   5684,   5695, 
		  5705,   5719,   5721,   5731,   5733,   5747,   5749,   5750, 
		  5765,   5775,   5789,   5791,   5792,   5807,   5817,   5819, 
		  5820,   5835,   5849,   5850,   5864,   5877,   5886,   5887, 
		  5888,   5889,   5891,   5892,   5893,   5894,   5895,   5897, 
		  5906,   5915,   5928,   5939,   5948,   5959,   5969,   5980, 
		  5981,   5993,   6004,   6015,   6016,   6027,   6032,   6037, 
		  6042,   6047,   6052,   6059,   6068,   6073,   6078,   6083, 
		  6088,   6093,   6096,   6099,   6108,   6111,   6120,   6123, 
		  6126,   6131,   6142,   6152,   6157,   6158,   6164,   6169, 
		  6174,   6175,   6180,   6208,   6236,   6264,   6292,   6301, 
		  6310,   6338,   6342,   6343,   6370,   6399,   6400,   6427, 
		  6455,   6456,   6484,   6485,   6514,   6543,   6553,   6554, 
		  6555,   6583,   6611,   6614,   6642,   6643,   6645,   6673, 
		  6674,   6702,   6730,   6731,   6759,   6769,   6770,   6771, 
		  6774,   6785,   6786,   6789,   6791,   6792,   6793,   6796, 
		  6806,   6808,   6809,   6812,   6814,   6816,   6827,   6837, 
		  6848,   6849,   6850,   6851,   6863,   6873,   6874,   6875, 
		  6887,   6888,   6900,   6901,   6913,   6926,   6935,   6936, 
		  6937,   6938,   6966,   6967,   6968,   6969,   6970,   6998, 
		  6999,   7001,   7002,   7003,   7004,   7032,   7060,   7061, 
		  7066,   7071,   7081,   7082,   7083,   7087,   7097,   7098, 
		  7102,   7103,   7107,   7117,   7131,   7135,   7145,   7149, 
		  7163,   7167,   7168,   7183,   7193,   7197,   7198,   7213, 
		  7217,   7230,   7239,   7240,   7241,   7242,   7246,   7247, 
		  7248,   7249,   7250,   7254,   7268,   7269,   7283,   7284, 
		  7300,   7309,   7310,   7314,   7318,   7322,   7326,   7327, 
		  7331,   7332,   7336,   7340,   7354,   7358,   7359,   7363, 
		  7377,   7381,   7385,   7389,   7398,   7414,   7428,   7432, 
		  7446,   7450,   7459,   7471,   7480,   7492,   7503,   7513, 
		  7527,   7528,   7543,   7557,   7571,   7572,   7586,   7590, 
		  7594,   7621,   7626,   7627,   7654,   7658,   7659,   7663, 
		  7664,   7669,   7674,   7684,   7685,   7686,   7690,   7700, 
		  7701,   7705,   7706,   7710,   7720,   7734,   7738,   7748, 
		  7752,   7766,   7770,   7771,   7786,   7796,   7800,   7801, 
		  7816,   7820,   7833,   7842,   7843,   7844,   7845,   7849, 
		  7850,   7851,   7852,   7853,   7857,   7866,   7874,   7882, 
		  7890,   7898,   7906,   7916,   7925,   7933,   7941,   7949, 
		  7957,   7965,   7971,   7977,   7986,   7992,   8001,   8007, 
		  8010,   8018,   8029,   8039,   8047,   8048,   8057,   8065, 
		  8073,   8074,   8082,   8091,   8094,   8095,   8096,   8123, 
		  8125,   8126,   8153,   8154,   8155,   8156,   8157,   8159, 
		  8161,   8171,   8172,   8173,   8174,   8184,   8185,   8186, 
		  8189,   8203,   8204,   8205,   8215,   8216,   8217,   8227, 
		  8241,   8242,   8252,   8253,   8267,   8268,   8269,   8284, 
		  8294,   8295,   8296,   8311,   8312,   8325,   8334,   8335, 
		  8336,   8337,   8338,   8339,   8340,   8341,   8342,   8343, 
		  8352,   8360,   8368,   8376,   8384,   8392,   8402,   8411, 
		  8419,   8427,   8435,   8443,   8451,   8457,   8463,   8472, 
		  8478,   8487,   8493,   8496,   8504,   8515,   8525,   8533, 
		  8534,   8543,   8551,   8559,   8560,   8568,   8571,   8585, 
		  8586,   8587,   8601,   8616,   8617,   8619,   8634,   8635, 
		  8636,   8651,   8652,   8653,   8654,   8681,   8682,   8683, 
		  8684,   8685,   8686,   8687,   8688,   8689,   8690,   8691, 
		  8692,   8693,   8694,   8695,   8696,   8697,   8698,   8699, 
		  8700,   8701,   8704,   8719,   8720,   8722,   8737,   8738, 
		  8753,   8768,   8770,   8772,   8774,   8776,   8777,   8779, 
		  8781,   8783,   8784,   8785,   8787,   8788,   8789,   8790, 
		  8791,   8792,   8794,   8795,   8803,   8811,   8812,   8813, 
		  8814,   8817,   8824,   8825,   8827,   8834,   8835,   8836, 
		  8839,   8841,   8842,   8843,   8844,   8871,   8898,   8908, 
		  8909,   8919,   8920,   8921,   8948,   8975,   9002,   9003, 
		  9030,   9031,   9058,   9085,   9086,   9087,   9088,   9089, 
		  9101,   9102,   9104,   9105,   9107,   9134,   9135,   9136, 
		  9163,   9164,   9166,   9193,   9194,   9195,   9222,   9249, 
		  9277,   9278,   9305,   9332,   9359,   9386,   9413,   9416, 
		  9419,   9420,   9447,   9475,   9476,   9503,   9530,   9531, 
		  9558,   9559,   9587,   9615,   9625,   9626,   9627,   9654, 
		  9681,   9684,   9711,   9712,   9714,   9741,   9742,   9769, 
		  9796,   9797,   9824,   9837,   9846,   9847,   9848,   9849, 
		  9876,   9877,   9878,   9879,   9880,   9907,   9908,   9910, 
		  9911,   9912,   9913,   9940,   9967,   9994,   9995,   9998, 
		 10006,  10007,  10008,  10009,  10036,  10039,  10040,  10043, 
		 10046,  10047,  10049,  10050,  10051,  10052,  10067,  10082
	]

	private static let ActionJ:[UInt32] = [
		0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 
		0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110001, 
		0x110018, 0x110028, 0x110042, 0x110042, 0x110004, 0x110005, 0x110012, 0x110016, 
		0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 0x110043, 0x110042, 0x110042, 
		0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x11003b, 0x110043, 
		0x11001c, 0x110042, 0x110042, 0x11001c, 0x110042, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110028, 0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 
		0x110028, 0x110000, 0x110001, 0x110018, 0x110028, 0x110025, 0x110042, 0x11001c, 
		0x110042, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x110001, 0x110018, 0x110028, 0x110014, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110025, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110025, 
		0x110006, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 
		0x110006, 0x110006, 0x110025, 0x110006, 0x110022, 0x110006, 0x110006, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 0x110036, 0x110002, 
		0x110006, 0x110030, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 
		0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 
		0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110025, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110022, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110036, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x11003a, 0x110022, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110004, 
		0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 
		0x110043, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x110025, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x11001c, 0x110024, 0x110025, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110042, 
		0x110025, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110025, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x11001c, 0x11003a, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110036, 
		0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x110035, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x110035, 0x11003a, 0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 
		0x110026, 0x11003a, 0x11000c, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110038, 0x110014, 0x110026, 
		0x110014, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 
		0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x110035, 0x11003a, 0x110035, 
		0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110025, 0x110035, 0x11003a, 
		0x110022, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x110030, 0x110035, 0x11003a, 0x110035, 0x11003a, 0x110035, 0x11003a, 
		0x110035, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110013, 0x110035, 0x11003a, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110035, 0x11003a, 0x110036, 0x110035, 
		0x11003a, 0x110036, 0x110013, 0x110035, 0x11003a, 0x110013, 0x110035, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 
		0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110025, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110030, 
		0x110035, 0x110037, 0x110036, 0x110002, 0x110030, 0x110035, 0x110037, 0x110036, 
		0x110002, 0x110013, 0x110030, 0x110035, 0x110037, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110037, 0x110007, 0x110037, 0x110007, 0x110037, 0x110002, 0x110007, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110037, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 
		0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110025, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110025, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x110025, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110022, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110037, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 
		0x110007, 0x110013, 0x110030, 0x110035, 0x110037, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x110036, 0x110002, 0x110007, 0x110013, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x110013, 0x110030, 0x110035, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 0x110007, 0x110030, 
		0x110035, 0x110037, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 
		0x11003a, 0x110007, 0x110025, 0x110026, 0x110036, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110007, 
		0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110036, 0x110036, 0x11003a, 
		0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110036, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110036, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110025, 0x110026, 0x110029, 
		0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 0x110037, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 
		0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x110029, 0x110032, 0x110037, 
		0x110029, 0x110032, 0x110037, 0x110007, 0x110036, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 
		0x110032, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 0x110037, 0x110029, 0x110032, 
		0x110037, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x110030, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 
		0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 
		0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 
		0x11001d, 0x110022, 0x110025, 0x11002c, 0x110034, 0x11003d, 0x110044, 0x110025, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110025, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110025, 0x110002, 0x110030, 0x110035, 0x110038, 0x110022, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x110036, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110038, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 0x110013, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x110013, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110002, 0x110030, 0x110035, 0x110038, 0x110036, 0x110002, 0x110030, 
		0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 0x110038, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x110038, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110002, 0x110030, 0x110035, 0x110038, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110030, 0x110035, 0x110038, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110007, 0x110037, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 
		0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x110004, 
		0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003b, 0x11003c, 
		0x110043, 0x11001c, 0x110042, 0x11001c, 0x11001c, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110042, 0x11001c, 0x110042, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11001c, 0x110026, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110036, 0x110036, 0x110014, 0x110026, 0x110037, 
		0x110022, 0x110002, 0x110030, 0x110035, 0x110038, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110014, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110037, 0x110038, 0x110014, 0x110026, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110014, 0x110037, 0x110038, 0x110014, 0x110026, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110038, 0x110014, 0x110026, 0x11003a, 0x110002, 0x110030, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110030, 0x11003a, 0x11001c, 0x110037, 0x110022, 
		0x110002, 0x110030, 0x110035, 0x110038, 0x110006, 0x110014, 0x110026, 0x11003a, 
		0x11001c, 0x11000c, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11003a, 0x110014, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11003a, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110038, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 
		0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110036, 0x110036, 
		0x110036, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 
		0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110025, 
		0x110026, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110009, 0x11001e, 0x110009, 0x11001e, 0x110009, 0x11001e, 
		0x110009, 0x11001e, 0x110009, 0x11001e, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110037, 0x110037, 0x110037, 0x110037, 0x110025, 0x110026, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 0x110029, 0x110032, 0x110037, 
		0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110038, 
		0x110026, 0x110037, 0x110037, 0x110037, 0x110037, 0x110037, 0x110029, 0x110032, 
		0x110037, 0x110009, 0x11001e, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110009, 0x11001e, 0x110038, 0x110009, 0x11001e, 0x110026, 0x110009, 0x11001e, 
		0x110009, 0x11001e, 0x110037, 0x110009, 0x11001e, 0x11001c, 0x11001c, 0x11001c, 
		0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 0x11001c, 
		0x11001c, 0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110014, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x110002, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110038, 0x11003f, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110038, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x110029, 0x110032, 0x110037, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110038, 0x110002, 0x11000f, 
		0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 0x110037, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110038, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110030, 0x110038, 0x11000f, 0x110026, 0x110029, 
		0x110032, 0x110037, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 
		0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x110036, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110038, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110037, 0x11003f, 0x110037, 0x11000f, 
		0x110029, 0x110032, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110007, 0x110036, 0x11003a, 0x110038, 0x110007, 0x110026, 0x110036, 
		0x11003a, 0x110007, 0x110036, 0x11003a, 0x110007, 0x110036, 0x11003a, 0x110037, 
		0x110007, 0x110036, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x110030, 0x110035, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110038, 
		0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110038, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x110038, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 
		0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110007, 0x110030, 0x110035, 0x110037, 0x11003a, 0x11001c, 0x110037, 0x110022, 
		0x110002, 0x110007, 0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110025, 0x110026, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x110007, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x110002, 0x110007, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x110007, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 
		0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110038, 0x110002, 0x110007, 0x11000f, 
		0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 
		0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110007, 0x110030, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x110037, 0x110029, 
		0x110032, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110036, 0x110007, 0x110037, 0x110002, 0x110007, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110036, 0x110002, 0x110030, 0x110035, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x110035, 0x110037, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x110030, 0x110035, 0x110037, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110035, 
		0x110037, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110037, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110004, 0x110005, 
		0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 
		0x110030, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110025, 0x110026, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x11003f, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 0x110002, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x110037, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x110037, 
		0x11003f, 0x110038, 0x110002, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x110037, 0x11003f, 0x110037, 0x110002, 0x11000f, 0x110029, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110030, 0x110037, 
		0x110022, 0x110035, 0x11003a, 0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x110036, 0x110037, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x110037, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110035, 
		0x11003a, 0x110036, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110035, 0x11003a, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110035, 0x11003a, 0x110038, 0x110002, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 
		0x110022, 0x110035, 0x11003a, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110035, 
		0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x110038, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x110037, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 
		0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110025, 0x110026, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110029, 0x110032, 0x110035, 
		0x110029, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110029, 0x110032, 0x110035, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110029, 0x110032, 0x110035, 0x110029, 0x110032, 0x110037, 0x11000f, 0x110029, 
		0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110038, 0x11000f, 0x110026, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 
		0x11003f, 0x11000f, 0x110029, 0x110032, 0x110035, 0x11003f, 0x110037, 0x11000f, 
		0x110029, 0x110032, 0x110035, 0x11003f, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110036, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110014, 0x110026, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x11003a, 0x110029, 0x110032, 0x110037, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 
		0x11003f, 0x11001c, 0x110007, 0x110026, 0x110037, 0x110007, 0x110037, 0x11001c, 
		0x11003a, 0x110007, 0x110026, 0x110037, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110007, 0x110037, 
		0x110038, 0x110007, 0x110026, 0x110037, 0x110007, 0x110037, 0x110007, 0x110037, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 
		0x11003a, 0x11003a, 0x110038, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x11003a, 0x110038, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003f, 0x11003a, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110032, 0x110035, 0x11003a, 0x11003f, 0x110037, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 
		0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 
		0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x11001c, 
		0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11001c, 0x110014, 
		0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110036, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110002, 0x110013, 0x110030, 
		0x110035, 0x11003a, 0x110002, 0x110013, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110036, 0x110002, 
		0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110002, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110038, 
		0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110030, 0x110035, 0x11003a, 0x110038, 0x110002, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 0x110030, 0x110035, 
		0x11003a, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 
		0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 
		0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11003a, 0x11001c, 
		0x110037, 0x110022, 0x110002, 0x110030, 0x110035, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 
		0x11002c, 0x110034, 0x11003d, 0x110044, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x110017, 0x11001c, 0x11001d, 0x110022, 0x110025, 0x11002c, 
		0x110034, 0x11003d, 0x110044, 0x110025, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110025, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x110025, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110022, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110036, 0x110002, 
		0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110025, 0x110026, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110006, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110038, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 
		0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110037, 0x110002, 0x110006, 0x11000f, 0x110014, 
		0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x110030, 0x110035, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110006, 0x110013, 
		0x110030, 0x110035, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110036, 0x110002, 0x110006, 0x110030, 0x110035, 0x110036, 
		0x110002, 0x110006, 0x110013, 0x110030, 0x110035, 0x110002, 0x110006, 0x110013, 
		0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x110036, 0x110002, 0x110006, 0x110030, 0x110035, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 
		0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 
		0x110030, 0x110035, 0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110030, 0x110035, 
		0x110038, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 
		0x110026, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 
		0x110002, 0x110006, 0x110030, 0x110035, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x11001c, 0x110020, 0x110021, 0x11003a, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110002, 0x110006, 0x110030, 
		0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 0x110025, 0x110026, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x11000f, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110002, 0x110006, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 
		0x11002c, 0x11003d, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 
		0x11003d, 0x110002, 0x110006, 0x110029, 0x110030, 0x110032, 0x110035, 0x110029, 
		0x110032, 0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110038, 
		0x110002, 0x110006, 0x11000f, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110037, 0x110002, 0x110006, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x110030, 0x110006, 0x110006, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110006, 0x110013, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110006, 0x110036, 0x110006, 0x110036, 0x110006, 0x110013, 0x110006, 
		0x110013, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110037, 0x110022, 0x110006, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 
		0x110037, 0x110006, 0x110029, 0x110032, 0x110037, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110036, 0x110006, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110037, 
		0x110022, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 
		0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 
		0x11003f, 0x110006, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110022, 0x110025, 0x11002c, 0x11003d, 0x110006, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 
		0x110032, 0x110035, 0x11003f, 0x110006, 0x110038, 0x110002, 0x110006, 0x11000f, 
		0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 0x110027, 0x110029, 0x11002a, 
		0x110030, 0x110032, 0x110035, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110006, 0x110038, 
		0x110002, 0x110006, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110026, 
		0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003f, 0x110006, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 
		0x110022, 0x110006, 0x11003a, 0x11001c, 0x110037, 0x110022, 0x110006, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110002, 0x11000f, 0x110025, 0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x11003f, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 
		0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 
		0x110035, 0x11003a, 0x11003f, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 
		0x11003a, 0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 
		0x110002, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x110002, 
		0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x110029, 0x110032, 0x110037, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 
		0x11002c, 0x110037, 0x11003d, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110015, 
		0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x110002, 0x11000f, 0x110029, 
		0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110038, 0x110002, 0x11000f, 
		0x110026, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110002, 
		0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x110037, 
		0x110002, 0x11000f, 0x110029, 0x110030, 0x110032, 0x110035, 0x11003a, 0x11003f, 
		0x110029, 0x110032, 0x110037, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110036, 0x11003a, 0x110002, 0x11000f, 0x110014, 0x11001a, 0x11001b, 
		0x110024, 0x110027, 0x110029, 0x11002a, 0x110030, 0x110032, 0x110035, 0x11003a, 
		0x11003f, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 
		0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11001c, 0x110026, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x110037, 0x110037, 0x110022, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110000, 0x110036, 0x110000, 0x110000, 0x110028, 0x110025, 0x110037, 
		0x110022, 0x110000, 0x110025, 0x110037, 0x110022, 0x110000, 0x110000, 0x110028, 
		0x110028, 0x110025, 0x110037, 0x110022, 0x110000, 0x110014, 0x110026, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 0x11001c, 
		0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11003a, 
		0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 
		0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 
		0x110043, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x110018, 
		0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 0x110042, 0x110043, 
		0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 
		0x110025, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x11001c, 0x110026, 0x110025, 
		0x110025, 0x11001c, 0x110026, 0x110025, 0x11000c, 0x11001c, 0x110025, 0x110038, 
		0x11001c, 0x110026, 0x11001c, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 
		0x110037, 0x11003b, 0x110043, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 
		0x110037, 0x11003b, 0x110043, 0x110022, 0x110037, 0x11001c, 0x110007, 0x110026, 
		0x110037, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 0x11003b, 0x110043, 
		0x11000c, 0x110007, 0x110037, 0x110004, 0x110005, 0x110012, 0x110016, 0x110020, 
		0x11003b, 0x110043, 0x110037, 0x110038, 0x110007, 0x110026, 0x110037, 0x110007, 
		0x110037, 0x110037, 0x110022, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110004, 0x110005, 0x110012, 0x110016, 0x11001c, 0x110020, 
		0x110021, 0x11003b, 0x11003c, 0x110043, 0x110025, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 0x11003d, 0x11001c, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110025, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x11003a, 0x110036, 
		0x11003a, 0x11000f, 0x110014, 0x11001a, 0x11001b, 0x110024, 0x110027, 0x110029, 
		0x11002a, 0x110032, 0x110035, 0x11003a, 0x11003f, 0x11003a, 0x110035, 0x11003a, 
		0x110042, 0x11001c, 0x110042, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110014, 0x11003a, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x11001c, 0x110026, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110036, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110018, 0x110028, 
		0x110001, 0x110018, 0x110028, 0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110036, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110013, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110013, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110015, 0x11001c, 0x110022, 0x110025, 0x11002c, 
		0x11003d, 0x110037, 0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 
		0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 
		0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 
		0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110014, 0x110026, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 
		0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 
		0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 
		0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 
		0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x110001, 0x110004, 
		0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 
		0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 
		0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 
		0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x110001, 0x110004, 0x110005, 
		0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 
		0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 
		0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 
		0x110004, 0x110005, 0x110008, 0x110012, 0x110016, 0x11001c, 0x110020, 0x110021, 
		0x11003a, 0x11003b, 0x11003c, 0x110042, 0x110043, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110015, 0x11001c, 0x110025, 0x11002c, 0x11003d, 0x11001c, 0x110037, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x11003a, 0x11001c, 0x110037, 0x110022, 
		0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 
		0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 
		0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 
		0x110042, 0x110043, 0x110044, 0x11001c, 0x110014, 0x110026, 0x11003a, 0x110014, 
		0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 
		0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 
		0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 
		0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 0x11000d, 0x110012, 
		0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 0x110020, 0x110021, 
		0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 0x11003d, 0x110042, 
		0x110043, 0x110044, 0x110036, 0x110001, 0x110018, 0x110028, 0x110004, 0x110005, 
		0x110012, 0x110016, 0x110020, 0x110037, 0x11003b, 0x110043, 0x110022, 0x110037, 
		0x110022, 0x110001, 0x110004, 0x110005, 0x110008, 0x11000a, 0x11000b, 0x11000c, 
		0x11000d, 0x110012, 0x110015, 0x110016, 0x110017, 0x11001c, 0x11001d, 0x11001f, 
		0x110020, 0x110021, 0x110025, 0x11002c, 0x110034, 0x110039, 0x11003b, 0x11003c, 
		0x11003d, 0x110042, 0x110043, 0x110044, 0x110001, 0x110018, 0x110028, 0x110036, 
		0x110001, 0x110018, 0x110028, 0x110001, 0x110018, 0x110028, 0x11001c, 0x110014, 
		0x110026, 0x11003a, 0x110014, 0x11003a, 0x110001, 0x110004, 0x110005, 0x110008, 
		0x110012, 0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 
		0x11003c, 0x110042, 0x110043, 0x110001, 0x110004, 0x110005, 0x110008, 0x110012, 
		0x110016, 0x110018, 0x11001c, 0x110020, 0x110021, 0x110028, 0x11003b, 0x11003c, 
		0x110042, 0x110043
	]

	// Note: < 0 -> reduce (rule = -a-1), >= 0 -> shift (state).
	private static let ActionA:[Int16] = [
		     1,      2,      3,      4,      5,      6,      7,      8, 
		     9,     10,     11,     12,     13,     14,     15,   -101, 
		  -101,   -101,   -163,   -162,    625,    626,    627,    628, 
		   629,    630,    631,    632,    633,    634,   -161,   -160, 
		  1297,   1298,   1299,   1300,   1301,   1302,   1303,   1304, 
		  -158,   -158,   -159,   -156,   -156,   -141,   -164,   -157, 
		  -157,   1289,   -165,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,     11,      1,      7,    -96,      1,      7, 
		   -95,   1282,      1,      7,     11,   1265,   1259,     28, 
		  -155,   -154,   -137,      2,      3,      4,      5,      6, 
		  -137,      8,      9,     10,   -137,     12,     13,     14, 
		    15,   -136,   -136,   -136,     29,   -167,   -167,   -167, 
		  -167,   -167,   -167,   -167,   -167,   -167,   -167,   1258, 
		    32,     33,     34,     35,     36,     37,     38,     39, 
		    40,     41,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    854,    869, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   360,    361,    362,    363,    364,    365,    366,    367, 
		   368,    379,    380,    381,    382,    383,    384,    385, 
		   386,    387,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,   -166,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,    118,    110,    111,    -62,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,   -144,    644,    645,    646, 
		   647,    648,    121,    649,   -144,    122,   -144,   -144, 
		  -104,   -104,     51,   -104,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,   -146,   -146,   -146,   -153,   -153,   -153,   -153, 
		  -153,   -153,   -153,   -153,   -153,   -153,   -153,   -153, 
		  -153,   -153,     53,     54,     55,     56,     57,     58, 
		    59,     60,     61,     62,     63,     64,     65,     66, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    499,    -69, 
		   -69,    -69,     29,    -69,    -69,    -69,   1085,   1198, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    219, 
		   360,    361,    362,    363,    364,    365,    366,    367, 
		   368,    379,    380,    381,    382,    383,    384,    385, 
		   386,    387,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		  1188,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -25, 
		   -84,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -90, 
		   -89,    -88,    219,    -87,   1174,    -86,   -151,   -147, 
		   -91,    117,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,    118,   -150,   1172,    110, 
		   -62,    111,    -72,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -144,   -144,    644,    645,    646,    647,    648,    121, 
		   649,   -144,    122,   -144,   -104,   -104,   -104,     51, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -146,    -92,   -146,   -146, 
		    87,   -152,   -152,   -152,   -152,   -152,   -152,   -152, 
		  -152,   -152,   -152,   -152,   -152,   -152,   -152,     32, 
		    33,     34,     35,     36,     89,     90,     60,     91, 
		    39,     40,     92,     41,     66,    499,    -69,    -69, 
		    29,    -69,    -69,    -69,    854,   1026,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    360,    361, 
		   362,    363,    364,    365,    366,    367,    368,   1021, 
		   -84,    -84,    -84,    -84,    -90,    -90,    -90,    -90, 
		   -89,    -89,    -89,    -89,    -88,    -88,    -88,    -88, 
		   219,    -87,    -87,    -87,    -87,    125,    -86,    -86, 
		   -86,    -86,   -151,   -151,   -151,   -151,    -91,    117, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,    -91, 
		  -147,    -91,    -91,    118,   -150,   -150,   -150,   -150, 
		   115,    -62,    -62,    -62,    -62,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -63,    -72,   -104,   -104,   -104,   -104,    -92, 
		   -92,    -92,    -92,   -149,   -149,   -149,   -149,    -14, 
		   -14,    -14,    -14,    -14,    -14,    -14,    -14,    -14, 
		   -15,    -15,    -15,    -15,    -15,    -15,    -15,    -15, 
		   -15,     32,     33,     34,     35,     36,     37,     39, 
		    40,     41,   -105,   -105,   -105,   -105,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   -130,   -130,   -130,   -130, 
		   -18,    -18,    -18,    -18,   -123,   -123,   -123,   -123, 
		  -123,   -123,   -123,   -123,   -123,   -122,   -122,   -122, 
		  -122,   -122,   -122,   -122,   -122,   -122,     32,     33, 
		    34,     35,     36,     37,     39,     40,     41,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -121,   -121,   -121,   -121,   -121, 
		  -121,   -121,   -121,   -121,   -120,   -120,   -120,   -120, 
		  -120,   -120,   -120,   -120,   -120,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -33,    127,    -33, 
		   -33,    -33,   -143,    129,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -34, 
		   -34,    -34,    -34,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    625, 
		   626,    627,    628,    629,    630,    631,    632,    633, 
		   634,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   499,    -69,     29,    -69,    -69,   -158,    -69,    981, 
		   982,    -69,    -69,    -69,    -69,    -69,    -69,   -158, 
		   969,    379,    380,    381,    382,    383,    384,    385, 
		   386,    387,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    964,     32,     33, 
		    34,     35,     36,     37,     38,     39,     40,     41, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    954,    953,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    219,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    939,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    -50,    144,     12,     13,    145,    146, 
		    15,     66,    115,    936,    117,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,    118,    932, 
		   931,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    930,    -72,    644,    645,    646, 
		   647,    648,    121,    649,    122,   -144,     51,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -146,    183,    173,    170,   -155,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,     29,    172,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,    174, 
		   175,    176,    180,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,     29, 
		   179,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,    181,   -181,    175, 
		  -182,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,     53,     54,     55, 
		    56,     57,     58,     59,     60,     61,     62,     63, 
		    64,     65,     66,     87,     32,     33,     34,     35, 
		    36,    187,    188,     60,    189,     39,     40,    190, 
		    41,     66,    499,    -69,    -69,     29,    -69,    -69, 
		   -69,    854,    855,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    360,    361,    362,    363,    364, 
		   365,    366,    367,    368,    849,    -84,    -84,    -90, 
		   -90,    -89,    -89,    -88,    -88,    219,    -87,    -87, 
		   209,    -86,    -86,   -151,   -151,   -147,    117,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		   -91,    -91,    118,   -150,   -150,    207,    110,    111, 
		   -62,    -62,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -63,    -72, 
		  -146,   -146,    -92,    -92,   -149,   -149,   -130,   -130, 
		   -18,    -18,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    127,    -33,    -33, 
		   212,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,    -34,    -34,    207,    -37, 
		   -37,    217,   -130,   -130,   -130,    -37,    -37,    -37, 
		  -142,   -142,   -142,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,    221,    222,    223,    224,    225,    226, 
		   227,    228,    229,    230,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,    -69,    -69,    -69,    -69, 
		   777,    792,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    360,    361,    362,    363,    364,    365, 
		   366,    367,    368,    379,    380,    381,    382,    383, 
		   384,    385,    386,    387,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    285,   -147, 
		   117,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,    118,    110,    111,    -62, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -63,    -72,   -144,    644, 
		   645,    646,    647,    648,    121,    649,   -144,    122, 
		  -144,   -144,   -104,   -104,     51,   -104,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -146,   -146,   -146,   -146,     53,     54, 
		    55,     56,     57,     58,     59,     60,     61,     62, 
		    63,     64,     65,     66,     87,    221,    222,    223, 
		   224,    225,    243,    244,     60,    245,    228,    229, 
		   246,    230,     66,    499,    -69,    -69,     29,    -69, 
		   -69,    -69,    777,    778,    -69,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    360,    361,    362,    363, 
		   364,    365,    366,    367,    368,    288,    -84,    -84, 
		   -84,    -84,    -90,    -90,    -90,    -90,    -89,    -89, 
		   -89,    -89,    -88,    -88,    -88,    -88,    219,    -87, 
		   -87,    -87,    -87,    273,    -86,    -86,    -86,    -86, 
		  -151,   -151,   -151,   -151,    -91,    117,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,    -91,   -147,    -91, 
		   -91,    118,   -150,   -150,   -150,   -150,    267,    -62, 
		   -62,    -62,    -62,    -63,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -63,    -72,    -63,    -63, 
		   -72,   -104,   -104,   -104,   -104,    -92,    -92,    -92, 
		   -92,   -149,   -149,   -149,   -149,    221,    222,    223, 
		   224,    225,    226,    228,    229,    230,   -105,   -105, 
		  -105,   -105,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		  -130,   -130,   -130,   -130,    -18,    -18,    -18,    -18, 
		   221,    222,    223,    224,    225,    226,    228,    229, 
		   230,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,    221,    222,    223, 
		   224,    225,    226,    228,    229,    230,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -33,    127,    -33, 
		   -33,    -33,    276,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,    -34,    -34, 
		   -34,    -34,    267,    -37,    -37,    -37,    -37,    281, 
		  -130,   -130,   -130,   -130,   -130,    -37,    -37,    -37, 
		   -37,    -37,    221,    222,    223,    224,    225,    226, 
		   227,    228,    229,    230,    285,    -26,    276,    -24, 
		   -24,    -24,    -24,    289,    290,    291,    292,    293, 
		   294,    295,    296,    297,    298,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    702, 
		   717,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    360,    361,    362,    363,    364,    365,    366, 
		   367,    368,    379,    380,    381,    382,    383,    384, 
		   385,    386,    387,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   769,    767,    -59,    -61,    -61,   -147,   -147,    117, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,    118,    110,    -62,    111,    -62, 
		   -72,    -63,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -72,   -144, 
		  -144,    644,    645,    646,    647,    648,    121,    649, 
		  -144,    122,   -144,   -144,   -104,   -104,   -104,     51, 
		  -104,   -118,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -146,   -146, 
		  -146,   -146,   -146,     53,     54,     55,     56,     57, 
		    58,     59,     60,     61,     62,     63,     64,     65, 
		    66,     87,    289,    290,    291,    292,    293,    313, 
		   314,     60,    315,    296,    297,    316,    298,     66, 
		   499,    -69,    -69,    -69,     29,    -69,    -69,    -69, 
		   702,    703,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -69,    -69,    360,    361,    362,    363,    364,    365, 
		   366,    367,    368,    357,    -84,    -84,    -84,    -84, 
		   -84,    -90,    -90,    -90,    -90,    -90,    -89,    -89, 
		   -89,    -89,    -89,    -88,    -88,    -88,    -88,    -88, 
		   219,    -87,    -87,    -87,    -87,    -87,    343,    -86, 
		   -86,    -86,    -86,    -86,   -151,   -151,   -151,   -151, 
		  -151,    -91,    -91,    117,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,    -91,   -147,    -91,    -91,    118, 
		  -150,   -150,   -150,   -150,   -150,    337,    -62,    -62, 
		   -62,    -62,    -62,    -63,    -63,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -72,    -63, 
		   -63,    -72,   -104,   -104,   -104,   -104,   -104,    -92, 
		   -92,    -92,    -92,    -92,   -149,   -149,   -149,   -149, 
		  -149,    289,    290,    291,    292,    293,    294,    296, 
		   297,    298,   -105,   -105,   -105,   -105,   -105,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,   -130,   -130, 
		  -130,   -130,   -130,    -18,    -18,    -18,    -18,    -18, 
		   289,    290,    291,    292,    293,    294,    296,    297, 
		   298,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,    289,    290, 
		   291,    292,    293,    294,    296,    297,    298,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -33, 
		   -33,    127,    -33,    -33,    -33,    346,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -34,    -34,    -34,    -34,    -34,    337,    -37, 
		   -37,    -37,    -37,    -37,    351,   -130,   -130,   -130, 
		  -130,   -130,   -130,    -37,    -37,    -37,    -37,    -37, 
		   -37,    221,    222,    223,    224,    225,    226,    227, 
		   228,    229,    230,    285,    346,    -24,    -24,    -24, 
		   -24,    -24,    289,    290,    291,    292,    293,    294, 
		   295,    296,    297,    298,    359,    -58,    -58,    -58, 
		   -58,    -58,    -71,    -71,    -71,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -68,    -68,    -68,    -17,    -17, 
		   -17,    -69,    693,    694,    -69,    -69,    379,    380, 
		   381,    382,    383,    384,    385,    386,    387,    -74, 
		   -74,    -74,    -16,    -16,    -16,    378,     -5,    376, 
		   -67,    -67,    -67,    374,     -7,     -7,    -72,    -72, 
		   -72,    360,    361,    362,    363,    364,    365,    366, 
		   367,    368,     -6,     -6,    360,    361,    362,    363, 
		   364,    365,    366,    367,    368,     -4,    -64,    -64, 
		   -64,    -64,    -64,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -17, 
		   -17,    -17,    -17,    -17,    -69,    400,    401,    -69, 
		   -69,    -69,    -69,    379,    380,    381,    382,    383, 
		   384,    385,    386,    387,    -74,    -74,    -74,    -74, 
		   -74,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    117,   -147,   -147,   -147,    118, 
		   -72,    -72,    -72,    -72,    -72,    121,    122,    393, 
		  -118,   -118,   -118,    -73,    -73,    -73,    379,    380, 
		   381,    382,    383,    384,    385,    386,    387,   -119, 
		  -119,   -119,    379,    380,    381,    382,    383,    384, 
		   385,    386,    387,   -148,   -148,   -148,    121,    122, 
		   399,    -73,    -73,    -73,    -73,    -73,    289,    290, 
		   291,    292,    293,    294,    295,    296,    297,    690, 
		   298,    403,    404,    405,    406,    407,    408,    409, 
		   410,    411,    412,    -70,    -70,    -70,    -70,    -70, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -69,    -69, 
		   -69,    -69,    -69,    -69,    474,    489,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,    360,    361, 
		   362,    363,    364,    365,    366,    367,    368,    379, 
		   380,    381,    382,    383,    384,    385,    386,    387, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    683,   -147,    117,   -147,   -147,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		   118,    110,    111,    -62,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -72,   -144,    644,    645,    646,    647,    648, 
		   121,    649,   -144,    122,   -144,   -144,   -104,   -104, 
		    51,   -104,   -118,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,   -118,   -118,   -118,   -118,   -146,   -146, 
		  -146,   -146,     53,     54,     55,     56,     57,     58, 
		    59,     60,     61,     62,     63,     64,     65,     66, 
		    87,    403,    404,    405,    406,    407,    425,    426, 
		    60,    427,    410,    411,    428,    412,     66,    499, 
		   -69,    -69,     29,    -69,    -69,    -69,    474,    475, 
		   -69,    -69,    -69,    -69,    -69,    -69,    -69,    -69, 
		   360,    361,    362,    363,    364,    365,    366,    367, 
		   368,    469,    -84,    -84,    -84,    -84,    -90,    -90, 
		   -90,    -90,    -89,    -89,    -89,    -89,    -88,    -88, 
		   -88,    -88,    219,    -87,    -87,    -87,    -87,    455, 
		   -86,    -86,    -86,    -86,   -151,   -151,   -151,   -151, 
		   -91,    117,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,    -91,   -147,    -91,    -91,    118,   -150,   -150, 
		  -150,   -150,    449,    -62,    -62,    -62,    -62,    -63, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -72,    -63,    -63,    -72,   -104,   -104,   -104, 
		  -104,    -92,    -92,    -92,    -92,   -149,   -149,   -149, 
		  -149,    403,    404,    405,    406,    407,    408,    410, 
		   411,    412,   -105,   -105,   -105,   -105,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   -130,   -130,   -130,   -130, 
		   -18,    -18,    -18,    -18,    403,    404,    405,    406, 
		   407,    408,    410,    411,    412,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,   -148, 
		  -148,    403,    404,    405,    406,    407,    408,    410, 
		   411,    412,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,   -119,   -119,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -33,    127,    -33,    -33,    -33,    458,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -34,    -34,    -34,    -34,    449,    -37, 
		   -37,    -37,    -37,    463,   -130,   -130,   -130,   -130, 
		  -130,    -37,    -37,    -37,    -37,    -37,    221,    222, 
		   223,    224,    225,    226,    227,    228,    229,    230, 
		   285,    458,    -24,    -24,    -24,    -24,    289,    290, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		   471,    -58,    -58,    -58,    -58,    473,    -64,    -64, 
		   -64,    -64,    289,    290,    291,    292,    293,    294, 
		   295,    296,    297,    493,    298,    403,    404,    405, 
		   406,    407,    408,    409,    410,    411,    412,    -70, 
		   -70,     29,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,     -8,     -8,     -8, 
		    -8,    403,    404,    405,    406,    407,    408,    427, 
		   410,    411,    412,   -166,   -166,   -166,   -166,    -63, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -72,    -63,    -63,    -72,    -11,    -11,    -11, 
		   -11,    483,    -12,    -12,    -12,    -12,    -12,    -12, 
		   484,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,    403,    404,    405,    406,    407,    408,    409, 
		   410,    411,    412,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,     -9,     -9,     -9,     -9,    488,    -12,    -12, 
		   -12,    -12,    -12,    -12,    489,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    403,    404,    405, 
		   406,    407,    408,    409,    410,    411,    412,    -10, 
		   -10,    -10,    -10,    492,    -12,    -12,    -12,    -12, 
		   -12,    -12,    489,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    497,   -116,    496,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,    289,    290,    291,    292,    293,    294, 
		   295,    296,    297,    298,   -117,   -142,   -142,   -142, 
		  -142,   -142,   -142,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,      2,      3,    501,      5,      6,      8, 
		   502,     10,    503,     12,     13,    504,     15,    625, 
		   626,    627,    628,    629,    630,    631,    632,    633, 
		   634,    574,   -159,    -23,    554,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    525,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		   521,    515,    512,   -155,    -22,    -22,    -22,    -22, 
		   -22,    -22,    -22,    -22,    -22,     29,    514,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		   516,    175,    517,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,     29,    520,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,    522, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -94,    -56,     29,    529,    527, 
		   458,    -20,    -20,    -20,    -20,    403,    404,    405, 
		   406,    407,    408,    409,    410,    411,    412,     29, 
		    -8,    221,    222,    223,    224,    225,    226,    227, 
		   228,    229,    230,   -166,    -11,    536,    -12,    537, 
		   403,    404,    405,    406,    407,    408,    409,    410, 
		   411,    412,    -13,     -9,    541,    -12,    542,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -10,    545,    -12,    542,    503,    110,    111, 
		   -21,     32,     33,     34,     35,     36,     37,     39, 
		    40,     41,   -105,   -105,   -105,    525,    552,    458, 
		   -19,    -19,    -19,    -19,    555,     29,    556,    557, 
		   567,    564,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,    563,     29,    560,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,    562, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,    565,   -181,    556,   -181,   -182,   -182, 
		   568,    569,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -93,    572,   -130, 
		   -37,    575,    576,    577,    578,    579,    580,    581, 
		   582,    583,    584,    -71,    -71,    -66,    -66,    -65, 
		   -65,    -68,    -68,    -17,    -17,    -69,    -69,    616, 
		   617,    379,    380,    381,    382,    383,    384,    385, 
		   386,    387,    -74,    -74,    -16,    -16,    -67,    -67, 
		   588,    589,    -72,    -72,   -138,   -138,   -138,   -138, 
		  -138,   -138,   -138,   -138,   -138,   -139,   -139,   -139, 
		  -139,   -139,   -139,   -139,   -139,   -139,    591,    592, 
		   593,    594,    595,    596,    597,    598,    599,    -71, 
		   -66,    -65,    -68,    -17,    605,    606,    -69,    379, 
		   380,    381,    382,    383,    384,    385,    386,    387, 
		   -74,    -16,    -67,    -55,    -72,    121,    122,    604, 
		   -73,    289,    290,    291,    292,    293,    294,    295, 
		   296,    297,    611,    298,    403,    404,    405,    406, 
		   407,    408,    409,    410,    411,    412,    -70,    609, 
		   606,    -12,    -13,   -115,    613,   -114,    121,    122, 
		   615,    -73,    -73,    289,    290,    291,    292,    293, 
		   294,    295,    296,    297,    622,    298,    403,    404, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   -70,    -70,    620,    -12,    -12,    617,    -13,    -13, 
		  -115,   -115,    624,   -114,   -114,   -163,   -162,   -161, 
		  -160,   -158,   -159,   -156,   -164,   -157,   -165,    638, 
		  -155,   -154,     29,    175,    643,     29,    642,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    680,    -32,    -32,    -32,    -32,    -32,    -32, 
		   -32,    -32,    -32,    -31,    -31,    -31,    -31,    -31, 
		   -31,    -31,    -31,    -31,    -30,    -30,    -30,    -30, 
		   -30,    -30,    -30,    -30,    -30,    -29,    -29,    -29, 
		   -29,    -29,    -29,    -29,    -29,    -29,    -28,    -28, 
		   -28,    -28,    -28,    -28,    -28,    -28,    -28,    651, 
		   652,    653,    654,    655,    656,    657,    658,    659, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,    671,    672,    -69,    -69,    -69,    -69, 
		   -69,    -69,    379,    380,    381,    382,    383,    384, 
		   385,    386,    387,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,   -147,    117,   -147,   -147,   -147, 
		  -147,   -147,    118,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   -145,    121,   -145,    122,   -145, 
		  -145,   -118,   -118,   -118,   -118,   -118,   -118,    651, 
		   652,    653,    654,    655,    656,    657,    658,    659, 
		  -119,   -119,   -119,   -119,   -119,   -119,    651,    652, 
		   653,    654,    655,    656,    657,    658,    659,   -148, 
		  -148,   -148,   -148,   -148,   -148,    121,    122,    670, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   289,    290,    291,    292,    293,    294,    295,    296, 
		   297,    677,    298,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    675,    -12,    -12, 
		   672,    -12,    -12,    -12,    -12,    -12,    -12,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,    679, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		   -27,    -27,    -27,    -27,    -27,    -27,    -27,    -27, 
		   -27,    403,    404,    405,    406,    407,    408,    410, 
		   411,    412,   -105,   -105,   -105,    -12,    401,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   121,    122,    686,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    688,    -64,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,   -115,   -115,   -115,   -115,   -115,    692,   -114, 
		  -114,   -114,   -114,   -114,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,    699,    298,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -70,    -70,    -70,    697,    -12,    694,    -12, 
		   -12,    -13,    -13,    -13,   -115,   -115,   -115,    701, 
		  -114,   -114,   -114,    289,    290,    291,    292,    293, 
		   294,    295,    296,    297,    721,    298,    403,    404, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   -70,    -70,    -70,     29,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,     -8, 
		    -8,     -8,     -8,     -8,    289,    290,    291,    292, 
		   293,    294,    315,    296,    297,    298,   -166,   -166, 
		  -166,   -166,   -166,    -63,    -63,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -72,    -63, 
		   -63,    -72,    -11,    -11,    -11,    -11,    -11,    711, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    712, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   403,    404,    405,    406,    407,    408,    409,    410, 
		   411,    412,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,     -9,     -9,     -9,     -9,     -9,    716,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    717,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -10,    -10,    -10,    -10,    -10,    720,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    717,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,    723,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,      2,      3, 
		   501,      5,      6,      8,    502,     10,    503,     12, 
		    13,    504,     15,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,    525,    728,    346,    -20, 
		   -20,    -20,    -20,    -20,    503,    525,    733,    346, 
		   -19,    -19,    -19,    -19,    -19,    736,    737,    738, 
		   739,    740,    741,    742,    743,    744,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -66, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -69,    -69,    -69,    756,    757, 
		   -69,    -69,    -69,    -69,    -69,    -69,    379,    380, 
		   381,    382,    383,    384,    385,    386,    387,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -74, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -67,    -67,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,   -147,   -147,    117,   -147,   -147,   -147, 
		  -147,   -147,    118,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,   -145,   -145,    121,   -145, 
		   122,   -145,   -145,   -118,   -118,   -118,   -118,   -118, 
		  -118,   -118,    736,    737,    738,    739,    740,    741, 
		   742,    743,    744,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,    736,    737,    738,    739,    740,    741, 
		   742,    743,    744,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,    121,    122,    755,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    289,    290, 
		   291,    292,    293,    294,    295,    296,    297,    762, 
		   298,    403,    404,    405,    406,    407,    408,    409, 
		   410,    411,    412,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    760,    -12,    -12,    -12, 
		   757,    -12,    -12,    -12,    -12,    -12,    -12,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    764,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,    289,    290,    291,    292,    293, 
		   294,    296,    297,    298,   -105,   -105,   -105,   -105, 
		   289,    290,    291,    292,    293,    294,    295,    296, 
		   297,    298,    -60,    -58,    -58,    -58,    -58,    121, 
		   122,    771,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    773,    -64,    -64,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    776,    -64,    -64,    -64,    -64, 
		   289,    290,    291,    292,    293,    294,    295,    296, 
		   297,    796,    298,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -70,    -70,     29, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,     -8,     -8,     -8,     -8,    221, 
		   222,    223,    224,    225,    226,    245,    228,    229, 
		   230,   -166,   -166,   -166,   -166,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -63,    -72,    -11,    -11,    -11,    -11,    786, 
		   -12,    -12,    -12,    -12,    -12,    -12,    787,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,     -9, 
		    -9,     -9,     -9,    791,    -12,    -12,    -12,    -12, 
		   -12,    -12,    792,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -10,    -10,    -10, 
		   -10,    795,    -12,    -12,    -12,    -12,    -12,    -12, 
		   792,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -12,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,    798, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,      2,      3, 
		   501,      5,      6,      8,    502,     10,    503,     12, 
		    13,    504,     15,     32,     33,     34,     35,     36, 
		    37,     39,     40,     41,    525,    803,    276,    -20, 
		   -20,    -20,    -20,    503,    525,    808,    276,    -19, 
		   -19,    -19,    -19,    811,    812,    813,    814,    815, 
		   816,    817,    818,    819,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -71,    -71,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -66,    -66,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -65,    -65,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -68,    -68,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -17,    -17,    -69,    -69,    831,    832, 
		   -69,    -69,    -69,    -69,    -69,    -69,    379,    380, 
		   381,    382,    383,    384,    385,    386,    387,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -74,    -74,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -16,    -16,    -67, 
		   -67,    -67,    -67,    -67,    -67,    -67,    -67,   -147, 
		   117,   -147,   -147,   -147,   -147,   -147,    118,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,   -145, 
		   121,   -145,    122,   -145,   -145,   -118,   -118,   -118, 
		  -118,   -118,   -118,    811,    812,    813,    814,    815, 
		   816,    817,    818,    819,   -119,   -119,   -119,   -119, 
		  -119,   -119,    811,    812,    813,    814,    815,    816, 
		   817,    818,    819,   -148,   -148,   -148,   -148,   -148, 
		  -148,    121,    122,    830,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,    837,    298,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    835,    -12,    -12,    832,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,    839,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,    221,    222,    223,    224, 
		   225,    226,    228,    229,    230,   -105,   -105,   -105, 
		   212,    -24,    -24,    121,    122,    845,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    847,    -64,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,    298,    851,    -58, 
		   -58,    853,    -64,    -64,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,    873,    298,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -70,    -70,     29,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,     -8, 
		    -8,     32,     33,     34,     35,     36,     37,    189, 
		    39,     40,     41,   -166,   -166,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -63,    -63,    -72,    -11,    -11,    863,    -12,    -12, 
		   -12,    -12,    -12,    -12,    864,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    403,    404,    405, 
		   406,    407,    408,    409,    410,    411,    412,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,     -9,     -9,    868, 
		   -12,    -12,    -12,    -12,    -12,    -12,    869,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -10,    -10,    872,    -12,    -12,    -12,    -12, 
		   -12,    -12,    869,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    -12,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,    875,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		     2,      3,    501,      5,      6,      8,    502,     10, 
		   503,     12,     13,    504,     15,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    525,    880, 
		   212,    -20,    -20,    503,    525,    885,    212,    -19, 
		   -19,    901,    902,    903,    904,    905,    906,    907, 
		   908,    909,    133,    134,    135,    136,    137,    889, 
		   141,    142,    145,    -69,    -69,    -69,    -69,    -69, 
		   892,    893,    -69,    -69,    -69,    -69,    -69,    -69, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,    898,    298,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    896,    -12,    -12,    -12, 
		   -12,    -12,    893,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,    900, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -17, 
		   -17,    -17,    -17,    -17,    -69,    921,    922,    -69, 
		   -69,    -69,    -69,    379,    380,    381,    382,    383, 
		   384,    385,    386,    387,    -74,    -74,    -74,    -74, 
		   -74,    -16,    -16,    -16,    -16,    -16,    -67,    -67, 
		   -67,    -67,    -67,    117,   -147,   -147,   -147,    118, 
		   -72,    -72,    -72,    -72,    -72,    121,    122,   -145, 
		  -118,   -118,   -118,    901,    902,    903,    904,    905, 
		   906,    907,    908,    909,   -119,   -119,   -119,    901, 
		   902,    903,    904,    905,    906,    907,    908,    909, 
		  -148,   -148,   -148,    121,    122,    920,    -73,    -73, 
		   -73,    -73,    -73,    289,    290,    291,    292,    293, 
		   294,    295,    296,    297,    927,    298,    403,    404, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   -70,    -70,    -70,    -70,    -70,    925,    -12,    922, 
		   -12,    -12,    -12,    -12,    -13,    -13,    -13,    -13, 
		   -13,   -115,   -115,   -115,   -115,   -115,    929,   -114, 
		  -114,   -114,   -114,   -114,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    133,    134,    135,    136, 
		   137,    889,    141,    142,    145,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -37,    -37,    -37,    -37,    -51,    131, 
		     2,      3,    132,    133,    134,    135,    136,      5, 
		   137,      6,    138,    139,     60,    140,      9,     10, 
		   141,    142,    143,    144,     12,     13,    145,    146, 
		    15,     66,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    127,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    942, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    932, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    947,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    221, 
		   222,    223,    224,    225,    226,    227,    228,    229, 
		   230,    285,    942,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,     29,    556,    955,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,    961,     29,    958,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,    960,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,    963,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    289, 
		   290,    291,    292,    293,    294,    295,    296,    297, 
		   298,    966,    -58,    121,    122,    968,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    970,   -110,    975,   -110,    972,    973,    974, 
		  -109,   -111,    975,   -111,    403,    404,    405,    406, 
		   407,    408,    409,    410,    411,    412,   -113,   -113, 
		   978,    -12,    975,    -12,    -13,    -13,   -112,   -112, 
		   289,    290,    291,    292,    293,    294,    295,    296, 
		   297,    993,    298,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -70,     29,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		    -8,    -11,    987,    -12,    -12,    -12,    -12,    -12, 
		   988,    -12,    -12,    -12,    -12,    -12,    -12,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,     -9,    991,    -12,    -12,    -12,    -12,    -12, 
		   893,    -12,    -12,    -12,    -12,    -12,    -12,    -10, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,    995,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,      2,      3,    501,      5,      6,      8,    502, 
		    10,    503,     12,     13,    504,     15,     32,     33, 
		    34,     35,     36,     37,     39,     40,     41,    525, 
		  1000,    942,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    503,    525, 
		  1005,    942,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,   1008,     29, 
		   175,   1013,     29,   1012,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,   1015,   -130,   -130,   -130, 
		  -130,   -130,    -37,    -37,    -37,    -37,    -37,    221, 
		   222,    223,    224,    225,    226,    227,    228,    229, 
		   230,    285,    129,    -24,    -24,    -24,    -24,    289, 
		   290,    291,    292,    293,    294,    295,    296,    297, 
		   298,   1023,    -58,    -58,    -58,    -58,   1025,    -64, 
		   -64,    -64,    -64,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -70,    -70,     29, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,     -8,     -8,     -8,     -8,     32, 
		    33,     34,     35,     36,     37,     91,     39,     40, 
		    41,   -166,   -166,   -166,   -166,    -63,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -63,    -72, 
		   -63,    -63,    -72,    -11,    -11,    -11,    -11,   1034, 
		   -12,    -12,    -12,    -12,    -12,    -12,   1035,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,     -9,     -9,     -9,     -9,   1038,    -12,    -12, 
		   -12,    -12,    -12,    -12,    869,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    -12,    -10,    -10,    -10, 
		   -10,      2,      3,    501,      5,      6,      8,    502, 
		    10,    503,     12,     13,    504,     15,     32,     33, 
		    34,     35,     36,     37,     39,     40,     41,    525, 
		  1044,    129,    -20,    -20,    -20,    -20,    503,    525, 
		  1049,    129,    -19,    -19,    -19,    -19,     53,     54, 
		    55,     56,     57,     58,     59,     60,     61,     62, 
		    63,     64,     65,     66,     87,     53,     54,     55, 
		    56,     57,   1054,   1055,     60,   1056,     62,     63, 
		  1057,     65,     66,    499,    -69,    -69,    -69,     29, 
		   -69,    -69,    -69,   1085,   1115,    -69,    -69,    -69, 
		   -69,    -69,    -69,    -69,    360,    361,    362,    363, 
		   364,    365,    366,    367,    368,   1110,    -84,    -84, 
		   -84,    -84,    -90,    -90,    -90,    -90,    -89,    -89, 
		   -89,    -89,    -88,    -88,    -88,    -88,    219,    -87, 
		   -87,    -87,    -87,   1096,    -86,    -86,    -86,    -86, 
		  -151,   -151,   -151,   -151,    -91,    -91,    117,   -147, 
		  -147,   -147,   -147,   -147,   -147,   -147,    -91,   -147, 
		   -91,    118,   -150,   -150,   -150,   -150,   1094,    -62, 
		   -62,    -62,    -62,    -63,    -63,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -63,    -72,    -63, 
		   -72,   -104,   -104,   -104,   -104,    -92,    -92,    -92, 
		   -92,   -149,   -149,   -149,   -149,     53,     54,     55, 
		    56,     57,   1076,     62,     63,     65,    -69,    -69, 
		   -69,    -69,    -69,    -69,    -69,   1085,   1086,    -69, 
		   -69,    -69,    -69,    -69,    -69,    -69,   -147,   -147, 
		   117,   -147,   -147,   -147,   -147,   -147,   -147,   -147, 
		  -147,   -147,   -147,    118,   -105,   -105,   -105,   -105, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,   -146,   -146, 
		  -146,   -146,     53,     54,     55,     56,     57,   1076, 
		    62,     63,     65,   -148,   -148,   -148,   -148,   -148, 
		  -148,   -148,   -148,   -148,   -148,   -148,   -148,     53, 
		    54,     55,     56,     57,   1076,     62,     63,     65, 
		  -119,   -119,   -119,   -119,   -119,   -119,   -119,   -119, 
		  -119,   -119,   -119,   -119,    289,    290,    291,    292, 
		   293,    294,    295,    296,    297,   1091,    298,    403, 
		   404,    405,    406,    407,    408,    409,    410,    411, 
		   412,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,   1089, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,   1086, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,    -13,    -13,    -13,    -13,   -115,   -115,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   -115,   -115,   1093,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,   -130,   -130,   -130,   -130,    -18,    -18, 
		   -18,    -18,    131,      2,      3,    132,    133,    134, 
		   135,    136,      5,    137,      6,    138,    139,     60, 
		   140,      9,     10,    141,    142,    143,    144,     12, 
		    13,    145,    146,     15,     66,    -33,    -33,    127, 
		   -33,    -33,   1099,    131,      2,      3,    132,    133, 
		   134,    135,    136,      5,    137,      6,    138,    139, 
		    60,    140,      9,     10,    141,    142,    143,    144, 
		    12,     13,    145,    146,     15,     66,    -34,    -34, 
		   -34,    -34,   1094,    -37,    -37,    -37,    -37,   1104, 
		  -130,   -130,   -130,   -130,   -130,    -37,    -37,    -37, 
		   -37,    -37,    221,    222,    223,    224,    225,    226, 
		   227,    228,    229,    230,    285,   1099,    -24,    -24, 
		   -24,    -24,    289,    290,    291,    292,    293,    294, 
		   295,    296,    297,    298,   1112,    -58,    -58,    -58, 
		   -58,   1114,    -64,    -64,    -64,    -64,    403,    404, 
		   405,    406,    407,    408,    409,    410,    411,    412, 
		   -70,    -70,    -70,     29,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,     -8,     -8, 
		    -8,     -8,     53,     54,     55,     56,     57,   1076, 
		  1056,     62,     63,     65,   -166,   -166,   -166,   -166, 
		   -63,    -63,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -63,    -72,    -63,    -72,    -11,    -11, 
		   -11,    -11,   1123,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,   1124,    -12,    -12,    -12,    -12,    -12, 
		   -12,    -12,    403,    404,    405,    406,    407,    408, 
		   409,    410,    411,    412,     -9,     -9,     -9,     -9, 
		  1127,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		  1086,    -12,    -12,    -12,    -12,    -12,    -12,    -12, 
		   -10,    -10,    -10,    -10,      2,      3,    501,      5, 
		     6,      8,    502,     10,    503,     12,     13,    504, 
		    15,     32,     33,     34,     35,     36,     37,     39, 
		    40,     41,    525,   1133,   1099,    -20,    -20,    -20, 
		   -20,    503,    525,   1138,   1099,    -19,    -19,    -19, 
		   -19,   1141,   1142,   1143,   1144,   1145,   1146,   1147, 
		  1148,   1149,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -71,    -71,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -66,    -66,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -65,    -65,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -68,    -68,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -17,    -17,    -69,    -69,    -69,   1161,   1162,    -69, 
		   -69,    -69,    -69,    -69,    379,    380,    381,    382, 
		   383,    384,    385,    386,    387,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -74,    -74,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -16,    -16,    -67,    -67,    -67, 
		   -67,    -67,    -67,    -67,    -67,   -147,   -147,    117, 
		  -147,   -147,   -147,   -147,    118,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -72,    -72,   -145,   -145,    121, 
		  -145,    122,   -145,   -118,   -118,   -118,   -118,   -118, 
		  -118,   1141,   1142,   1143,   1144,   1145,   1146,   1147, 
		  1148,   1149,   -119,   -119,   -119,   -119,   -119,   -119, 
		  1141,   1142,   1143,   1144,   1145,   1146,   1147,   1148, 
		  1149,   -148,   -148,   -148,   -148,   -148,   -148,    121, 
		   122,   1160,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    289,    290,    291,    292,    293,    294, 
		   295,    296,    297,   1167,    298,    403,    404,    405, 
		   406,    407,    408,    409,    410,    411,    412,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,   1165, 
		   -12,    -12,    -12,   1162,    -12,    -12,    -12,    -12, 
		   -12,    -13,    -13,    -13,    -13,    -13,    -13,    -13, 
		   -13,   -115,   -115,   -115,   -115,   -115,   -115,   -115, 
		  -115,   1169,   -114,   -114,   -114,   -114,   -114,   -114, 
		  -114,   -114,     53,     54,     55,     56,     57,   1076, 
		    62,     63,     65,   -105,   -105,   -105,   -130,    -18, 
		   131,      2,      3,    132,    133,    134,    135,    136, 
		     5,    137,      6,    138,    139,     60,    140,      9, 
		    10,    141,    142,    143,    144,     12,     13,    145, 
		   146,     15,     66,    -33,    127,   1177,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,    -34,   1172,    -37,   1182,   -130,   -130,    -37, 
		   -37,    221,    222,    223,    224,    225,    226,    227, 
		   228,    229,    230,    285,   1177,    -24,    289,    290, 
		   291,    292,    293,    294,    295,    296,    297,    298, 
		  1190,    -58,    121,    122,   1192,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,   1194,    -64,    221,    222,    223, 
		   224,    225,    226,    227,    228,    229,    230,   1197, 
		   -35,    403,    404,    405,    406,    407,    408,    409, 
		   410,    411,    412,    -70,    -70,    -70,     29,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,     -8,     53,     54,     55,     56,     57,   1076, 
		    61,     62,     63,     65,   -166,    -72,    -63,    -72, 
		   -72,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,    -11,   1206,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,   1207,    -12,    -12,    -12, 
		   -12,    -12,    -12,    -12,    403,    404,    405,    406, 
		   407,    408,    409,    410,    411,    412,     -9,   1210, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,   1086, 
		   -12,    -12,    -12,    -12,    -12,    -12,    -12,    -10, 
		     2,      3,    501,      5,      6,      8,    502,     10, 
		   503,     12,     13,    504,     15,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    525,   1216, 
		  1177,    -20,    503,    525,   1221,   1177,    -19,   1224, 
		  1225,   1226,   1227,   1228,   1229,   1230,   1231,   1232, 
		   -71,    -71,    -71,    -71,    -71,    -71,    -71,    -71, 
		   -66,    -66,    -66,    -66,    -66,    -66,    -66,    -66, 
		   -65,    -65,    -65,    -65,    -65,    -65,    -65,    -65, 
		   -68,    -68,    -68,    -68,    -68,    -68,    -68,    -68, 
		   -17,    -17,    -17,    -17,    -17,    -17,    -17,    -17, 
		   -69,    -69,   1244,   1245,    -69,    -69,    -69,    -69, 
		   -69,    -69,    379,    380,    381,    382,    383,    384, 
		   385,    386,    387,    -74,    -74,    -74,    -74,    -74, 
		   -74,    -74,    -74,    -16,    -16,    -16,    -16,    -16, 
		   -16,    -16,    -16,    -67,    -67,    -67,    -67,    -67, 
		   -67,    -67,    -67,   -147,    117,   -147,   -147,   -147, 
		  -147,   -147,    118,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   -145,    121,   -145,    122,   -145, 
		  -145,   -118,   -118,   -118,   -118,   -118,   -118,   1224, 
		  1225,   1226,   1227,   1228,   1229,   1230,   1231,   1232, 
		  -119,   -119,   -119,   -119,   -119,   -119,   1224,   1225, 
		  1226,   1227,   1228,   1229,   1230,   1231,   1232,   -148, 
		  -148,   -148,   -148,   -148,   -148,    121,    122,   1243, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   289,    290,    291,    292,    293,    294,    295,    296, 
		   297,   1250,    298,    403,    404,    405,    406,    407, 
		   408,    409,    410,    411,    412,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,   1248,    -12,    -12, 
		  1245,    -12,    -12,    -12,    -12,    -12,    -12,    -13, 
		   -13,    -13,    -13,    -13,    -13,    -13,    -13,   -115, 
		  -115,   -115,   -115,   -115,   -115,   -115,   -115,   1252, 
		  -114,   -114,   -114,   -114,   -114,   -114,   -114,   -114, 
		   121,    122,   1254,    -73,    -73,    -73,    -73,    -73, 
		   -73,    -73,    -73,    -73,    -73,    -73,    -73,    -73, 
		   -73,   1256,    -64,    -70,    -70,    -70,    -70,    -70, 
		   -70,    -70,    -70,    -70,    -70,    -70,    -70,    -70, 
		   -70,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  1260,    175,   1261,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,     29,   1264,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -142,   1267,   1268,    131,      2, 
		     3,    132,    133,    134,    135,    136,      5,    137, 
		     6,    138,    139,     60,    140,      9,     10,    141, 
		   142,    143,    144,     12,     13,    145,    146,     15, 
		    66,   -135,   1271,   -130,    -37,     11,   1265,   1276, 
		  1268,   -134,   1265,   1280,   1268,   -132,     -1,    -97, 
		   -98,   1265,   1287,   1268,   -133,     29,    556,   1290, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   1296, 
		    29,   1293,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   1295,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -163,   -163,   -162,   -162,   -161,   -161,   -160,   -160, 
		  -106,   -159,   -159,   -164,   -164,   -165,   -165,   1315, 
		  1315,   1308,   1309,   -107,   1312,   1311,   -108,   1313, 
		  -181,   1309,   -182,   -142,   -142,   -142,   -142,   -142, 
		  -142,   -142,   -142,    625,    626,    627,    628,    630, 
		  1317,    632,    634,   1420,   1330,   1320,   1321,   1322, 
		  -124,    625,    626,    627,    628,    630,    632,    634, 
		  1326,   1324,   -127,    625,    626,    627,    628,    630, 
		   632,    634,   -126,   1327,   -128,   1322,   -128,   -129, 
		  -129,   -125,    -57,   1332,   1333,      2,      3,   1334, 
		   133,    134,    135,    136,      5,    137,      6,   1335, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		  1336,     12,     13,    145,   1337,     15,     66,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    -49,    -49,    -49,    -49,    -49,    -49, 
		   -49,    -49,    625,    626,    627,    628,    629,    630, 
		   631,    632,    633,    634,    499,     32,     33,     34, 
		    35,     36,     37,     38,     39,     40,     41,   1392, 
		  1391,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -45,    -45,    -45,    -45, 
		   -45,    -45,    -45,    -45,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -46, 
		   -46,    -46,    -46,    -46,    -46,    -46,    -46,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    -44,    -44,    -44,    -44,    -44,    -44, 
		   -44,    -44,    219,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,    -43,    -43, 
		   -43,    -43,    -43,    -43,    -43,    -43,   1377,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   -176,   -176,   -176,   -176,   -176,   -176, 
		  -176,   -176,   1333,      2,      3,   1334,    133,    134, 
		   135,    136,      5,    137,      6,   1335,    139,     60, 
		   140,      9,     10,    141,    142,    143,   1336,     12, 
		    13,    145,   1337,     15,     66,   1374,   1373,   1371, 
		  1370,    -72,    -72,    -72,    -72,    -72,    -72,    -72, 
		   -72,    -72,    -72,   1369,    -72,   1367,   -146,   1366, 
		  1360,   1357,   -155,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,    -38,    -38, 
		   -38,    -38,    -38,    -38,    -38,    -38,     29,   1359, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   -174,   -174,   -174,   -174,   -174, 
		  -174,   -174,   -174,   1361,    175,   1362,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,   -169,   -169,   -169,   -169,   -169,   -169,   -169, 
		  -169,     29,   1365,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,   -173,   -173, 
		  -173,   -173,   -173,   -173,   -173,   -173,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,    -47,    -47,    -47,    -47,    -47,    -47,    -47, 
		   -47,   1333,      2,      3,   1334,    133,    134,    135, 
		   136,      5,    137,      6,   1335,    139,     60,    140, 
		     9,     10,    141,    142,    143,    -54,   1336,     12, 
		    13,    145,   1337,     15,     66,    -53,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -40,    -40,    -40,    -40,    -40,    -40,    -40, 
		   -40,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,    -41,    -41,    -41,    -41, 
		   -41,    -41,    -41,    -41,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -18,    -18,    -18,    -18,    -18,    -18, 
		   -18,    -18,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,    -42,    -42,    -42, 
		   -42,    -42,    -42,    -42,    -42,   -130,   -130,   -130, 
		   -99,    -99,    -99,    -52,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   127,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,    -33,    -33,    -33,    -33,    -33, 
		   -33,    -33,    -33,   1380,    131,      2,      3,    132, 
		   133,    134,    135,    136,      5,    137,      6,    138, 
		   139,     60,    140,      9,     10,    141,    142,    143, 
		   144,     12,     13,    145,    146,     15,     66,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,    -34,    -34,    -34,    -34,    -34,    -34, 
		   -34,    -34,   1371,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,   1385,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,   -130,   -130,   -130,   -130,   -130, 
		  -130,   -130,   -130,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    -37, 
		   -37,    -37,    -37,    -37,    -37,    -37,    -37,    221, 
		   222,    223,    224,    225,    226,    227,    228,    229, 
		   230,    285,   1380,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -24,    -24, 
		   -24,    -24,    -24,    -24,    -24,    -24,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,    -39,    -39,    -39,    -39,    -39,    -39,    -39, 
		   -39,     29,    556,   1393,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   -168, 
		  -168,   -168,   -168,   -168,   -168,   -168,   -168,   1399, 
		    29,   1396,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   -170,   -170,   -170, 
		  -170,   -170,   -170,   -170,   -170,   1398,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -172,   -172,   -172,   -172,   -172,   -172,   -172, 
		  -172,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -171,   -171,   -171,   -171, 
		  -171,   -171,   -171,   -171,   -140,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		   -48,    -48,    -48,    -48,    -48,    -48,    -48,    -48, 
		     2,      3,    501,      5,      6,      8,    502,     10, 
		   503,     12,     13,    504,     15,     32,     33,     34, 
		    35,     36,     37,     39,     40,     41,    525,   1406, 
		  1380,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    -20,    -20,    -20,    -20, 
		   -20,    -20,    -20,    -20,    503,    525,   1411,   1380, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,    -19,    -19,    -19,    -19,    -19, 
		   -19,    -19,    -19,   1414,     29,    175,   1419,     29, 
		  1418,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,   1333, 
		     2,      3,   1334,    133,    134,    135,    136,      5, 
		   137,      6,   1335,    139,     60,    140,      9,     10, 
		   141,    142,    143,   1336,     12,     13,    145,   1337, 
		    15,     66,   1374,   -100,   -100,   -100,    625,    626, 
		   627,    628,    630,   1424,    632,    634,   1427,   1330, 
		  1427,    131,      2,      3,    132,    133,    134,    135, 
		   136,      5,    137,      6,    138,    139,     60,    140, 
		     9,     10,    141,    142,    143,    144,     12,     13, 
		   145,    146,     15,     66,   -102,   -102,   -102,   1374, 
		   -37,    -37,    -37,   -103,   -103,   -103,   1433,     29, 
		   175,   1438,     29,   1437,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,   -175,   -175,   -175,   -175,   -175, 
		  -175,   -175,   -175,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36,    -36,    -36,    -36,    -36,    -36,    -36, 
		   -36,    -36
	]

	/*  GotoI, J, A
	 *
	 *      Compressed goto table.
	 */

	private static let GotoI:[UInt32] = [
		     0,     11,     11,     11,     11,     14,     14,     14, 
		    17,     17,     17,     17,     17,     17,     17,     17, 
		    17,     17,     18,     21,     24,     24,     28,     29, 
		    29,     29,     29,     35,     35,     37,     37,     37, 
		    46,     46,     46,     46,     46,     46,     47,     52, 
		    57,     57,     57,     57,     57,     58,     59,     59, 
		    61,     62,     62,     62,     62,     82,     82,     82, 
		    82,     82,     82,     83,     86,     87,     92,     97, 
		    97,     97,     97,     97,     97,     97,     97,     97, 
		    97,     98,     98,     99,     99,     99,    100,    100, 
		   101,    102,    102,    104,    105,    105,    105,    106, 
		   106,    126,    127,    130,    135,    135,    135,    135, 
		   135,    135,    136,    136,    137,    137,    137,    138, 
		   138,    139,    140,    140,    141,    141,    141,    141, 
		   141,    149,    150,    150,    150,    150,    150,    150, 
		   155,    156,    156,    156,    160,    160,    184,    185, 
		   185,    186,    210,    210,    210,    213,    213,    213, 
		   213,    213,    213,    214,    217,    217,    222,    222, 
		   222,    231,    231,    231,    231,    231,    231,    231, 
		   231,    232,    232,    233,    233,    257,    258,    258, 
		   259,    260,    260,    260,    262,    263,    263,    263, 
		   263,    263,    263,    265,    265,    265,    265,    266, 
		   266,    266,    268,    268,    268,    268,    269,    269, 
		   269,    289,    290,    310,    311,    314,    319,    319, 
		   319,    319,    319,    319,    320,    320,    321,    321, 
		   321,    322,    322,    323,    324,    324,    324,    324, 
		   324,    324,    348,    349,    350,    374,    374,    375, 
		   375,    376,    376,    376,    376,    385,    385,    385, 
		   385,    385,    385,    386,    391,    396,    396,    396, 
		   396,    397,    398,    399,    399,    401,    402,    402, 
		   402,    422,    423,    443,    444,    447,    452,    452, 
		   452,    452,    452,    452,    453,    453,    454,    454, 
		   454,    455,    455,    456,    457,    457,    458,    458, 
		   458,    466,    467,    467,    467,    467,    472,    473, 
		   477,    477,    501,    502,    503,    527,    527,    528, 
		   528,    529,    529,    529,    538,    539,    539,    540, 
		   540,    551,    551,    551,    551,    551,    551,    552, 
		   557,    562,    562,    562,    562,    562,    562,    562, 
		   563,    564,    564,    566,    567,    567,    567,    587, 
		   588,    608,    609,    612,    617,    617,    617,    617, 
		   617,    617,    618,    618,    619,    619,    619,    620, 
		   620,    621,    622,    622,    623,    623,    623,    631, 
		   632,    632,    632,    632,    637,    638,    642,    642, 
		   666,    667,    668,    692,    692,    693,    693,    694, 
		   694,    694,    703,    704,    705,    705,    716,    716, 
		   716,    716,    716,    716,    716,    716,    717,    722, 
		   722,    722,    722,    722,    722,    722,    722,    726, 
		   726,    731,    731,    731,    731,    731,    731,    731, 
		   731,    732,    737,    737,    737,    737,    738,    738, 
		   739,    739,    739,    743,    743,    748,    749,    750, 
		   750,    760,    769,    769,    769,    769,    769,    769, 
		   769,    770,    775,    780,    780,    780,    780,    780, 
		   781,    782,    782,    784,    785,    785,    785,    805, 
		   806,    826,    827,    830,    835,    835,    835,    835, 
		   835,    835,    836,    836,    837,    837,    837,    838, 
		   838,    839,    840,    840,    841,    841,    841,    849, 
		   850,    850,    850,    850,    855,    856,    860,    860, 
		   884,    885,    886,    910,    910,    911,    911,    912, 
		   912,    912,    921,    922,    923,    923,    934,    934, 
		   934,    934,    934,    944,    953,    955,    955,    964, 
		   964,    964,    964,    964,    967,    976,    976,    976, 
		   976,    979,    988,    988,    988,    989,    989,    989, 
		   989,    989,    999,    999,    999,   1007,   1010,   1010, 
		  1010,   1010,   1019,   1020,   1020,   1020,   1020,   1020, 
		  1020,   1022,   1022,   1022,   1022,   1023,   1023,   1025, 
		  1025,   1025,   1026,   1050,   1050,   1050,   1053,   1053, 
		  1054,   1054,   1063,   1065,   1065,   1074,   1074,   1074, 
		  1074,   1077,   1086,   1086,   1086,   1086,   1089,   1098, 
		  1098,   1098,   1099,   1100,   1101,   1109,   1110,   1111, 
		  1111,   1112,   1112,   1115,   1115,   1115,   1115,   1115, 
		  1117,   1117,   1117,   1117,   1117,   1117,   1118,   1118, 
		  1118,   1119,   1143,   1143,   1144,   1144,   1144,   1144, 
		  1147,   1147,   1147,   1147,   1147,   1147,   1148,   1153, 
		  1153,   1153,   1153,   1154,   1154,   1154,   1154,   1157, 
		  1157,   1157,   1157,   1157,   1157,   1158,   1163,   1163, 
		  1163,   1163,   1163,   1163,   1164,   1164,   1174,   1183, 
		  1183,   1183,   1184,   1184,   1184,   1184,   1184,   1185, 
		  1185,   1195,   1204,   1204,   1204,   1205,   1205,   1205, 
		  1205,   1205,   1205,   1205,   1205,   1205,   1205,   1205, 
		  1205,   1205,   1205,   1205,   1205,   1205,   1205,   1208, 
		  1208,   1210,   1210,   1210,   1210,   1210,   1210,   1210, 
		  1210,   1210,   1210,   1215,   1215,   1215,   1215,   1215, 
		  1215,   1216,   1221,   1221,   1221,   1221,   1222,   1222, 
		  1223,   1223,   1227,   1227,   1232,   1233,   1234,   1234, 
		  1244,   1253,   1253,   1253,   1254,   1254,   1254,   1254, 
		  1254,   1254,   1262,   1263,   1264,   1264,   1265,   1265, 
		  1265,   1265,   1265,   1265,   1265,   1265,   1275,   1284, 
		  1284,   1284,   1285,   1285,   1285,   1285,   1285,   1295, 
		  1304,   1306,   1306,   1315,   1315,   1315,   1315,   1315, 
		  1318,   1327,   1327,   1327,   1327,   1330,   1339,   1339, 
		  1339,   1340,   1340,   1340,   1340,   1348,   1357,   1358, 
		  1358,   1359,   1359,   1360,   1361,   1361,   1362,   1362, 
		  1367,   1367,   1367,   1367,   1367,   1367,   1368,   1373, 
		  1373,   1373,   1373,   1374,   1374,   1375,   1375,   1379, 
		  1379,   1384,   1385,   1386,   1386,   1396,   1405,   1405, 
		  1405,   1406,   1406,   1406,   1406,   1406,   1414,   1415, 
		  1426,   1426,   1426,   1427,   1427,   1427,   1427,   1427, 
		  1427,   1427,   1437,   1446,   1448,   1448,   1457,   1457, 
		  1457,   1457,   1457,   1460,   1469,   1469,   1469,   1469, 
		  1472,   1481,   1481,   1481,   1482,   1482,   1482,   1482, 
		  1490,   1499,   1500,   1500,   1501,   1501,   1502,   1503, 
		  1503,   1504,   1504,   1509,   1509,   1509,   1509,   1509, 
		  1509,   1510,   1515,   1515,   1515,   1515,   1516,   1516, 
		  1517,   1517,   1521,   1521,   1526,   1527,   1528,   1528, 
		  1538,   1547,   1547,   1547,   1548,   1548,   1548,   1548, 
		  1548,   1556,   1557,   1558,   1558,   1559,   1559,   1559, 
		  1559,   1559,   1570,   1570,   1570,   1570,   1570,   1580, 
		  1589,   1591,   1591,   1600,   1600,   1600,   1600,   1600, 
		  1603,   1612,   1612,   1612,   1612,   1615,   1624,   1624, 
		  1624,   1625,   1625,   1625,   1625,   1633,   1642,   1643, 
		  1643,   1644,   1644,   1645,   1646,   1646,   1647,   1647, 
		  1652,   1656,   1657,   1657,   1657,   1667,   1676,   1676, 
		  1676,   1677,   1677,   1677,   1677,   1677,   1677,   1677, 
		  1677,   1677,   1677,   1678,   1683,   1683,   1683,   1683, 
		  1684,   1684,   1685,   1685,   1689,   1689,   1694,   1695, 
		  1696,   1696,   1706,   1715,   1715,   1715,   1716,   1716, 
		  1716,   1716,   1716,   1716,   1716,   1716,   1716,   1721, 
		  1722,   1722,   1722,   1722,   1746,   1747,   1748,   1772, 
		  1772,   1773,   1773,   1774,   1774,   1774,   1783,   1784, 
		  1785,   1785,   1785,   1788,   1788,   1788,   1790,   1790, 
		  1790,   1790,   1790,   1790,   1790,   1801,   1801,   1801, 
		  1802,   1802,   1803,   1804,   1804,   1804,   1804,   1805, 
		  1814,   1814,   1814,   1815,   1815,   1815,   1825,   1834, 
		  1836,   1836,   1836,   1836,   1839,   1848,   1848,   1848, 
		  1851,   1851,   1851,   1851,   1851,   1859,   1868,   1869, 
		  1869,   1870,   1870,   1871,   1872,   1872,   1873,   1873, 
		  1873,   1876,   1876,   1878,   1878,   1878,   1878,   1879, 
		  1879,   1879,   1888,   1889,   1890,   1890,   1901,   1901, 
		  1901,   1901,   1901,   1910,   1912,   1912,   1921,   1921, 
		  1921,   1921,   1921,   1924,   1933,   1933,   1933,   1936, 
		  1936,   1944,   1953,   1954,   1954,   1955,   1955,   1956, 
		  1957,   1957,   1958,   1958,   1978,   1979,   1999,   2000, 
		  2003,   2008,   2008,   2008,   2008,   2008,   2008,   2009, 
		  2009,   2010,   2010,   2010,   2011,   2011,   2012,   2013, 
		  2013,   2014,   2014,   2014,   2022,   2023,   2024,   2025, 
		  2025,   2025,   2030,   2031,   2035,   2035,   2045,   2054, 
		  2054,   2054,   2055,   2055,   2055,   2055,   2055,   2055, 
		  2055,   2079,   2080,   2081,   2105,   2105,   2106,   2106, 
		  2107,   2107,   2107,   2116,   2117,   2118,   2118,   2129, 
		  2129,   2129,   2129,   2129,   2138,   2140,   2140,   2149, 
		  2149,   2149,   2149,   2149,   2152,   2161,   2161,   2161, 
		  2164,   2164,   2172,   2181,   2182,   2182,   2183,   2183, 
		  2184,   2185,   2185,   2186,   2186,   2191,   2191,   2191, 
		  2191,   2191,   2191,   2192,   2197,   2197,   2197,   2197, 
		  2198,   2198,   2199,   2199,   2203,   2203,   2208,   2209, 
		  2210,   2210,   2220,   2229,   2229,   2229,   2230,   2230, 
		  2230,   2230,   2230,   2238,   2239,   2239,   2239,   2263, 
		  2264,   2265,   2289,   2289,   2290,   2290,   2291,   2291, 
		  2291,   2300,   2301,   2302,   2302,   2313,   2313,   2313, 
		  2314,   2314,   2314,   2314,   2323,   2323,   2323,   2332, 
		  2334,   2334,   2343,   2343,   2343,   2343,   2343,   2346, 
		  2355,   2355,   2355,   2358,   2358,   2366,   2375,   2376, 
		  2376,   2377,   2377,   2378,   2379,   2379,   2380,   2380, 
		  2385,   2385,   2385,   2385,   2385,   2385,   2386,   2391, 
		  2391,   2391,   2391,   2392,   2392,   2393,   2393,   2397, 
		  2397,   2402,   2403,   2404,   2404,   2414,   2423,   2423, 
		  2423,   2424,   2424,   2424,   2424,   2424,   2425,   2425, 
		  2425,   2425,   2425,   2425,   2425,   2426,   2426,   2428, 
		  2428,   2428,   2428,   2428,   2429,   2453,   2453,   2454, 
		  2454,   2454,   2455,   2456,   2456,   2457,   2457,   2458, 
		  2458,   2459,   2459,   2459,   2459,   2459,   2460,   2460, 
		  2461,   2461,   2464,   2464,   2464,   2466,   2466,   2466, 
		  2466,   2466,   2466,   2466,   2466,   2466,   2466,   2466, 
		  2466,   2466,   2467,   2468,   2469,   2469,   2469,   2469, 
		  2469,   2469,   2470,   2470,   2470,   2472,   2472,   2473, 
		  2473,   2474,   2476,   2476,   2476,   2478,   2478,   2478, 
		  2479,   2479,   2479,   2479,   2479,   2504,   2504,   2507, 
		  2508,   2517,   2517,   2517,   2517,   2517,   2517,   2518, 
		  2518,   2519,   2519,   2544,   2545,   2545,   2546,   2546, 
		  2546,   2546,   2546,   2546,   2546,   2546,   2548,   2548, 
		  2548,   2548,   2549,   2549,   2551,   2551,   2551,   2551, 
		  2576,   2576,   2576,   2576,   2576,   2576,   2576,   2576, 
		  2576,   2576,   2600,   2601,   2602,   2626,   2626,   2627, 
		  2627,   2628,   2628,   2628,   2637,   2638,   2639,   2639, 
		  2639,   2642,   2642,   2642,   2644,   2644,   2644,   2644, 
		  2644,   2644,   2644,   2652,   2661,   2662,   2662,   2663, 
		  2663,   2664,   2665,   2665,   2666,   2666,   2666,   2669, 
		  2669,   2671,   2671,   2671,   2671,   2696,   2697,   2697, 
		  2699,   2700,   2701,   2702,   2726,   2726,   2727,   2727, 
		  2727,   2727,   2730,   2730,   2732,   2732,   2732,   2732
	]

	private static let GotoJ:[UInt32] = [
		0x110059, 0x110069, 0x11006a, 0x11006b, 0x11007a, 0x11007b, 0x11007e, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x110087, 0x110088, 0x110089, 0x11006d, 0x11006e, 
		0x110089, 0x11007e, 0x110069, 0x11006a, 0x11006b, 0x110069, 0x11006a, 0x11006b, 
		0x110069, 0x11006a, 0x11006b, 0x11007e, 0x11007f, 0x110059, 0x11007b, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 0x110086, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x11007f, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110056, 0x110074, 
		0x110086, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 0x11004b, 
		0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11007f, 
		0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 0x11004d, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110087, 0x110088, 0x110089, 0x11007f, 0x11004b, 0x11008a, 
		0x11008b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11007f, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110078, 0x110075, 0x110078, 0x110056, 0x110074, 0x110086, 0x11008a, 
		0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x11008f, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 
		0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110084, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 0x11004b, 
		0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11007f, 
		0x11005a, 0x110075, 0x110078, 0x11004c, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x110055, 0x110075, 0x11004c, 0x110056, 
		0x110074, 0x110086, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 
		0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 
		0x110049, 0x11004d, 0x110065, 0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 
		0x11004c, 0x110086, 0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 
		0x110078, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 0x110086, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 
		0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 
		0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 
		0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 
		0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 0x11004d, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110065, 
		0x110071, 0x110082, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 
		0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110049, 0x11004d, 0x110065, 0x110071, 0x110048, 0x110049, 
		0x11004d, 0x110065, 0x110071, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x11004c, 0x110056, 0x110074, 
		0x110086, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x11007f, 0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 
		0x11004d, 0x110065, 0x110071, 0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 
		0x110086, 0x11004d, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 
		0x11004d, 0x110065, 0x110071, 0x110082, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x110051, 
		0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110087, 
		0x110088, 0x110089, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004a, 0x11008a, 0x11008b, 0x11008f, 0x11008a, 
		0x11008b, 0x11005f, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x11004b, 0x11008a, 0x11008b, 0x11005a, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 
		0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 
		0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004b, 0x110052, 0x11004c, 0x11004d, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004a, 0x11005a, 
		0x11008a, 0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x11008f, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 
		0x11004d, 0x110065, 0x110071, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11007c, 0x11004d, 0x110065, 0x110071, 0x11004b, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11008f, 
		0x11008a, 0x11008b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004b, 
		0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 
		0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004d, 
		0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 
		0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11005a, 0x110074, 0x11004d, 
		0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 
		0x110065, 0x110071, 0x110073, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110082, 
		0x11004b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004b, 0x11004d, 0x110065, 
		0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 0x110065, 0x110071, 
		0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x110074, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x110074, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 
		0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 
		0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 
		0x11005a, 0x11008a, 0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110074, 0x110070, 0x11004b, 0x11004b, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x11004b, 0x11008a, 0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 
		0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 
		0x11005a, 0x11008a, 0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x110078, 0x11004d, 
		0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 
		0x110055, 0x11005a, 0x11004d, 0x110062, 0x110063, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 
		0x110051, 0x110052, 0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x11004d, 0x110050, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004a, 0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 
		0x110065, 0x110067, 0x110068, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110084, 0x110085, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 
		0x110054, 0x110057, 0x110058, 0x110061, 0x110064, 0x110065, 0x110067, 0x110068, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110084, 0x11007f, 
		0x11004b, 0x11008a, 0x11008b, 0x110048, 0x110049, 0x11004d, 0x110065, 0x110071, 
		0x11007f, 0x11005a, 0x110075, 0x110078, 0x11004c, 0x110086, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x110075, 
		0x11004c, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 
		0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x11004b, 0x11008a, 0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 
		0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x11004b, 
		0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 0x110074, 0x11004d, 
		0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 
		0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110072, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 0x11004d, 0x110065, 
		0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004c, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110080, 
		0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 
		0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 
		0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 0x11005a, 0x11004d, 0x110062, 
		0x110063, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x11008a, 0x11008b, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x11008a, 0x11008b, 0x11004d, 0x110064, 0x110065, 0x11006c, 0x110071, 0x110073, 
		0x110081, 0x110082, 0x110083, 0x11004b, 0x11008a, 0x11008b, 0x110051, 0x110052, 
		0x110059, 0x11005e, 0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 
		0x11005a, 0x110052, 0x11004a, 0x11005a, 0x11004d, 0x110065, 0x110071, 0x110073, 
		0x110082, 0x11004b, 0x11004d, 0x110065, 0x110071, 0x110073, 0x110082, 0x110075, 
		0x110074, 0x11004d, 0x110065, 0x110071, 0x110082, 0x11004d, 0x110065, 0x110071, 
		0x110073, 0x110082, 0x110074, 0x110074, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110072, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004d, 0x110064, 
		0x110065, 0x11006c, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004b, 
		0x110074, 0x11008f, 0x11008a, 0x11008b, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 
		0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 
		0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 
		0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x11007e, 0x11007f, 
		0x11005a, 0x11007f, 0x11005a, 0x11007f, 0x11005a, 0x11008a, 0x11008b, 0x11008f, 
		0x11008a, 0x11008b, 0x11007f, 0x11007f, 0x11008f, 0x11008f, 0x110076, 0x110089, 
		0x110060, 0x110077, 0x110076, 0x110089, 0x110076, 0x110089, 0x110077, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005d, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x11007d, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110087, 0x110088, 0x110089, 0x11007f, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11007f, 0x11005a, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005d, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x11007d, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110078, 0x110078, 0x11008a, 0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005d, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x11007d, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 
		0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 
		0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110080, 0x11005a, 0x11004a, 0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 
		0x110057, 0x110058, 0x110059, 0x11005b, 0x11005c, 0x110061, 0x110065, 0x110068, 
		0x11006f, 0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 
		0x110089, 0x11008c, 0x110078, 0x110078, 0x11004d, 0x110064, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x110055, 0x11005a, 0x11008a, 
		0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x110051, 0x110052, 0x110059, 0x11005e, 
		0x110087, 0x110088, 0x110089, 0x11008c, 0x11004d, 0x110050, 0x110065, 0x11006c, 
		0x110071, 0x110073, 0x110081, 0x110082, 0x110083, 0x11004a, 0x11005a, 0x110052, 
		0x11004a, 0x11005a, 0x11008a, 0x11008b, 0x11008f, 0x11008a, 0x11008b, 0x11004a, 
		0x11004d, 0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 
		0x11005b, 0x11005d, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 
		0x11007d, 0x110081, 0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 
		0x110078, 0x110076, 0x110089, 0x11005a, 0x110060, 0x11005a, 0x11004a, 0x11004d, 
		0x11004e, 0x11004f, 0x110053, 0x110054, 0x110057, 0x110058, 0x110059, 0x11005b, 
		0x11005c, 0x110061, 0x110065, 0x110068, 0x11006f, 0x110071, 0x110073, 0x110081, 
		0x110082, 0x110083, 0x110087, 0x110088, 0x110089, 0x11008c, 0x110078, 0x11008a, 
		0x11008b, 0x11008f, 0x11008a, 0x11008b
	]

	private static let GotoA:[Int16] = [
		    16,     17,     18,     19,     20,     21,     22,     23, 
		    24,     25,     26,   1432,    636,    637,   1305,   1306, 
		  1307,   1285,   1284,     18,     19,   1283,     18,     19, 
		  1273,     18,     19,   1274,   1266,     16,     27,     23, 
		    24,     25,     26,     30,     31,     42,     43,     44, 
		    45,     46,     47,     48,     49,     50,   1257,   1255, 
		   370,    371,    372,    373,    388,    389,    390,   1253, 
		   392,    119,    548,   1223,    123,     52,     67,     68, 
		    69,     70,     71,     72,     73,     74,     75,     76, 
		    77,     78,     79,     80,     81,     82,     83,     84, 
		    85,     86,   1212,   1199,   1200,   1201,   1195,   1193, 
		   370,    371,    372,    373,    388,    389,    390,   1191, 
		   392,   1184,   1175,   1081,   1173,   1170,   1140,   1083, 
		  1051,     88,     93,     42,     94,     95,     96,     97, 
		    98,     99,    100,    101,    102,    103,    104,    105, 
		   106,     47,    107,     49,    108,    109,   1040,   1027, 
		  1028,   1029,   1024,    370,    371,    372,    373,   1017, 
		   126,    119,    116,    112,     52,     42,     44,    113, 
		   114,     47,    107,     49,     50,    112,     42,     44, 
		   114,    120,     49,    123,     42,     44,    114,    124, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,   1014,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		   128,    130,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    157,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1007,    636,    637,    996,    983,    984, 
		    31,    388,    389,    390,    967,    392,     42,    962, 
		    44,     45,     46,     47,     48,     49,     50,    949, 
		   940,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,    938,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,    937,    934,    933,    887,    888,    184,    171, 
		    31,    177,    178,     31,    182,     67,     68,     69, 
		    70,     71,     72,     73,     74,     75,     76,     77, 
		    78,     79,     80,     81,     82,     83,     84,     85, 
		   185,    186,    191,     42,    192,    193,    194,    195, 
		   196,    197,    198,    199,    200,    201,    202,    203, 
		   204,     47,    107,     49,    205,    206,    876,    856, 
		   857,    858,    852,    370,    371,    372,    373,    220, 
		   210,    119,    208,    112,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    216,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    211,    213,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		   214,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,    215,    218, 
		   231,    232,    233,    234,    235,    236,    237,    238, 
		   239,    848,    846,    370,    371,    372,    373,    388, 
		   389,    390,    844,    392,    842,    269,    840,    810, 
		   271,    240,     67,     68,     69,     70,     71,     72, 
		    73,     74,     75,     76,     77,     78,     79,     80, 
		    81,     82,     83,     84,     85,    241,    242,    247, 
		   231,    248,    249,    250,    251,    252,    253,    254, 
		   255,    256,    257,    258,    259,    260,    236,    261, 
		   238,    262,    263,    799,    779,    780,    781,    775, 
		   370,    371,    372,    373,    283,    274,    269,    268, 
		   264,    240,    231,    233,    265,    266,    236,    261, 
		   238,    239,    264,    231,    233,    266,    270,    238, 
		   271,    231,    233,    266,    272,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,    280, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,    275,    277,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    278,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    279, 
		   282,    231,    284,    233,    234,    235,    236,    237, 
		   238,    239,    286,    287,    299,    300,    301,    302, 
		   303,    304,    305,    306,    307,    308,    309,    774, 
		   772,    370,    371,    372,    373,    388,    389,    390, 
		   770,    392,    339,    765,    735,    341,    310,     67, 
		    68,     69,     70,     71,     72,     73,     74,     75, 
		    76,     77,     78,     79,     80,     81,     82,     83, 
		    84,     85,    311,    312,    317,    299,    318,    319, 
		   320,    321,    322,    323,    324,    325,    326,    327, 
		   328,    329,    330,    306,    331,    308,    332,    333, 
		   724,    704,    705,    706,    369,    370,    371,    372, 
		   373,    353,    344,    339,    338,    334,    310,    299, 
		   303,    335,    336,    306,    331,    308,    309,    334, 
		   299,    303,    336,    340,    308,    341,    299,    303, 
		   336,    342,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    350,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,    345,    347,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    348,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    349,    352,    231,    354, 
		   233,    234,    235,    236,    237,    238,    239,    355, 
		   356,    299,    358,    301,    302,    303,    304,    305, 
		   306,    307,    308,    309,    695,    388,    389,    390, 
		   391,    392,    375,    371,    372,    373,    377,    370, 
		   371,    372,    373,    402,    388,    389,    390,    398, 
		   392,    396,    394,    388,    389,    390,    395,    388, 
		   389,    390,    397,    392,    394,    394,    299,    494, 
		   303,    304,    305,    691,    306,    307,    308,    309, 
		   413,    414,    415,    416,    417,    418,    419,    420, 
		   421,    689,    687,    370,    371,    372,    373,    388, 
		   389,    390,    685,    392,    451,    681,    650,    453, 
		   422,     67,     68,     69,     70,     71,     72,     73, 
		    74,     75,     76,     77,     78,     79,     80,     81, 
		    82,     83,     84,     85,    423,    424,    429,    413, 
		   430,    431,    432,    433,    434,    435,    436,    437, 
		   438,    439,    440,    441,    442,    418,    443,    420, 
		   444,    445,    500,    476,    477,    478,    472,    370, 
		   371,    372,    373,    465,    456,    451,    450,    446, 
		   422,    413,    415,    447,    448,    418,    443,    420, 
		   421,    446,    413,    415,    448,    452,    420,    453, 
		   413,    415,    448,    454,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    462,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    457,    459,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		   460,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,    461,    464, 
		   231,    466,    233,    234,    235,    236,    237,    238, 
		   239,    467,    468,    299,    470,    301,    302,    303, 
		   304,    305,    306,    307,    308,    309,    299,    494, 
		   303,    304,    305,    495,    306,    307,    308,    309, 
		   413,    482,    415,    416,    417,    418,    419,    420, 
		   421,    481,    478,    413,    479,    415,    441,    480, 
		   418,    443,    420,    421,    485,    486,    478,    413, 
		   487,    415,    416,    417,    418,    419,    420,    421, 
		   485,    490,    478,    413,    491,    415,    416,    417, 
		   418,    419,    420,    421,    485,    299,    494,    303, 
		   304,    305,    498,    306,    307,    308,    309,    505, 
		   506,    507,    508,    509,    510,     25,    511,    635, 
		   636,    637,     42,    546,     44,    547,    114,     47, 
		    48,     49,     50,    526,    513,     31,    518,    519, 
		    31,    523,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    524,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,    530,    531,    532,    528,    413,    535, 
		   415,    416,    417,    418,    419,    420,    421,    534, 
		   532,    231,    533,    233,    234,    235,    236,    237, 
		   238,    239,    538,    539,    532,    413,    540,    415, 
		   416,    417,    418,    419,    420,    421,    538,    543, 
		   532,    413,    544,    415,    416,    417,    418,    419, 
		   420,    421,    538,    550,    548,     42,     44,    549, 
		   114,     47,     48,     49,     50,    548,    551,    553, 
		   558,     31,    559,    561,     31,    566,    570,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,    571,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,    573, 
		   585,    586,    587,    618,    388,    389,    390,    614, 
		   392,    590,    600,    601,    602,    607,    388,    389, 
		   390,    603,    392,    394,    299,    494,    303,    304, 
		   305,    612,    306,    307,    308,    309,    413,    608, 
		   415,    416,    417,    418,    419,    420,    421,    610, 
		   394,    299,    494,    303,    304,    305,    623,    306, 
		   307,    308,    309,    413,    619,    415,    416,    417, 
		   418,    419,    420,    421,    621,    639,     31,    640, 
		   641,     31,    660,    661,    662,    663,    664,    673, 
		   388,    389,    390,    669,    392,    667,    665,    660, 
		   661,    662,    666,    660,    661,    662,    668,    664, 
		   665,    394,    299,    494,    303,    304,    305,    678, 
		   306,    307,    308,    309,    413,    674,    415,    416, 
		   417,    418,    419,    420,    421,    676,    413,    415, 
		   682,    448,    418,    419,    420,    421,    681,    684, 
		   394,    299,    494,    303,    304,    305,    700,    306, 
		   307,    308,    309,    413,    696,    415,    416,    417, 
		   418,    419,    420,    421,    698,    299,    494,    303, 
		   304,    305,    722,    306,    307,    308,    309,    413, 
		   710,    415,    416,    417,    418,    419,    420,    421, 
		   709,    706,    299,    707,    303,    329,    708,    306, 
		   331,    308,    309,    713,    714,    706,    413,    715, 
		   415,    416,    417,    418,    419,    420,    421,    713, 
		   718,    706,    413,    719,    415,    416,    417,    418, 
		   419,    420,    421,    713,    725,    726,    507,    508, 
		   509,    510,     25,    511,     42,    730,     44,    547, 
		   114,     47,     48,     49,     50,    727,    729,    731, 
		   732,    734,    745,    746,    747,    748,    749,    758, 
		   388,    389,    390,    754,    392,    752,    750,    745, 
		   746,    747,    751,    745,    746,    747,    753,    749, 
		   750,    394,    299,    494,    303,    304,    305,    763, 
		   306,    307,    308,    309,    413,    759,    415,    416, 
		   417,    418,    419,    420,    421,    761,    299,    303, 
		   766,    336,    306,    307,    308,    309,    765,    299, 
		   768,    301,    302,    303,    304,    305,    306,    307, 
		   308,    309,    394,    299,    494,    303,    304,    305, 
		   797,    306,    307,    308,    309,    413,    785,    415, 
		   416,    417,    418,    419,    420,    421,    784,    781, 
		   231,    782,    233,    259,    783,    236,    261,    238, 
		   239,    788,    789,    781,    413,    790,    415,    416, 
		   417,    418,    419,    420,    421,    788,    793,    781, 
		   413,    794,    415,    416,    417,    418,    419,    420, 
		   421,    788,    800,    801,    507,    508,    509,    510, 
		    25,    511,     42,    805,     44,    547,    114,     47, 
		    48,     49,     50,    802,    804,    806,    807,    809, 
		   820,    821,    822,    823,    824,    833,    388,    389, 
		   390,    829,    392,    827,    825,    820,    821,    822, 
		   826,    820,    821,    822,    828,    824,    825,    394, 
		   299,    494,    303,    304,    305,    838,    306,    307, 
		   308,    309,    413,    834,    415,    416,    417,    418, 
		   419,    420,    421,    836,    231,    233,    841,    266, 
		   236,    237,    238,    239,    840,    843,    394,    299, 
		   850,    301,    302,    303,    304,    305,    306,    307, 
		   308,    309,    299,    494,    303,    304,    305,    874, 
		   306,    307,    308,    309,    413,    862,    415,    416, 
		   417,    418,    419,    420,    421,    861,    858,     42, 
		   859,     44,    203,    860,     47,    107,     49,     50, 
		   865,    866,    858,    413,    867,    415,    416,    417, 
		   418,    419,    420,    421,    865,    870,    858,    413, 
		   871,    415,    416,    417,    418,    419,    420,    421, 
		   865,    877,    878,    507,    508,    509,    510,     25, 
		   511,     42,    882,     44,    547,    114,     47,     48, 
		    49,     50,    879,    881,    883,    884,    886,    910, 
		   911,    912,    913,    914,    148,    159,    890,    891, 
		   894,    299,    494,    303,    304,    305,    899,    306, 
		   307,    308,    309,    413,    895,    415,    416,    417, 
		   418,    419,    420,    421,    897,    923,    388,    389, 
		   390,    919,    392,    917,    915,    910,    911,    912, 
		   916,    910,    911,    912,    918,    914,    915,    394, 
		   299,    494,    303,    304,    305,    928,    306,    307, 
		   308,    309,    413,    924,    415,    416,    417,    418, 
		   419,    420,    421,    926,    148,    159,    890,    935, 
		   165,    888,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,    946,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,    941,    943,    147,    148,    149,    150, 
		   151,    152,    153,    154,    155,    156,    944,    158, 
		   159,    160,    161,    162,    163,    164,    165,    166, 
		   167,    168,     25,    169,    945,    948,    231,    950, 
		   233,    234,    235,    236,    237,    238,    239,    951, 
		   952,    956,     31,    957,    959,     31,    299,    965, 
		   301,    302,    303,    304,    305,    306,    307,    308, 
		   309,    394,    971,    980,    976,    413,    977,    415, 
		   416,    417,    418,    419,    420,    421,    979,    299, 
		   494,    303,    304,    305,    994,    306,    307,    308, 
		   309,    413,    986,    415,    416,    417,    418,    419, 
		   420,    421,    985,     31,    897,    989,     31,    413, 
		   990,    415,    416,    417,    418,    419,    420,    421, 
		   897,    992,     31,    997,    998,    507,    508,    509, 
		   510,     25,    511,     42,   1002,     44,    547,    114, 
		    47,     48,     49,     50,    999,   1001,   1003,   1004, 
		  1006,   1009,     31,   1010,   1011,     31,   1016,    231, 
		  1018,    233,    234,    235,    236,    237,    238,    239, 
		  1019,   1020,    299,   1022,    301,    302,    303,    304, 
		   305,    306,    307,    308,    309,    413,   1033,    415, 
		   416,    417,    418,    419,    420,    421,   1032,   1029, 
		    42,   1030,     44,    105,   1031,     47,    107,     49, 
		    50,    865,   1036,   1029,    413,   1037,    415,    416, 
		   417,    418,    419,    420,    421,    865,   1039,   1029, 
		  1041,   1042,    507,    508,    509,    510,     25,    511, 
		    42,   1046,     44,    547,    114,     47,     48,     49, 
		    50,   1043,   1045,   1047,   1048,   1050,     67,     68, 
		    69,     70,     71,     72,     73,     74,     75,     76, 
		    77,     78,     79,     80,     81,     82,     83,     84, 
		    85,   1052,   1053,   1058,     68,   1059,   1060,   1061, 
		  1062,   1063,   1064,   1065,   1066,   1067,   1068,   1069, 
		  1070,   1071,     82,   1072,     84,   1073,   1074,   1129, 
		  1116,   1117,   1118,   1113,    370,    371,    372,    373, 
		  1106,   1097,   1081,   1095,   1075,   1051,     68,   1077, 
		  1078,   1079,     82,   1072,     84,   1080,   1087,   1081, 
		  1075,     68,   1077,   1079,   1082,     84,   1083,     68, 
		  1077,   1079,   1084,    299,    494,    303,    304,    305, 
		  1092,    306,    307,    308,    309,    413,   1088,    415, 
		   416,    417,    418,    419,    420,    421,   1090,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,   1103,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,   1098, 
		  1100,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,   1101,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,   1102,   1105,    231,   1107,    233,    234,    235, 
		   236,    237,    238,    239,   1108,   1109,    299,   1111, 
		   301,    302,    303,    304,    305,    306,    307,    308, 
		   309,    413,   1122,    415,    416,    417,    418,    419, 
		   420,    421,   1121,   1118,     68,   1119,   1077,   1070, 
		  1120,     82,   1072,     84,   1080,   1090,   1125,   1118, 
		   413,   1126,    415,    416,    417,    418,    419,    420, 
		   421,   1090,   1128,   1118,   1130,   1131,    507,    508, 
		   509,    510,     25,    511,     42,   1135,     44,    547, 
		   114,     47,     48,     49,     50,   1132,   1134,   1136, 
		  1137,   1139,   1150,   1151,   1152,   1153,   1154,   1163, 
		   388,    389,    390,   1159,    392,   1157,   1155,   1150, 
		  1151,   1152,   1156,   1150,   1151,   1152,   1158,   1154, 
		  1155,    394,    299,    494,    303,    304,    305,   1168, 
		   306,    307,    308,    309,    413,   1164,    415,    416, 
		   417,    418,    419,    420,    421,   1166,     68,   1077, 
		  1171,   1079,     82,     83,     84,   1080,   1170,    147, 
		   148,    149,    150,    151,    152,    153,    154,    155, 
		   156,   1181,    158,    159,    160,    161,    162,    163, 
		   164,    165,    166,    167,    168,     25,    169,   1176, 
		  1178,    147,    148,    149,    150,    151,    152,    153, 
		   154,    155,    156,   1179,    158,    159,    160,    161, 
		   162,    163,    164,    165,    166,    167,    168,     25, 
		   169,   1180,   1183,    231,   1185,    233,    234,    235, 
		   236,    237,    238,    239,   1186,   1187,    299,   1189, 
		   301,    302,    303,    304,    305,    306,    307,    308, 
		   309,    394,    231,   1196,    233,    234,    235,    236, 
		   237,    238,    239,    413,   1205,    415,    416,    417, 
		   418,    419,    420,    421,   1204,   1201,     68,   1202, 
		  1077,     80,   1203,     82,     83,     84,   1080,   1090, 
		  1208,   1201,    413,   1209,    415,    416,    417,    418, 
		   419,    420,    421,   1090,   1211,   1201,   1213,   1214, 
		   507,    508,    509,    510,     25,    511,     42,   1218, 
		    44,    547,    114,     47,     48,     49,     50,   1215, 
		  1217,   1219,   1220,   1222,   1233,   1234,   1235,   1236, 
		  1237,   1246,    388,    389,    390,   1242,    392,   1240, 
		  1238,   1233,   1234,   1235,   1239,   1233,   1234,   1235, 
		  1241,   1237,   1238,    394,    299,    494,    303,    304, 
		   305,   1251,    306,    307,    308,    309,    413,   1247, 
		   415,    416,    417,    418,    419,    420,    421,   1249, 
		   394,   1262,   1263,     31,   1269,    147,    148,    149, 
		   150,    151,    152,    153,    154,    155,    156,   1270, 
		   158,    159,    160,    161,    162,    163,    164,    165, 
		   166,    167,    168,     25,    169,   1272,   1278,   1275, 
		  1277,   1279,   1281,   1286,   1288,   1291,     31,   1292, 
		  1294,     31,   1423,   1316,   1310,   1314,   1318,   1319, 
		  1331,   1323,   1329,   1319,   1325,   1319,   1328,   1338, 
		   148,   1339,   1340,   1341,   1342,   1343,   1344,   1345, 
		  1346,   1347,   1348,    159,   1349,   1350,   1351,    163, 
		  1352,    164,    165,   1353,   1354,   1355,     25,   1356, 
		  1413,    636,    637,   1402,     42,   1400,     44,     45, 
		    46,     47,     48,     49,     50,   1387,   1378,   1338, 
		   148,   1339,   1340,   1341,   1342,   1343,   1344,   1345, 
		  1346,   1376,   1348,    159,   1349,   1350,   1351,    163, 
		  1352,    164,    165,   1353,   1354,   1355,     25,   1356, 
		  1375,   1372,   1358,     31,   1363,   1364,     31,   1338, 
		   148,   1339,   1340,   1341,   1342,   1343,   1344,   1345, 
		  1346,   1368,   1348,    159,   1349,   1350,   1351,    163, 
		  1352,    164,    165,   1353,   1354,   1355,     25,   1356, 
		   147,    148,    149,    150,    151,    152,    153,    154, 
		   155,    156,   1384,    158,    159,    160,    161,    162, 
		   163,    164,    165,    166,    167,    168,     25,    169, 
		  1379,   1381,    147,    148,    149,    150,    151,    152, 
		   153,    154,    155,    156,   1382,    158,    159,    160, 
		   161,    162,    163,    164,    165,    166,    167,    168, 
		    25,    169,   1383,   1386,    231,   1388,    233,    234, 
		   235,    236,    237,    238,    239,   1389,   1390,   1394, 
		    31,   1395,   1397,     31,   1403,   1404,    507,    508, 
		   509,    510,     25,    511,     42,   1408,     44,    547, 
		   114,     47,     48,     49,     50,   1405,   1407,   1409, 
		  1410,   1412,   1415,     31,   1416,   1417,     31,   1338, 
		   148,   1339,   1340,   1341,   1342,   1343,   1344,   1345, 
		  1346,   1421,   1348,    159,   1349,   1350,   1351,    163, 
		  1352,    164,    165,   1353,   1354,   1355,     25,   1356, 
		  1422,   1425,   1319,   1431,   1426,   1428,    147,    148, 
		   149,    150,    151,    152,    153,    154,    155,    156, 
		  1429,    158,    159,    160,    161,    162,    163,    164, 
		   165,    166,    167,    168,     25,    169,   1430,   1434, 
		    31,   1435,   1436,     31
	]


	
    var semantic : SemanticHandler = SemanticHandler()
    var params : [Symbol] = []
    var arguments : [(String, TypeSymbol)] = []
    var linkedListArray = ArrayLinkedList()
    var r : Int = 1
    var currentFuncName : String = ""
    

	
    func sendVariableRepeated(id : String){
        error(code: CompilerParser.VAR_ALREADY_DECLARED, data: ["varRep": id as AnyObject])
    }

    func faltanOperandos(){
        error(code: CompilerParser.BAD_OPERANDOS, data: [:])
    }

    func badJumpStackEmpty(){
        error(code: CompilerParser.JUMP_STACK_EMPTY, data: [:])
    }

    func constantAlreadyAssigned(id: String){
        error(code: CompilerParser.CONSTANT_ASSIGNED, data: ["id":id as AnyObject])
    }

    func notArray(id: String){
        error(code: CompilerParser.NOT_ARRAY, data: ["id":id as AnyObject])
    }

    func sendInvalidOperationBetween(t1 : TypeSymbol, t2: TypeSymbol){
        error(code: CompilerParser.TYPE_MISMATCH, data: ["t1": NSNumber(value: t1.rawValue) as AnyObject, "t2": NSNumber(value: t2.rawValue) as AnyObject])
    }

    func sendUndeclareVariable(id: NSString) {
        error(code: CompilerParser.UNDECLARED_VAR, data: ["undeclaredVar": id as NSString])
    }

    func sendTypeMismatch() {
        error(code: CompilerParser.TYPE_MISMATCH, data: [:])
    }
    
    func sendBadParametersForFunc(id: NSString){
        error(code: CompilerParser.BAD_PARAMETERS, data: ["id": id])
    }



	/*
	 *	Error Values
	 */

	public static let ERRORMASK_WARNING = 0x8000
	public static let ERROR_SYNTAX = 0x0001
	public static let ERROR_MISSINGTOKEN = 0x0002
	public static let ERROR_MISSINGTOKENS = 0x0003
	public static let ERROR_STARTERRORID = 0x0100

    
    static let ERROR_UNIMPLEMENTED = (CompilerParser.ERROR_STARTERRORID+1)
    static let VAR_ALREADY_DECLARED = (CompilerParser.ERROR_STARTERRORID+2)
    static let TYPE_MISMATCH = (CompilerParser.ERROR_STARTERRORID+3)
    static let UNDECLARED_VAR = (CompilerParser.ERROR_STARTERRORID+4)
    static let BAD_PARAMETERS = (CompilerParser.ERROR_STARTERRORID+5)
    static let BAD_OPERANDOS = (CompilerParser.ERROR_STARTERRORID+6)
    static let JUMP_STACK_EMPTY = (CompilerParser.ERROR_STARTERRORID+7)
    static let CONSTANT_ASSIGNED = (CompilerParser.ERROR_STARTERRORID+8)
    static let NOT_ARRAY = (CompilerParser.ERROR_STARTERRORID+8)


	/*
	 *	Stack
	 */

	private struct Stack {
		var state: UInt16
		var line: Int
		var column: Int
		var filename: String?
		var value: AnyObject?

		init()
		{
			state = 0
			line = 0
			column = 0
			filename = nil
			value = nil
		}
	}

	/*
	 *	Internal values
	 */

	private var stack: [Stack]
	private var lex: OCLexInput

	// Error support
	private var success: Bool
	private var errorCount: Int

	private var hasError: Bool
	private var errorLine: Int
	private var errorColumn: Int
	private var errorFileName: String?

	// Delegate
	public var errorDelegate: CompilerParserError?


	/*
	 *	Startup
	 */

	public init(lexer: OCLexInput)
	{
		lex = lexer

		stack = Array()
		success = true
		errorCount = 0;
		hasError = false
		errorLine = 0
		errorColumn = 0
		errorFileName = nil
		errorDelegate = nil

        
    semantic.delegate = self

	}

	deinit {
	    
	}

	/*
	 *	Process production rule. This processes the production rule and creates
	 *	a new stack state with the rule reduction.
	 */

	private func processReduction(_ rule: Int16) -> CompilerParser.Stack
	{
		// Get production len, for translating $1...$N into something useful
		let pos = stack.count - Int(CompilerParser.RuleLength[Int(rule)])

		// Set up initial state.
		var s = CompilerParser.Stack()

		// File position of reduced rule is first token of the symbols reduced
		let fs = stack[pos]
		s.filename = fs.filename;
		s.line = fs.line;
		s.column = fs.column;

		do {
			try reduction(rule: rule, at: pos, with: &s)
		} catch {
			// Ignore errors. Can happen when the stack is in an error state
		}

		return s
	}

	private func reduction(rule: Int16, at pos: Int, with s: inout CompilerParser.Stack) throws
	{
		// Now process production.
		//
		// Note that $$ translated into (s.value), and
		// $n translates into ((<type> *)(self.stack[pos+(n-1)])), where <type>
		// is the declared type of the token or production rule.

		// Note: value is AnyObject, but we use as! cast to coerce, and assume
		// the exception is caught and ignored if it all goes south.
		switch rule {

        // Production rules
            // (110046) $accept : programa $end
            // (110047) array : arrayA 
            // (110047) array : arrayA arrayA 
            // (110048) arrayExpressions : arrayFactor SEMICOLON arrayExpressions 
            // (110048) arrayExpressions : arrayFactor 
            // (110049) arrayFactor : factor COMMA arrayFactor 
            // (110049) arrayFactor : factor 
            // (11004a) asignar : ID varAssign 
            case 7:
                semantic.saveValueVariable(id : (stack[pos].value as! NSString) as String)
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE varAssign 
            case 8:
                semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID LSBRAKE expresion RSBRAKE LSBRAKE expresion RSBRAKE varAssign 
            case 9:
                semantic.assignOneCellArray((stack[pos].value as! NSString));
    
            // (11004a) asignar : ID assMulti varAssign 
            case 10:
                semantic.assignOneCellArray((stack[pos].value as! NSString));
        semantic.assignToPointer();
    
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE 
            // (11004b) assMulti : LSBRAKE expresion RSBRAKE assMulti 
            // (11004c) booleanOperators : AND 
            case 13:
                semantic.addOperator(op: Operator.and)
            // (11004c) booleanOperators : OR 
            case 14:
                semantic.addOperator(op: Operator.or)
            // (11004d) booleanValue : T 
            case 15:
                s.value = (stack[pos].value as! NSNumber)
            // (11004d) booleanValue : F 
            case 16:
                s.value = (stack[pos].value as! NSNumber)
            // (11004e) cicloForEach : forEach popNode 
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP1 cicloForIteradorA cicloForIteradorP2 asignar RPAREN cuerpo 
            case 18:
                semantic.whileP3()
   
            // (11004f) cicloForIterador : FOR startNode cicloForIteradorP2 asignar RPAREN cuerpo 
            case 19:
                semantic.whileP3()
   
            // (110050) cicloForIteradorA : hiperExpression 
            // (110051) cicloForIteradorP1 : vars 
            case 21:
                semantic.whileP1()
   
            // (110052) cicloForIteradorP2 : SEMICOLON 
            case 22:
                semantic.whileP2()
   
            // (110053) cicloWhile : cicloWhileP1 startNode expresion cicloWhileP2 cuerpo 
            case 23:
                semantic.whileP3()
   
            // (110054) cicloWhileP1 : WHILE 
            case 24:
                semantic.whileP1()
   
            // (110055) cicloWhileP2 : RPAREN 
            case 25:
                semantic.whileP2();
   
            // (110056) comparisonOperators : EQ EQ 
            case 26:
                semantic.addOperator(op: Operator.equal)
            // (110056) comparisonOperators : NEQ 
            case 27:
                semantic.addOperator(op: Operator.different)
            // (110056) comparisonOperators : LT 
            case 28:
                semantic.addOperator(op: Operator.lessThan)
            // (110056) comparisonOperators : LE 
            case 29:
                semantic.addOperator(op: Operator.lessOrEqualThan)
            // (110056) comparisonOperators : GT 
            case 30:
                semantic.addOperator(op: Operator.greaterThan)
            // (110056) comparisonOperators : GE 
            case 31:
                semantic.addOperator(op: Operator.greaterOrEqualThan)
            // (110057) condicion : condicionA cuerpo 
            case 32:
                semantic.endCondicional() 
            // (110057) condicion : condicionA cuerpo startNodeElse cuerpo 
            case 33:
                semantic.endCondicional() 
            // (110058) condicionA : IF startNode expresion RPAREN 
            case 34:
                semantic.addCondicional()
   
            // (110059) const : CONST tipo ID varAssign SEMICOLON 
            case 35:
                semantic.insertSymbolToST((stack[pos + 2].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 2].value as! NSString) as String)
        
            // (11005a) cuerpo : LBRACE cuerpoListaA popNode 
            // (11005b) cuerpoLista : vars 
            // (11005b) cuerpoLista : asignar SEMICOLON 
            // (11005b) cuerpoLista : llamada SEMICOLON 
            // (11005b) cuerpoLista : leer SEMICOLON 
            // (11005b) cuerpoLista : escribir SEMICOLON 
            // (11005b) cuerpoLista : condicion 
            // (11005b) cuerpoLista : cicloWhile 
            // (11005b) cuerpoLista : cicloForEach 
            // (11005b) cuerpoLista : cicloForIterador 
            // (11005b) cuerpoLista : ternary SEMICOLON 
            // (11005b) cuerpoLista : RTN expresion SEMICOLON 
            case 47:
                semantic.returnFunctions()
            // (11005b) cuerpoLista : error 
            case 48:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11005c) cuerpoListaA : cuerpoLista 
            // (11005c) cuerpoListaA : cuerpoLista cuerpoListaA 
            case 50:
                s.value = (stack[pos].value) as AnyObject?
            // (11005d) cuerpoReturn : cuerpoLista cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON cuerpoReturn 
            // (11005d) cuerpoReturn : returnCuerpo SEMICOLON 
            // (11005e) declareVarCiclo : INT ID COLON factor range factor 
            case 54:
                semantic.addForEachRange(range: (stack[pos + 4].value as! NSString) as String, id : (stack[pos + 1].value as! NSString) as String);
            s.value = (stack[pos + 1].value as! NSString);
        
            // (11005f) endForEach : LBRACE cuerpoListaA 
            // (110060) endParams : RPAREN 
            case 56:
                semantic.returnSymbolByID(currentFuncName).params = params.reversed()
    
            // (110061) escribir : PRINT LPAREN escribirA RPAREN 
            case 57:
                semantic.addPrint()
            // (110062) escribirA : escribirB 
            // (110062) escribirA : escribirB COMMA escribirA 
            // (110063) escribirB : expresion 
            // (110064) expresion : hiperExpression 
            // (110064) expresion : llamada 
            // (110064) expresion : LBRACE arrayExpressions RBRACE 
            // (110065) factor : CTEI 
            case 64:
                semantic.addConstantInteger((stack[pos].value as! NSNumber))
        
            // (110065) factor : CTEF 
            case 65:
                semantic.addConstantFloat((stack[pos].value as! NSNumber))
       
            // (110065) factor : booleanValue 
            case 66:
                semantic.addConstantBool((stack[pos].value as! NSNumber))
       
            // (110065) factor : CTES 
            case 67:
                semantic.addConstantString((stack[pos].value as! NSString))
       
            // (110065) factor : ID 
            case 68:
                semantic.addIDAsQuadruple((stack[pos].value as! NSString))
       
            // (110065) factor : ID assMulti 
            case 69:
                semantic.readOneCellArray((stack[pos].value as! NSString));
       
            // (110065) factor : CTEC 
            case 70:
                semantic.addConstantChar((stack[pos].value as! NSString))
       
            // (110065) factor : llamada 
            // (110065) factor : LPAREN megaExpression RPAREN 
            // (110065) factor : NLL 
            // (110066) flujoBloque : asignar SEMICOLON 
            // (110066) flujoBloque : llamada 
            // (110066) flujoBloque : escribir 
            // (110066) flujoBloque : condicion 
            // (110066) flujoBloque : cicloWhile 
            // (110066) flujoBloque : cicloForIterador 
            // (110066) flujoBloque : cicloForEach 
            // (110066) flujoBloque : factor 
            // (110066) flujoBloque : ternary 
            // (110067) flujoBloqueTernary : asignar 
            // (110067) flujoBloqueTernary : llamada 
            // (110067) flujoBloqueTernary : escribir 
            // (110067) flujoBloqueTernary : condicion 
            // (110067) flujoBloqueTernary : cicloWhile 
            // (110067) flujoBloqueTernary : cicloForIterador 
            // (110067) flujoBloqueTernary : cicloForEach 
            // (110067) flujoBloqueTernary : factor 
            // (110067) flujoBloqueTernary : ternary 
            // (110068) forEach : FOR startNode VAR ID COLON ID RPAREN cuerpo 
            // (110068) forEach : FOR startNode declareVarCiclo RPAREN endForEach 
            case 93:
                semantic.endForEachRange(id: (stack[pos + 2].value as! NSString))
            // (110069) funciones : funcionesVoid 
            // (110069) funciones : funcionesReturn 
            // (110069) funciones : funcionesVoid funciones 
            // (110069) funciones : funcionesReturn funciones 
            // (11006a) funcionesReturn : FUNC idFuncReturn startNode params endParams LBRACE cuerpoReturn popNode 
            case 98:
                semantic.endFunction()
           self.params.removeAll()
       
            // (11006a) funcionesReturn : FUNC idFuncReturn startNode RPAREN LBRACE cuerpoReturn popNode 
            case 99:
                semantic.endFunction()
       
            // (11006a) funcionesReturn : error 
            case 100:
                error(code: CompilerParser.ERROR_SYNTAX) 
            // (11006b) funcionesVoid : FUNC idFunc startNode params endParams cuerpo 
            case 101:
                semantic.endFunction()
           self.params.removeAll()
       
            // (11006b) funcionesVoid : FUNC idFunc startNode RPAREN cuerpo 
            case 102:
                semantic.endFunction()
       
            // (11006c) hiperExpression : superExpression 
            // (11006c) hiperExpression : hiperExpression booleanOperators hiperExpression 
            case 104:
                semantic.addQuadruple()
            // (11006d) idFunc : ID 
            case 105:
                currentFuncName = (stack[pos].value as! NSString) as String
        semantic.insertSymbolToST((stack[pos].value as! NSString), true, false, .void, .method)
        semantic.startFunction((stack[pos].value as! NSString));
        s.value = (stack[pos].value as! NSString)
            // (11006e) idFuncReturn : tipoSimple ID 
            case 106:
                currentFuncName = (stack[pos + 1].value as! NSString) as String;
        semantic.startFunction((stack[pos + 1].value as! NSString));
        semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, .method);
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 1].value as! NSString)
            // (11006e) idFuncReturn : tipoSimple varsPrimaArreglosMulti ID 
            case 107:
                currentFuncName = (stack[pos + 2].value as! NSString) as String;
        semantic.startFunction((stack[pos + 2].value as! NSString));
        semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, type: TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void, kind: .method);
        linkedListArray = ArrayLinkedList();
        r = 1;
        semantic.setCurrentCuadruple();
        s.value = (stack[pos + 2].value as! NSString);
    
            // (11006f) leer : INPUT LPAREN leerR RPAREN 
            // (110070) leerR : ID 
            case 109:
                semantic.readID((stack[pos].value as! NSString))

            // (110070) leerR : leerR COMMA ID 
            case 110:
                semantic.readID((stack[pos + 2].value as! NSString))

            // (110070) leerR : ID assMulti 
            case 111:
                semantic.readIDMulti((stack[pos].value as! NSString))

            // (110070) leerR : leerR COMMA ID assMulti 
            case 112:
                semantic.readIDMulti((stack[pos + 2].value as! NSString))

            // (110071) llamada : ID LPAREN llamadaA RPAREN 
            case 113:
                semantic.functionCall((stack[pos].value as! NSString), args: arguments);
                arguments.removeAll()
             
            // (110071) llamada : ID LPAREN RPAREN 
            case 114:
                semantic.functionCall((stack[pos].value as! NSString), args: [])
        
            // (110072) llamadaA : expresion 
            case 115:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110072) llamadaA : expresion COMMA llamadaA 
            case 116:
                let arg = (semantic.operationStack.getLastOperand() ?? ("",.void))
                arguments.append(arg)
            
            // (110073) megaExpression : termino 
            // (110073) megaExpression : megaExpression o1 termino 
            case 118:
                semantic.addQuadruple()
            // (110074) o1 : PLUS 
            case 119:
                semantic.addOperator(op: Operator.sum)
            // (110074) o1 : MINUS 
            case 120:
                semantic.addOperator(op:Operator.minus)
            // (110075) o2 : TIMES 
            case 121:
                semantic.addOperator(op: Operator.multiply)
            // (110075) o2 : DIVIDE 
            case 122:
                semantic.addOperator(op: Operator.division)
            // (110076) params : tipoSimple ID 
            case 123:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110076) params : tipoSimple ID COMMA params 
            case 124:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), true, false, type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
            
            // (110076) params : tipoSimple ID paramsArreglosMulti COMMA params 
            case 125:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110076) params : tipoSimple ID paramsArreglosMulti 
            case 126:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : true, type: type);
                let symbol = semantic.returnSymbolByID((stack[pos + 1].value as! NSString) as String);
                params.append(symbol);
                linkedListArray = ArrayLinkedList();
                r = 1;
            
            // (110077) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 127:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
                r = (lS) * r
                linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
            
            // (110077) paramsArreglosMulti : LSBRAKE CTEI RSBRAKE paramsArreglosMulti 
            case 128:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (110078) popNode : RBRACE 
            case 129:
                semantic.endScope()
   
            // (110079) printOper : PRINT 
            case 130:
                semantic.addOperator(op: Operator.print)
            // (11007a) programa : programaPrimo funciones startMain startNode RPAREN cuerpo 
            case 131:
                semantic.endFunction()
            // (11007a) programa : funciones startMain startNode RPAREN cuerpo 
            case 132:
                semantic.endFunction()
            // (11007a) programa : programaPrimo startMain startNode RPAREN cuerpo 
            case 133:
                semantic.endFunction()
            // (11007a) programa : startMain startNode RPAREN cuerpo 
            case 134:
                semantic.endFunction()
            // (11007b) programaPrimo : vars programaPrimo 
            // (11007b) programaPrimo : vars 
            // (11007c) range : CPTRG 
            case 137:
                s.value = (stack[pos].value as! NSString)
            // (11007c) range : INCPTRG 
            case 138:
                s.value = (stack[pos].value as! NSString)
            // (11007d) returnCuerpo : RTN expresion 
            case 139:
                semantic.returnFunctions()
            // (11007e) startMain : MAIN 
            case 140:
                semantic.insertSymbolToST("main", true, false, .void, .method)
        semantic.startFunction("main" as NSString)
        semantic.foundMain()
    
            // (11007f) startNode : LPAREN 
            case 141:
                semantic.startScope()
   
            // (110080) startNodeElse : ELSE 
            case 142:
                semantic.startScope()
        semantic.addElse()
    
            // (110081) superExpression : megaExpression 
            // (110081) superExpression : megaExpression comparisonOperators megaExpression 
            case 144:
                semantic.addQuadruple()
            // (110081) superExpression : ternary 
            // (110082) termino : factor 
            // (110082) termino : factor o2 megaExpression 
            case 147:
                semantic.addQuadruple()
            // (110083) ternary : superExpression ternaryTrue ternaryBloque ternaryFalse ternaryBloque 
            case 148:
                semantic.endTernaryOperator()
            // (110084) ternaryBloque : flujoBloqueTernary 
            // (110084) ternaryBloque : expresion 
            // (110085) ternaryFalse : COLON 
            case 151:
                semantic.colonTernaryOperator()
            // (110086) ternaryTrue : QM 
            case 152:
                semantic.addQuadrupleWithTernaryOperator()
            // (110087) tipo : tipoSimple 
            case 153:
                s.value = (stack[pos].value as! NSNumber)
            // (110087) tipo : tipoCompuesto 
            case 154:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : INTEGERCLASS 
            case 155:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : STRINGCLASS 
            case 156:
                s.value = (stack[pos].value as! NSNumber)
            // (110088) tipoCompuesto : ID 
            case 157:
                s.value = NSNumber(integerLiteral: TypeSymbol.ID.rawValue)
            // (110089) tipoSimple : INT 
            case 158:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : FLOAT 
            case 159:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : DOUBLE 
            case 160:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : CHAR 
            case 161:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : BOOLEAN 
            case 162:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : STR 
            case 163:
                s.value = (stack[pos].value as! NSNumber)
            // (110089) tipoSimple : VOID 
            case 164:
                s.value = (stack[pos].value)
            // (11008a) varAssign : varEqAssign expresion 
            // (11008b) varEqAssign : EQ 
            case 166:
                semantic.addOperator(op: .assign)
            // (11008c) vars : VAR ID SEMICOLON 
            case 167:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false)
    
            // (11008c) vars : tipo VAR ID SEMICOLON 
            case 168:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
        semantic.insertSymbolToST((stack[pos + 2].value as! NSString), false, false, type)
    
            // (11008c) vars : VAR ID varsPrimaArreglosMulti SEMICOLON 
            case 169:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false);
            linkedListArray = ArrayLinkedList();
            r = 1;
        
            // (11008c) vars : VAR ID varAssign SEMICOLON 
            case 170:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String);
        
            // (11008c) vars : VAR ID varsPrimaArreglosMulti varAssign SEMICOLON 
            case 171:
                semantic.insertArrayMultiDimToST((stack[pos + 1].value as! NSString), linkedListArray, r: r, const : false);
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 1].value as! NSString));
        
            // (11008c) vars : tipo VAR ID varsPrimaArreglosMulti varAssign SEMICOLON 
            case 172:
                let type = TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void
            semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, const : false, type : type);
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 2].value as! NSString));
        
            // (11008c) vars : tipoCompuesto ID varAssign SEMICOLON 
            case 173:
                semantic.insertSymbolToST((stack[pos + 1].value as! NSString), false, false, TypeSymbol.init(rawValue: (stack[pos].value as! NSNumber).intValue) ?? .void);
            semantic.saveValueVariable(id : (stack[pos + 1].value as! NSString) as String)
        
            // (11008c) vars : CONST tipo ID varsPrimaArreglosMulti varAssign SEMICOLON 
            case 174:
                semantic.insertArrayMultiDimToST((stack[pos + 2].value as! NSString), linkedListArray, r: r, const : true, type:  TypeSymbol.init(rawValue: (stack[pos + 1].value as! NSNumber).intValue) ?? .void, (stack[pos + 3].value) as! (NSNumber, NSNumber));
            linkedListArray = ArrayLinkedList();
            r = 1;
            semantic.assignArray((stack[pos + 2].value as! NSString));
        
            // (11008c) vars : const 
            // (11008d) varsPrima : EQ LBRACE expresion RBRACE 
            // (11008d) varsPrima : EQ LBRACE expresion COMMA RBRACE 
            // (11008e) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE 
            case 178:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r

        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r: r))
        s.value = ((stack[pos + 1].value as! NSNumber), 1) as! AnyObject
    
            // (11008e) varsPrimaArreglos : LSBRAKE CTEI RSBRAKE LSBRAKE CTEI RSBRAKE 
            case 179:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
   
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
        s.value = ((stack[pos + 1].value as! NSNumber), (stack[pos + 4].value as! NSNumber)) as! AnyObject
    
            // (11008f) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE 
            case 180:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    
            // (11008f) varsPrimaArreglosMulti : LSBRAKE CTEI RSBRAKE varsPrimaArreglosMulti 
            case 181:
                let lS = (stack[pos + 1].value as! NSNumber).intValue
        r = (lS) * r
        linkedListArray.push(ArrayNode(limSup : lS, m: 1, dim : 1, r : r))
    

			default:
				break
		}
	}

	private func actionForState(_ state: UInt16, token t: Int) -> Int
	{
		var min,max,mid: Int

		let token = (t == -1) ? CompilerParser.K_EOFTOKEN : t

		/* Find range */
		min = Int(CompilerParser.ActionI[Int(state)])
		max = Int(CompilerParser.ActionI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.ActionJ[mid]
			if token == j {
				return Int(CompilerParser.ActionA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Look up the goto value for the state and token (production rule) provided.
	 *	Operates the same as actionForState, except we look in the goto table.
	 *	In teory I guess we could combine these two tables (as productions and
	 *	tokens do not overlap).
	 */

	private func goto(state: UInt16, production token: UInt32) -> Int
	{
		var min,max,mid: Int

		/* Find range */
		min = Int(CompilerParser.GotoI[Int(state)])
		max = Int(CompilerParser.GotoI[Int(state)+1])

		/* Binary search for value in ja */
		while min < max {
			mid = (min + max)/2
			let j = CompilerParser.GotoJ[mid]
			if token == j {
				return Int(CompilerParser.GotoA[mid])
			} else if token < j {
				max = mid
			} else {
				min = mid + 1
			}
		}
		return Int.max
	}

	/*
	 *	Errors. This formats and prints the specified error
	 */

	private func error(code: Int, data: [String: AnyObject])
	{
		if errorDelegate == nil {	// No error handling, ignore.
			return
		}
		if errorCount > 0 {			// skip until synced on 3 shifts
			return
		}

		// Call delegate with current token position
		// Token position is the topmost symbol

		if hasError {
			errorDelegate?.error(parser: self, line: errorLine, column: errorColumn, filename: errorFileName, errorCode: code, data: data)
		} else {
			if let top = stack.last {
				errorDelegate?.error(parser: self, line: top.line, column: top.column, filename: top.filename, errorCode: code, data: data)
			}
		}

		if 0 == (code & CompilerParser.ERRORMASK_WARNING) {
			success = false
			errorCount = 3
		}
	}

	private func error(code: Int)
	{
		error(code: code, data: [:])
	}

	private func errorOK()
	{
		errorCount = 0
	}

	private func tokenToString(_ token: UInt32) -> String
	{
		if token >= CompilerParser.K_FIRSTTOKEN {
			return CompilerParser.TokenArray[Int(token) - CompilerParser.K_FIRSTTOKEN]
		} else {
			return String.init(Unicode.Scalar(token) ?? Unicode.Scalar.init(UInt8(32)))
		}
	}

	private func reduce(action: Int16) -> Bool
	{
		// Determine the new state we're transitioning to.
		let production = CompilerParser.RuleProduction[Int(action)]
		let length = CompilerParser.RuleLength[Int(action)]

		// We pull the state we'd have after popping the stack.
		let statep = stack[stack.count - Int(length) - 1].state

		// Calculate the state we should transition to
		let newState = goto(state: statep, production: production)
		if newState == Int.max {
			return false
		}

		// Process reduction rule
		var state = processReduction(action)

		// Update state
		state.state = UInt16(newState)

		// Pop the stack
		stack.removeSubrange(stack.count - Int(length) ..< stack.count)

		// Push new state
		stack.append(state)

		// Clear error marker
		hasError = false

		// Return success
		return true
	}



	/*
	 *	Parser engine. Returns NO if there was an error during processing. Note
	 *	that as we uncover errors we call our delegate for error handling. This
	 *	implements the algorithm described in the Dragon Book, Algorithm 4.7.
	 */

	public func parse() -> Bool
	{
		var s: CompilerParser.Stack
		var a: Int

		/*
		 *	Step 1: reset and push the empty state.
		 */

		success = true
		stack = []

		hasError = false
		errorCount = 0

		s = CompilerParser.Stack()
		s.state = CompilerParser.K_STARTSTATE
		s.filename = lex.filename
		s.line = lex.line
		s.column = lex.column

		stack.append(s)

		/*
		 *	Now repeat forever:
		 */

		a = lex.lex()
		while true {
			s = stack.last!

			/*
			 *	Determine if this is the end state. If so, then we immediately
			 *	quit. We assume the user has set the production rule at the
			 *	top, so we can simply drop the stack
			 */

			if s.state == CompilerParser.K_ACCEPTSTATE {
				stack.removeAll()
				return success
			}

			/*
			 *	Now determine the action and shift, reduce or handle error as
			 *	appropriate
			 */

			var action = actionForState(s.state, token: a)
			var foundError = false

			if action == Int.max {
				/*
				 *	Handle error. First, note we have an error, and note the
				 *	symbol on which our error took place.
				 */

				success = false
				errorFileName = lex.filename
				errorLine = lex.line
				errorColumn = lex.column
				hasError = true

				/*
				 *	First, scan backwards from the current state, looking for one
				 *	which has an 'error' symbol.
				 */

				var ix = stack.count
				while (ix > 0) && !foundError {
					ix -= 1
					let si = stack[ix]
					action = actionForState(si.state, token: CompilerParser.K_ERRORTOKEN)
					if (action >= 0) && (action != Int.max) {

						/*
						 *	Encountered error state. If the user has defined an
						 *	error token, we ultimately will want to (a) unwind
						 *	the stack until we find a state which handles the
						 *	error transition. We then .
						 */

						if ix+1 < stack.count {
							stack.removeSubrange(ix+1..<stack.count)
						}

						/*
						 *	At this point we perform a shift to our new error
						 *	state.
						 */

						var s = CompilerParser.Stack()
						s.state = UInt16(action)
						s.value = lex.value

						s.filename = lex.filename
						s.line = lex.line
						s.column = lex.column

						stack.append(s)

						/*
						 *	Second, we start pulling symbols until we find a symbol
						 *	that shifts, or until we hit the end of file symbol.
						 *	This becomes our current token for parsing
						 */

						while (true) {
							a = lex.lex()
							action = actionForState(s.state, token: a)
							if (action >= 0) && (action != Int.max) {
								/*
								 *	Valid shift. This becomes our current token,
								 *	and we resume processing.
								 */

								foundError = true
								break
							} else if (a == CompilerParser.K_EOFTOKEN) || (a == -1) {
								/*
								 *	We ran out of tokens. At this point all
								 *	we can do is print an error and force quit
								 */

								error(code: CompilerParser.ERROR_SYNTAX)
								stack.removeAll()
								return false
							}
						}
					}
				}
				if foundError {
					continue
				}

				/*
				 *	If we reach this point, there is no error we can recover to.
				 *	So figure this out on our own.
				 *
				 *	First, we see if the state we're in has a limited number of
				 *	choices. For example, in C, the 'for' keyword will always be
				 *	followed by a '(' token, so we can offer to automatically
				 *	insert that token.
				 */

				let actionMin: Int = Int(CompilerParser.ActionI[Int(s.state)])
				let actionMax: Int = Int(CompilerParser.ActionI[Int(s.state) + 1])
				var actionVal: Int = actionMin
				var actionState: Int16 = -1

				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == -1 {
						if act >= 0 {
							actionState = act;
							actionVal = ix
						}
					} else {
						actionState = -1
						break
					}
				}

				if actionState != -1 {
					/*
					 *	We can accomplish this transition with one token. Print
					 *	an error, and do a shift on the state with an empty value.
					 */

					let tokenStr = tokenToString(CompilerParser.ActionJ[actionVal])
					error(code: CompilerParser.ERROR_MISSINGTOKEN, data: ["token": tokenStr as AnyObject])


					/*
					 *	Perform a shift but do not pull a new token
					 */

					let top = stack.last!

					var s = CompilerParser.Stack()

					s.state = UInt16(actionState)
					s.value = lex.value

					s.filename = top.filename
					s.line = top.line
					s.column = top.column

					stack.append(s)
					continue
				}

				/*
				 *	See if we have a limited choice in reductions. If this can
				 *	only reduce to a single state, try that reduction.
				 */

				actionState = 0
				for ix in actionMin..<actionMax {
					let act = CompilerParser.ActionA[ix]
					if actionState == 0 {
						if (act < 0) && (actionState != act) {
							actionState = act;
						}
					} else {
						actionState = 0
						break
					}
				}

				if actionState != 0 {
					/*
					 *	We have one possible reduction. Try that. Note that this
					 *	will trigger a syntax error since we're reducing down
					 *	without the follow token. My hope is that the state we
					 *	transition to has a limited set of next tokens to follow.
					 */

					_ = reduce(action: Int16(action))
					continue;
				}

				/*
				 *	If we have a limited number of tokens which can follow,
				 *	print a list of them. Then shift by the first one we
				 *	find. We don't do this if the number of shifts is greater
				 *	than five.
				 */

				if actionMax - actionMin <= 5 {
					var list: [String] = []
					for ix in actionMin..<actionMax {
						list.append(tokenToString(CompilerParser.ActionJ[ix]))
					}

					error(code: CompilerParser.ERROR_MISSINGTOKENS, data: ["tokens": list as AnyObject])

					/*
					 *	Now we artificially insert the first of the list of
					 *	tokens as our action and continue.
					 */

					a = Int(CompilerParser.ActionJ[actionMin])
					continue;
				}

				/*
				 *	If we get here, things just went too far south. So we
				 *	skip a token, print syntax error and move on
				 */

				error(code:CompilerParser.ERROR_SYNTAX)
				a = lex.lex()
				if a == -1 {
					return false
				}

			} else if action >= 0 {
				/*
				 *	Shift operation.
				 */

				// Shift
				var s = CompilerParser.Stack()

				s.state = UInt16(action)
				s.value = lex.value

				s.filename = lex.filename
				s.line = lex.line
				s.column = lex.column

				stack.append(s)

				// Advance to next token.
				a = lex.lex()

				// Decrement our error count. If this is non-zero we're in an
				// error state, and we don't pass spurrous errors upwards
				if errorCount > 0 {
					errorCount -= 1
				}
			} else {
				/*
				 *	Reduce action. (Reduce is < 0, and the production to reduce
				 *	by is given below
				 */

				action = -action-1

				if !reduce(action: Int16(action)) {

					// If there is an error, this handles the error.
					// (This should not happen in practice).
					error(code:CompilerParser.ERROR_SYNTAX)

					// Advance to next token.
					a = lex.lex()
				}
			}
		}
	}

}
